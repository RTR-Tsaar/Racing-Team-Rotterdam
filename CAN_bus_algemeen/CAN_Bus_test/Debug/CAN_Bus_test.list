
CAN_Bus_test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002630  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000002c  0800273c  0800273c  0000373c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002768  08002768  0000405c  2**0
                  CONTENTS
  4 .ARM          00000000  08002768  08002768  0000405c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002768  08002768  0000405c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002768  08002768  00003768  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800276c  0800276c  0000376c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08002770  00004000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001ac  2000005c  080027cc  0000405c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000208  080027cc  00004208  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000405c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000fae9  00000000  00000000  00004085  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001f77  00000000  00000000  00013b6e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000ac0  00000000  00000000  00015ae8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000007f4  00000000  00000000  000165a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001840c  00000000  00000000  00016d9c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00008e84  00000000  00000000  0002f1a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00086e16  00000000  00000000  0003802c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000bee42  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000305c  00000000  00000000  000bee88  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000068  00000000  00000000  000c1ee4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	2000005c 	.word	0x2000005c
 8000128:	00000000 	.word	0x00000000
 800012c:	08002724 	.word	0x08002724

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000060 	.word	0x20000060
 8000148:	08002724 	.word	0x08002724

0800014c <_ZNSt12_Vector_baseImSaImEEC1Ev>:
      allocator_type
      get_allocator() const _GLIBCXX_NOEXCEPT
      { return allocator_type(_M_get_Tp_allocator()); }

#if __cplusplus >= 201103L
      _Vector_base() = default;
 800014c:	b580      	push	{r7, lr}
 800014e:	b082      	sub	sp, #8
 8000150:	af00      	add	r7, sp, #0
 8000152:	6078      	str	r0, [r7, #4]
 8000154:	687b      	ldr	r3, [r7, #4]
 8000156:	4618      	mov	r0, r3
 8000158:	f000 f8ba 	bl	80002d0 <_ZNSt12_Vector_baseImSaImEE12_Vector_implC1Ev>
 800015c:	687b      	ldr	r3, [r7, #4]
 800015e:	4618      	mov	r0, r3
 8000160:	3708      	adds	r7, #8
 8000162:	46bd      	mov	sp, r7
 8000164:	bd80      	pop	{r7, pc}

08000166 <_ZNSt6vectorImSaImEEC1Ev>:

      /**
       *  @brief  Creates a %vector with no elements.
       */
#if __cplusplus >= 201103L
      vector() = default;
 8000166:	b580      	push	{r7, lr}
 8000168:	b082      	sub	sp, #8
 800016a:	af00      	add	r7, sp, #0
 800016c:	6078      	str	r0, [r7, #4]
 800016e:	687b      	ldr	r3, [r7, #4]
 8000170:	4618      	mov	r0, r3
 8000172:	f7ff ffeb 	bl	800014c <_ZNSt12_Vector_baseImSaImEEC1Ev>
 8000176:	687b      	ldr	r3, [r7, #4]
 8000178:	4618      	mov	r0, r3
 800017a:	3708      	adds	r7, #8
 800017c:	46bd      	mov	sp, r7
 800017e:	bd80      	pop	{r7, pc}

08000180 <_ZNSt12_Vector_baseIySaIyEEC1Ev>:
      _Vector_base() = default;
 8000180:	b580      	push	{r7, lr}
 8000182:	b082      	sub	sp, #8
 8000184:	af00      	add	r7, sp, #0
 8000186:	6078      	str	r0, [r7, #4]
 8000188:	687b      	ldr	r3, [r7, #4]
 800018a:	4618      	mov	r0, r3
 800018c:	f000 f8b0 	bl	80002f0 <_ZNSt12_Vector_baseIySaIyEE12_Vector_implC1Ev>
 8000190:	687b      	ldr	r3, [r7, #4]
 8000192:	4618      	mov	r0, r3
 8000194:	3708      	adds	r7, #8
 8000196:	46bd      	mov	sp, r7
 8000198:	bd80      	pop	{r7, pc}

0800019a <_ZNSt6vectorIySaIyEEC1Ev>:
      vector() = default;
 800019a:	b580      	push	{r7, lr}
 800019c:	b082      	sub	sp, #8
 800019e:	af00      	add	r7, sp, #0
 80001a0:	6078      	str	r0, [r7, #4]
 80001a2:	687b      	ldr	r3, [r7, #4]
 80001a4:	4618      	mov	r0, r3
 80001a6:	f7ff ffeb 	bl	8000180 <_ZNSt12_Vector_baseIySaIyEEC1Ev>
 80001aa:	687b      	ldr	r3, [r7, #4]
 80001ac:	4618      	mov	r0, r3
 80001ae:	3708      	adds	r7, #8
 80001b0:	46bd      	mov	sp, r7
 80001b2:	bd80      	pop	{r7, pc}

080001b4 <_ZN6CANBusC1Ev>:
 *      Author: Dennis Boekholtz
 */

#include "CAN_bus.hpp"

CANBus::CANBus() {
 80001b4:	b580      	push	{r7, lr}
 80001b6:	b082      	sub	sp, #8
 80001b8:	af00      	add	r7, sp, #0
 80001ba:	6078      	str	r0, [r7, #4]
 80001bc:	687b      	ldr	r3, [r7, #4]
 80001be:	331c      	adds	r3, #28
 80001c0:	4618      	mov	r0, r3
 80001c2:	f7ff ffd0 	bl	8000166 <_ZNSt6vectorImSaImEEC1Ev>
 80001c6:	687b      	ldr	r3, [r7, #4]
 80001c8:	3328      	adds	r3, #40	@ 0x28
 80001ca:	4618      	mov	r0, r3
 80001cc:	f7ff ffe5 	bl	800019a <_ZNSt6vectorIySaIyEEC1Ev>
    // Constructor implementation (if needed)
}
 80001d0:	687b      	ldr	r3, [r7, #4]
 80001d2:	4618      	mov	r0, r3
 80001d4:	3708      	adds	r7, #8
 80001d6:	46bd      	mov	sp, r7
 80001d8:	bd80      	pop	{r7, pc}

080001da <_ZN6CANBus5startEP17CAN_HandleTypeDefh>:

void CANBus::start(CAN_HandleTypeDef* hcan, uint8_t LIDEE){
 80001da:	b580      	push	{r7, lr}
 80001dc:	b084      	sub	sp, #16
 80001de:	af00      	add	r7, sp, #0
 80001e0:	60f8      	str	r0, [r7, #12]
 80001e2:	60b9      	str	r1, [r7, #8]
 80001e4:	4613      	mov	r3, r2
 80001e6:	71fb      	strb	r3, [r7, #7]

	// Start CAN bus
    HAL_CAN_Start(hcan);
 80001e8:	68b8      	ldr	r0, [r7, #8]
 80001ea:	f000 fef7 	bl	8000fdc <HAL_CAN_Start>
    HAL_CAN_ActivateNotification(hcan, CAN_IT_RX_FIFO0_MSG_PENDING);
 80001ee:	2102      	movs	r1, #2
 80001f0:	68b8      	ldr	r0, [r7, #8]
 80001f2:	f001 f927 	bl	8001444 <HAL_CAN_ActivateNotification>

    if(LIDEE == CAN_ID_STD){
 80001f6:	79fb      	ldrb	r3, [r7, #7]
 80001f8:	2b00      	cmp	r3, #0
 80001fa:	d107      	bne.n	800020c <_ZN6CANBus5startEP17CAN_HandleTypeDefh+0x32>
        TxHeader.ExtId = 0;		// 0 is standaard ID , 4 is extended ID
 80001fc:	68fb      	ldr	r3, [r7, #12]
 80001fe:	2200      	movs	r2, #0
 8000200:	605a      	str	r2, [r3, #4]
        TxHeader.StdId = 2047;  // Set CAN ID to 2047
 8000202:	68fb      	ldr	r3, [r7, #12]
 8000204:	f240 72ff 	movw	r2, #2047	@ 0x7ff
 8000208:	601a      	str	r2, [r3, #0]
 800020a:	e006      	b.n	800021a <_ZN6CANBus5startEP17CAN_HandleTypeDefh+0x40>
    }
    else{
        TxHeader.ExtId = 2047;		// 0 is standaard ID , 4 is extended ID
 800020c:	68fb      	ldr	r3, [r7, #12]
 800020e:	f240 72ff 	movw	r2, #2047	@ 0x7ff
 8000212:	605a      	str	r2, [r3, #4]
        TxHeader.StdId = 0;  // Set CAN ID to 2047
 8000214:	68fb      	ldr	r3, [r7, #12]
 8000216:	2200      	movs	r2, #0
 8000218:	601a      	str	r2, [r3, #0]
    }
    // Initialize default values for CAN headers
    TxHeader.DLC = 8;
 800021a:	68fb      	ldr	r3, [r7, #12]
 800021c:	2208      	movs	r2, #8
 800021e:	611a      	str	r2, [r3, #16]
    TxHeader.IDE = LIDEE;    // standaard ID = CAN_ID_STD, extended ID = CAN_ID_EXT
 8000220:	79fa      	ldrb	r2, [r7, #7]
 8000222:	68fb      	ldr	r3, [r7, #12]
 8000224:	609a      	str	r2, [r3, #8]
    TxHeader.RTR = CAN_RTR_DATA;
 8000226:	68fb      	ldr	r3, [r7, #12]
 8000228:	2200      	movs	r2, #0
 800022a:	60da      	str	r2, [r3, #12]
    TxHeader.TransmitGlobalTime = DISABLE;
 800022c:	68fb      	ldr	r3, [r7, #12]
 800022e:	2200      	movs	r2, #0
 8000230:	751a      	strb	r2, [r3, #20]

}
 8000232:	bf00      	nop
 8000234:	3710      	adds	r7, #16
 8000236:	46bd      	mov	sp, r7
 8000238:	bd80      	pop	{r7, pc}

0800023a <_ZN6CANBus8transmitEP17CAN_HandleTypeDefPht>:

// Transmit data
void CANBus::transmit(CAN_HandleTypeDef* hcan, uint8_t* TxData, uint16_t id) {
 800023a:	b580      	push	{r7, lr}
 800023c:	b084      	sub	sp, #16
 800023e:	af00      	add	r7, sp, #0
 8000240:	60f8      	str	r0, [r7, #12]
 8000242:	60b9      	str	r1, [r7, #8]
 8000244:	607a      	str	r2, [r7, #4]
 8000246:	807b      	strh	r3, [r7, #2]
    if (TxHeader.IDE == CAN_ID_STD){
 8000248:	68fb      	ldr	r3, [r7, #12]
 800024a:	689b      	ldr	r3, [r3, #8]
 800024c:	2b00      	cmp	r3, #0
 800024e:	d103      	bne.n	8000258 <_ZN6CANBus8transmitEP17CAN_HandleTypeDefPht+0x1e>
    	TxHeader.StdId = id;
 8000250:	887a      	ldrh	r2, [r7, #2]
 8000252:	68fb      	ldr	r3, [r7, #12]
 8000254:	601a      	str	r2, [r3, #0]
 8000256:	e002      	b.n	800025e <_ZN6CANBus8transmitEP17CAN_HandleTypeDefPht+0x24>
    }
    else{
    	TxHeader.ExtId = id;
 8000258:	887a      	ldrh	r2, [r7, #2]
 800025a:	68fb      	ldr	r3, [r7, #12]
 800025c:	605a      	str	r2, [r3, #4]
    }
	TxHeader.DLC = 8;
 800025e:	68fb      	ldr	r3, [r7, #12]
 8000260:	2208      	movs	r2, #8
 8000262:	611a      	str	r2, [r3, #16]
    HAL_CAN_AddTxMessage(hcan, &TxHeader, TxData, &TxMailbox);
 8000264:	68f9      	ldr	r1, [r7, #12]
 8000266:	68fb      	ldr	r3, [r7, #12]
 8000268:	3318      	adds	r3, #24
 800026a:	687a      	ldr	r2, [r7, #4]
 800026c:	68b8      	ldr	r0, [r7, #8]
 800026e:	f000 fef9 	bl	8001064 <HAL_CAN_AddTxMessage>
}
 8000272:	bf00      	nop
 8000274:	3710      	adds	r7, #16
 8000276:	46bd      	mov	sp, r7
 8000278:	bd80      	pop	{r7, pc}

0800027a <_ZN6CANBus15configureFilterEP17CAN_HandleTypeDeftthh>:

void CANBus::configureFilter(CAN_HandleTypeDef* hcan, uint16_t ID, uint16_t Mask, uint8_t filterBank, uint8_t slaveFilterBank){
 800027a:	b580      	push	{r7, lr}
 800027c:	b08e      	sub	sp, #56	@ 0x38
 800027e:	af00      	add	r7, sp, #0
 8000280:	60f8      	str	r0, [r7, #12]
 8000282:	60b9      	str	r1, [r7, #8]
 8000284:	4611      	mov	r1, r2
 8000286:	461a      	mov	r2, r3
 8000288:	460b      	mov	r3, r1
 800028a:	80fb      	strh	r3, [r7, #6]
 800028c:	4613      	mov	r3, r2
 800028e:	80bb      	strh	r3, [r7, #4]

	  CAN_FilterTypeDef canFilterConfig;

	  canFilterConfig.FilterActivation = CAN_FILTER_ENABLE;
 8000290:	2301      	movs	r3, #1
 8000292:	633b      	str	r3, [r7, #48]	@ 0x30
	  canFilterConfig.FilterBank = filterBank;
 8000294:	f897 3040 	ldrb.w	r3, [r7, #64]	@ 0x40
 8000298:	627b      	str	r3, [r7, #36]	@ 0x24
	  canFilterConfig.FilterFIFOAssignment = CAN_RX_FIFO0;
 800029a:	2300      	movs	r3, #0
 800029c:	623b      	str	r3, [r7, #32]
	  canFilterConfig.FilterIdHigh = 0 << 5;
 800029e:	2300      	movs	r3, #0
 80002a0:	613b      	str	r3, [r7, #16]
	  canFilterConfig.FilterIdLow = 0x0000;
 80002a2:	2300      	movs	r3, #0
 80002a4:	617b      	str	r3, [r7, #20]
	  canFilterConfig.FilterMaskIdHigh = 0 << 5;
 80002a6:	2300      	movs	r3, #0
 80002a8:	61bb      	str	r3, [r7, #24]
	  canFilterConfig.FilterMaskIdLow = 0x0000;
 80002aa:	2300      	movs	r3, #0
 80002ac:	61fb      	str	r3, [r7, #28]
	  canFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
 80002ae:	2300      	movs	r3, #0
 80002b0:	62bb      	str	r3, [r7, #40]	@ 0x28
	  canFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
 80002b2:	2301      	movs	r3, #1
 80002b4:	62fb      	str	r3, [r7, #44]	@ 0x2c
	  canFilterConfig.SlaveStartFilterBank = slaveFilterBank;
 80002b6:	f897 3044 	ldrb.w	r3, [r7, #68]	@ 0x44
 80002ba:	637b      	str	r3, [r7, #52]	@ 0x34

	  HAL_CAN_ConfigFilter(hcan, &canFilterConfig);
 80002bc:	f107 0310 	add.w	r3, r7, #16
 80002c0:	4619      	mov	r1, r3
 80002c2:	68b8      	ldr	r0, [r7, #8]
 80002c4:	f000 fdc1 	bl	8000e4a <HAL_CAN_ConfigFilter>
}
 80002c8:	bf00      	nop
 80002ca:	3738      	adds	r7, #56	@ 0x38
 80002cc:	46bd      	mov	sp, r7
 80002ce:	bd80      	pop	{r7, pc}

080002d0 <_ZNSt12_Vector_baseImSaImEE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 80002d0:	b580      	push	{r7, lr}
 80002d2:	b082      	sub	sp, #8
 80002d4:	af00      	add	r7, sp, #0
 80002d6:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 80002d8:	6878      	ldr	r0, [r7, #4]
 80002da:	f000 f819 	bl	8000310 <_ZNSaImEC1Ev>
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	4618      	mov	r0, r3
 80002e2:	f000 f821 	bl	8000328 <_ZNSt12_Vector_baseImSaImEE17_Vector_impl_dataC1Ev>
	{ }
 80002e6:	687b      	ldr	r3, [r7, #4]
 80002e8:	4618      	mov	r0, r3
 80002ea:	3708      	adds	r7, #8
 80002ec:	46bd      	mov	sp, r7
 80002ee:	bd80      	pop	{r7, pc}

080002f0 <_ZNSt12_Vector_baseIySaIyEE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 80002f0:	b580      	push	{r7, lr}
 80002f2:	b082      	sub	sp, #8
 80002f4:	af00      	add	r7, sp, #0
 80002f6:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 80002f8:	6878      	ldr	r0, [r7, #4]
 80002fa:	f000 f853 	bl	80003a4 <_ZNSaIyEC1Ev>
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	4618      	mov	r0, r3
 8000302:	f000 f85b 	bl	80003bc <_ZNSt12_Vector_baseIySaIyEE17_Vector_impl_dataC1Ev>
	{ }
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	4618      	mov	r0, r3
 800030a:	3708      	adds	r7, #8
 800030c:	46bd      	mov	sp, r7
 800030e:	bd80      	pop	{r7, pc}

08000310 <_ZNSaImEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
 8000310:	b580      	push	{r7, lr}
 8000312:	b082      	sub	sp, #8
 8000314:	af00      	add	r7, sp, #0
 8000316:	6078      	str	r0, [r7, #4]
 8000318:	6878      	ldr	r0, [r7, #4]
 800031a:	f000 f88d 	bl	8000438 <_ZNSt15__new_allocatorImEC1Ev>
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	4618      	mov	r0, r3
 8000322:	3708      	adds	r7, #8
 8000324:	46bd      	mov	sp, r7
 8000326:	bd80      	pop	{r7, pc}

08000328 <_ZNSt12_Vector_baseImSaImEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 8000328:	b480      	push	{r7}
 800032a:	b083      	sub	sp, #12
 800032c:	af00      	add	r7, sp, #0
 800032e:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	2200      	movs	r2, #0
 8000334:	601a      	str	r2, [r3, #0]
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	2200      	movs	r2, #0
 800033a:	605a      	str	r2, [r3, #4]
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	2200      	movs	r2, #0
 8000340:	609a      	str	r2, [r3, #8]
	{ }
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	4618      	mov	r0, r3
 8000346:	370c      	adds	r7, #12
 8000348:	46bd      	mov	sp, r7
 800034a:	bc80      	pop	{r7}
 800034c:	4770      	bx	lr

0800034e <_ZNSt12_Vector_baseImSaImEE13_M_deallocateEPmj>:
      _M_deallocate(pointer __p, size_t __n)
 800034e:	b580      	push	{r7, lr}
 8000350:	b084      	sub	sp, #16
 8000352:	af00      	add	r7, sp, #0
 8000354:	60f8      	str	r0, [r7, #12]
 8000356:	60b9      	str	r1, [r7, #8]
 8000358:	607a      	str	r2, [r7, #4]
	if (__p)
 800035a:	68bb      	ldr	r3, [r7, #8]
 800035c:	2b00      	cmp	r3, #0
 800035e:	d005      	beq.n	800036c <_ZNSt12_Vector_baseImSaImEE13_M_deallocateEPmj+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 8000360:	68fb      	ldr	r3, [r7, #12]
 8000362:	687a      	ldr	r2, [r7, #4]
 8000364:	68b9      	ldr	r1, [r7, #8]
 8000366:	4618      	mov	r0, r3
 8000368:	f000 f870 	bl	800044c <_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmj>
      }
 800036c:	bf00      	nop
 800036e:	3710      	adds	r7, #16
 8000370:	46bd      	mov	sp, r7
 8000372:	bd80      	pop	{r7, pc}

08000374 <_ZNSt12_Vector_baseImSaImEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8000374:	b480      	push	{r7}
 8000376:	b083      	sub	sp, #12
 8000378:	af00      	add	r7, sp, #0
 800037a:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	4618      	mov	r0, r3
 8000380:	370c      	adds	r7, #12
 8000382:	46bd      	mov	sp, r7
 8000384:	bc80      	pop	{r7}
 8000386:	4770      	bx	lr

08000388 <_ZSt8_DestroyIPmmEvT_S1_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 8000388:	b580      	push	{r7, lr}
 800038a:	b084      	sub	sp, #16
 800038c:	af00      	add	r7, sp, #0
 800038e:	60f8      	str	r0, [r7, #12]
 8000390:	60b9      	str	r1, [r7, #8]
 8000392:	607a      	str	r2, [r7, #4]
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
 8000394:	68b9      	ldr	r1, [r7, #8]
 8000396:	68f8      	ldr	r0, [r7, #12]
 8000398:	f000 f867 	bl	800046a <_ZSt8_DestroyIPmEvT_S1_>
    }
 800039c:	bf00      	nop
 800039e:	3710      	adds	r7, #16
 80003a0:	46bd      	mov	sp, r7
 80003a2:	bd80      	pop	{r7, pc}

080003a4 <_ZNSaIyEC1Ev>:
 80003a4:	b580      	push	{r7, lr}
 80003a6:	b082      	sub	sp, #8
 80003a8:	af00      	add	r7, sp, #0
 80003aa:	6078      	str	r0, [r7, #4]
 80003ac:	6878      	ldr	r0, [r7, #4]
 80003ae:	f000 f869 	bl	8000484 <_ZNSt15__new_allocatorIyEC1Ev>
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	4618      	mov	r0, r3
 80003b6:	3708      	adds	r7, #8
 80003b8:	46bd      	mov	sp, r7
 80003ba:	bd80      	pop	{r7, pc}

080003bc <_ZNSt12_Vector_baseIySaIyEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
 80003bc:	b480      	push	{r7}
 80003be:	b083      	sub	sp, #12
 80003c0:	af00      	add	r7, sp, #0
 80003c2:	6078      	str	r0, [r7, #4]
	: _M_start(), _M_finish(), _M_end_of_storage()
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	2200      	movs	r2, #0
 80003c8:	601a      	str	r2, [r3, #0]
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	2200      	movs	r2, #0
 80003ce:	605a      	str	r2, [r3, #4]
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	2200      	movs	r2, #0
 80003d4:	609a      	str	r2, [r3, #8]
	{ }
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	4618      	mov	r0, r3
 80003da:	370c      	adds	r7, #12
 80003dc:	46bd      	mov	sp, r7
 80003de:	bc80      	pop	{r7}
 80003e0:	4770      	bx	lr

080003e2 <_ZNSt12_Vector_baseIySaIyEE13_M_deallocateEPyj>:
      _M_deallocate(pointer __p, size_t __n)
 80003e2:	b580      	push	{r7, lr}
 80003e4:	b084      	sub	sp, #16
 80003e6:	af00      	add	r7, sp, #0
 80003e8:	60f8      	str	r0, [r7, #12]
 80003ea:	60b9      	str	r1, [r7, #8]
 80003ec:	607a      	str	r2, [r7, #4]
	if (__p)
 80003ee:	68bb      	ldr	r3, [r7, #8]
 80003f0:	2b00      	cmp	r3, #0
 80003f2:	d005      	beq.n	8000400 <_ZNSt12_Vector_baseIySaIyEE13_M_deallocateEPyj+0x1e>
	  _Tr::deallocate(_M_impl, __p, __n);
 80003f4:	68fb      	ldr	r3, [r7, #12]
 80003f6:	687a      	ldr	r2, [r7, #4]
 80003f8:	68b9      	ldr	r1, [r7, #8]
 80003fa:	4618      	mov	r0, r3
 80003fc:	f000 f84c 	bl	8000498 <_ZNSt16allocator_traitsISaIyEE10deallocateERS0_Pyj>
      }
 8000400:	bf00      	nop
 8000402:	3710      	adds	r7, #16
 8000404:	46bd      	mov	sp, r7
 8000406:	bd80      	pop	{r7, pc}

08000408 <_ZNSt12_Vector_baseIySaIyEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8000408:	b480      	push	{r7}
 800040a:	b083      	sub	sp, #12
 800040c:	af00      	add	r7, sp, #0
 800040e:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	4618      	mov	r0, r3
 8000414:	370c      	adds	r7, #12
 8000416:	46bd      	mov	sp, r7
 8000418:	bc80      	pop	{r7}
 800041a:	4770      	bx	lr

0800041c <_ZSt8_DestroyIPyyEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 800041c:	b580      	push	{r7, lr}
 800041e:	b084      	sub	sp, #16
 8000420:	af00      	add	r7, sp, #0
 8000422:	60f8      	str	r0, [r7, #12]
 8000424:	60b9      	str	r1, [r7, #8]
 8000426:	607a      	str	r2, [r7, #4]
      _Destroy(__first, __last);
 8000428:	68b9      	ldr	r1, [r7, #8]
 800042a:	68f8      	ldr	r0, [r7, #12]
 800042c:	f000 f843 	bl	80004b6 <_ZSt8_DestroyIPyEvT_S1_>
    }
 8000430:	bf00      	nop
 8000432:	3710      	adds	r7, #16
 8000434:	46bd      	mov	sp, r7
 8000436:	bd80      	pop	{r7, pc}

08000438 <_ZNSt15__new_allocatorImEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8000438:	b480      	push	{r7}
 800043a:	b083      	sub	sp, #12
 800043c:	af00      	add	r7, sp, #0
 800043e:	6078      	str	r0, [r7, #4]
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	4618      	mov	r0, r3
 8000444:	370c      	adds	r7, #12
 8000446:	46bd      	mov	sp, r7
 8000448:	bc80      	pop	{r7}
 800044a:	4770      	bx	lr

0800044c <_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmj>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 800044c:	b580      	push	{r7, lr}
 800044e:	b084      	sub	sp, #16
 8000450:	af00      	add	r7, sp, #0
 8000452:	60f8      	str	r0, [r7, #12]
 8000454:	60b9      	str	r1, [r7, #8]
 8000456:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8000458:	687a      	ldr	r2, [r7, #4]
 800045a:	68b9      	ldr	r1, [r7, #8]
 800045c:	68f8      	ldr	r0, [r7, #12]
 800045e:	f000 f837 	bl	80004d0 <_ZNSt15__new_allocatorImE10deallocateEPmj>
 8000462:	bf00      	nop
 8000464:	3710      	adds	r7, #16
 8000466:	46bd      	mov	sp, r7
 8000468:	bd80      	pop	{r7, pc}

0800046a <_ZSt8_DestroyIPmEvT_S1_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 800046a:	b580      	push	{r7, lr}
 800046c:	b082      	sub	sp, #8
 800046e:	af00      	add	r7, sp, #0
 8000470:	6078      	str	r0, [r7, #4]
 8000472:	6039      	str	r1, [r7, #0]
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
 8000474:	6839      	ldr	r1, [r7, #0]
 8000476:	6878      	ldr	r0, [r7, #4]
 8000478:	f000 f83a 	bl	80004f0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPmEEvT_S3_>
    }
 800047c:	bf00      	nop
 800047e:	3708      	adds	r7, #8
 8000480:	46bd      	mov	sp, r7
 8000482:	bd80      	pop	{r7, pc}

08000484 <_ZNSt15__new_allocatorIyEC1Ev>:
 8000484:	b480      	push	{r7}
 8000486:	b083      	sub	sp, #12
 8000488:	af00      	add	r7, sp, #0
 800048a:	6078      	str	r0, [r7, #4]
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	4618      	mov	r0, r3
 8000490:	370c      	adds	r7, #12
 8000492:	46bd      	mov	sp, r7
 8000494:	bc80      	pop	{r7}
 8000496:	4770      	bx	lr

08000498 <_ZNSt16allocator_traitsISaIyEE10deallocateERS0_Pyj>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8000498:	b580      	push	{r7, lr}
 800049a:	b084      	sub	sp, #16
 800049c:	af00      	add	r7, sp, #0
 800049e:	60f8      	str	r0, [r7, #12]
 80004a0:	60b9      	str	r1, [r7, #8]
 80004a2:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 80004a4:	687a      	ldr	r2, [r7, #4]
 80004a6:	68b9      	ldr	r1, [r7, #8]
 80004a8:	68f8      	ldr	r0, [r7, #12]
 80004aa:	f000 f82b 	bl	8000504 <_ZNSt15__new_allocatorIyE10deallocateEPyj>
 80004ae:	bf00      	nop
 80004b0:	3710      	adds	r7, #16
 80004b2:	46bd      	mov	sp, r7
 80004b4:	bd80      	pop	{r7, pc}

080004b6 <_ZSt8_DestroyIPyEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 80004b6:	b580      	push	{r7, lr}
 80004b8:	b082      	sub	sp, #8
 80004ba:	af00      	add	r7, sp, #0
 80004bc:	6078      	str	r0, [r7, #4]
 80004be:	6039      	str	r1, [r7, #0]
	__destroy(__first, __last);
 80004c0:	6839      	ldr	r1, [r7, #0]
 80004c2:	6878      	ldr	r0, [r7, #4]
 80004c4:	f000 f82e 	bl	8000524 <_ZNSt12_Destroy_auxILb1EE9__destroyIPyEEvT_S3_>
    }
 80004c8:	bf00      	nop
 80004ca:	3708      	adds	r7, #8
 80004cc:	46bd      	mov	sp, r7
 80004ce:	bd80      	pop	{r7, pc}

080004d0 <_ZNSt15__new_allocatorImE10deallocateEPmj>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
 80004d0:	b580      	push	{r7, lr}
 80004d2:	b084      	sub	sp, #16
 80004d4:	af00      	add	r7, sp, #0
 80004d6:	60f8      	str	r0, [r7, #12]
 80004d8:	60b9      	str	r1, [r7, #8]
 80004da:	607a      	str	r2, [r7, #4]
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	009b      	lsls	r3, r3, #2
 80004e0:	4619      	mov	r1, r3
 80004e2:	68b8      	ldr	r0, [r7, #8]
 80004e4:	f002 f890 	bl	8002608 <_ZdlPvj>
      }
 80004e8:	bf00      	nop
 80004ea:	3710      	adds	r7, #16
 80004ec:	46bd      	mov	sp, r7
 80004ee:	bd80      	pop	{r7, pc}

080004f0 <_ZNSt12_Destroy_auxILb1EE9__destroyIPmEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
 80004f0:	b480      	push	{r7}
 80004f2:	b083      	sub	sp, #12
 80004f4:	af00      	add	r7, sp, #0
 80004f6:	6078      	str	r0, [r7, #4]
 80004f8:	6039      	str	r1, [r7, #0]
 80004fa:	bf00      	nop
 80004fc:	370c      	adds	r7, #12
 80004fe:	46bd      	mov	sp, r7
 8000500:	bc80      	pop	{r7}
 8000502:	4770      	bx	lr

08000504 <_ZNSt15__new_allocatorIyE10deallocateEPyj>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
 8000504:	b580      	push	{r7, lr}
 8000506:	b084      	sub	sp, #16
 8000508:	af00      	add	r7, sp, #0
 800050a:	60f8      	str	r0, [r7, #12]
 800050c:	60b9      	str	r1, [r7, #8]
 800050e:	607a      	str	r2, [r7, #4]
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	00db      	lsls	r3, r3, #3
 8000514:	4619      	mov	r1, r3
 8000516:	68b8      	ldr	r0, [r7, #8]
 8000518:	f002 f876 	bl	8002608 <_ZdlPvj>
      }
 800051c:	bf00      	nop
 800051e:	3710      	adds	r7, #16
 8000520:	46bd      	mov	sp, r7
 8000522:	bd80      	pop	{r7, pc}

08000524 <_ZNSt12_Destroy_auxILb1EE9__destroyIPyEEvT_S3_>:
 8000524:	b480      	push	{r7}
 8000526:	b083      	sub	sp, #12
 8000528:	af00      	add	r7, sp, #0
 800052a:	6078      	str	r0, [r7, #4]
 800052c:	6039      	str	r1, [r7, #0]
 800052e:	bf00      	nop
 8000530:	370c      	adds	r7, #12
 8000532:	46bd      	mov	sp, r7
 8000534:	bc80      	pop	{r7}
 8000536:	4770      	bx	lr

08000538 <HAL_CAN_RxFifo0MsgPendingCallback>:

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan){
 8000538:	b580      	push	{r7, lr}
 800053a:	b082      	sub	sp, #8
 800053c:	af00      	add	r7, sp, #0
 800053e:	6078      	str	r0, [r7, #4]
	HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &RxHeader, RxData);
 8000540:	4b07      	ldr	r3, [pc, #28]	@ (8000560 <HAL_CAN_RxFifo0MsgPendingCallback+0x28>)
 8000542:	4a08      	ldr	r2, [pc, #32]	@ (8000564 <HAL_CAN_RxFifo0MsgPendingCallback+0x2c>)
 8000544:	2100      	movs	r1, #0
 8000546:	6878      	ldr	r0, [r7, #4]
 8000548:	f000 fe5b 	bl	8001202 <HAL_CAN_GetRxMessage>
	HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 800054c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000550:	4805      	ldr	r0, [pc, #20]	@ (8000568 <HAL_CAN_RxFifo0MsgPendingCallback+0x30>)
 8000552:	f001 fc61 	bl	8001e18 <HAL_GPIO_TogglePin>



}
 8000556:	bf00      	nop
 8000558:	3708      	adds	r7, #8
 800055a:	46bd      	mov	sp, r7
 800055c:	bd80      	pop	{r7, pc}
 800055e:	bf00      	nop
 8000560:	200000bc 	.word	0x200000bc
 8000564:	200000a0 	.word	0x200000a0
 8000568:	40011000 	.word	0x40011000

0800056c <_ZN6CANBusD1Ev>:
#include "stm32f1xx_hal.h"
#include "main.hpp"
#include <vector>
#include <cstdint>

class CANBus {
 800056c:	b580      	push	{r7, lr}
 800056e:	b082      	sub	sp, #8
 8000570:	af00      	add	r7, sp, #0
 8000572:	6078      	str	r0, [r7, #4]
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	3328      	adds	r3, #40	@ 0x28
 8000578:	4618      	mov	r0, r3
 800057a:	f000 f95a 	bl	8000832 <_ZNSt6vectorIySaIyEED1Ev>
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	331c      	adds	r3, #28
 8000582:	4618      	mov	r0, r3
 8000584:	f000 f93a 	bl	80007fc <_ZNSt6vectorImSaImEED1Ev>
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	4618      	mov	r0, r3
 800058c:	3708      	adds	r7, #8
 800058e:	46bd      	mov	sp, r7
 8000590:	bd80      	pop	{r7, pc}
	...

08000594 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000594:	b580      	push	{r7, lr}
 8000596:	b092      	sub	sp, #72	@ 0x48
 8000598:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN 1 */
	CANBus canBus;
 800059a:	f107 0314 	add.w	r3, r7, #20
 800059e:	4618      	mov	r0, r3
 80005a0:	f7ff fe08 	bl	80001b4 <_ZN6CANBusC1Ev>
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80005a4:	f000 fad0 	bl	8000b48 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80005a8:	f000 f834 	bl	8000614 <_Z18SystemClock_Configv>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80005ac:	f000 f8d4 	bl	8000758 <_ZL12MX_GPIO_Initv>
  MX_CAN_Init();
 80005b0:	f000 f880 	bl	80006b4 <_ZL11MX_CAN_Initv>
  /* USER CODE BEGIN 2 */

  uint8_t trump[8] = {0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08}; // Example data
 80005b4:	4a14      	ldr	r2, [pc, #80]	@ (8000608 <main+0x74>)
 80005b6:	463b      	mov	r3, r7
 80005b8:	e892 0003 	ldmia.w	r2, {r0, r1}
 80005bc:	e883 0003 	stmia.w	r3, {r0, r1}

  canBus.start(&hcan, CAN_ID_STD);
 80005c0:	f107 0314 	add.w	r3, r7, #20
 80005c4:	2200      	movs	r2, #0
 80005c6:	4911      	ldr	r1, [pc, #68]	@ (800060c <main+0x78>)
 80005c8:	4618      	mov	r0, r3
 80005ca:	f7ff fe06 	bl	80001da <_ZN6CANBus5startEP17CAN_HandleTypeDefh>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13,GPIO_PIN_RESET);
 80005ce:	2200      	movs	r2, #0
 80005d0:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80005d4:	480e      	ldr	r0, [pc, #56]	@ (8000610 <main+0x7c>)
 80005d6:	f001 fc07 	bl	8001de8 <HAL_GPIO_WritePin>
	canBus.transmit(&hcan, trump, 446);
 80005da:	463a      	mov	r2, r7
 80005dc:	f107 0014 	add.w	r0, r7, #20
 80005e0:	f44f 73df 	mov.w	r3, #446	@ 0x1be
 80005e4:	4909      	ldr	r1, [pc, #36]	@ (800060c <main+0x78>)
 80005e6:	f7ff fe28 	bl	800023a <_ZN6CANBus8transmitEP17CAN_HandleTypeDefPht>
	HAL_Delay(100);
 80005ea:	2064      	movs	r0, #100	@ 0x64
 80005ec:	f000 fb0e 	bl	8000c0c <HAL_Delay>
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13,GPIO_PIN_SET);
 80005f0:	2201      	movs	r2, #1
 80005f2:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80005f6:	4806      	ldr	r0, [pc, #24]	@ (8000610 <main+0x7c>)
 80005f8:	f001 fbf6 	bl	8001de8 <HAL_GPIO_WritePin>
	HAL_Delay(1000);
 80005fc:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8000600:	f000 fb04 	bl	8000c0c <HAL_Delay>
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13,GPIO_PIN_RESET);
 8000604:	bf00      	nop
 8000606:	e7e2      	b.n	80005ce <main+0x3a>
 8000608:	0800273c 	.word	0x0800273c
 800060c:	20000078 	.word	0x20000078
 8000610:	40011000 	.word	0x40011000

08000614 <_Z18SystemClock_Configv>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000614:	b580      	push	{r7, lr}
 8000616:	b090      	sub	sp, #64	@ 0x40
 8000618:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800061a:	f107 0318 	add.w	r3, r7, #24
 800061e:	2228      	movs	r2, #40	@ 0x28
 8000620:	2100      	movs	r1, #0
 8000622:	4618      	mov	r0, r3
 8000624:	f002 f808 	bl	8002638 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000628:	1d3b      	adds	r3, r7, #4
 800062a:	2200      	movs	r2, #0
 800062c:	601a      	str	r2, [r3, #0]
 800062e:	605a      	str	r2, [r3, #4]
 8000630:	609a      	str	r2, [r3, #8]
 8000632:	60da      	str	r2, [r3, #12]
 8000634:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000636:	2301      	movs	r3, #1
 8000638:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800063a:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800063e:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 8000640:	2300      	movs	r3, #0
 8000642:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000644:	2301      	movs	r3, #1
 8000646:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000648:	2302      	movs	r3, #2
 800064a:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800064c:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000650:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 8000652:	f44f 13e0 	mov.w	r3, #1835008	@ 0x1c0000
 8000656:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000658:	f107 0318 	add.w	r3, r7, #24
 800065c:	4618      	mov	r0, r3
 800065e:	f001 fbf5 	bl	8001e4c <HAL_RCC_OscConfig>
 8000662:	4603      	mov	r3, r0
 8000664:	2b00      	cmp	r3, #0
 8000666:	bf14      	ite	ne
 8000668:	2301      	movne	r3, #1
 800066a:	2300      	moveq	r3, #0
 800066c:	b2db      	uxtb	r3, r3
 800066e:	2b00      	cmp	r3, #0
 8000670:	d001      	beq.n	8000676 <_Z18SystemClock_Configv+0x62>
  {
    Error_Handler();
 8000672:	f000 f8bd 	bl	80007f0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000676:	230f      	movs	r3, #15
 8000678:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800067a:	2302      	movs	r3, #2
 800067c:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800067e:	2300      	movs	r3, #0
 8000680:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000682:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000686:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000688:	2300      	movs	r3, #0
 800068a:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800068c:	1d3b      	adds	r3, r7, #4
 800068e:	2102      	movs	r1, #2
 8000690:	4618      	mov	r0, r3
 8000692:	f001 fe5d 	bl	8002350 <HAL_RCC_ClockConfig>
 8000696:	4603      	mov	r3, r0
 8000698:	2b00      	cmp	r3, #0
 800069a:	bf14      	ite	ne
 800069c:	2301      	movne	r3, #1
 800069e:	2300      	moveq	r3, #0
 80006a0:	b2db      	uxtb	r3, r3
 80006a2:	2b00      	cmp	r3, #0
 80006a4:	d001      	beq.n	80006aa <_Z18SystemClock_Configv+0x96>
  {
    Error_Handler();
 80006a6:	f000 f8a3 	bl	80007f0 <Error_Handler>
  }
}
 80006aa:	bf00      	nop
 80006ac:	3740      	adds	r7, #64	@ 0x40
 80006ae:	46bd      	mov	sp, r7
 80006b0:	bd80      	pop	{r7, pc}
	...

080006b4 <_ZL11MX_CAN_Initv>:
  * @brief CAN Initialization Function
  * @param None
  * @retval None
  */
static void MX_CAN_Init(void)
{
 80006b4:	b580      	push	{r7, lr}
 80006b6:	b090      	sub	sp, #64	@ 0x40
 80006b8:	af02      	add	r7, sp, #8
  /* USER CODE END CAN_Init 0 */

  /* USER CODE BEGIN CAN_Init 1 */

  /* USER CODE END CAN_Init 1 */
  hcan.Instance = CAN1;
 80006ba:	4b25      	ldr	r3, [pc, #148]	@ (8000750 <_ZL11MX_CAN_Initv+0x9c>)
 80006bc:	4a25      	ldr	r2, [pc, #148]	@ (8000754 <_ZL11MX_CAN_Initv+0xa0>)
 80006be:	601a      	str	r2, [r3, #0]
  hcan.Init.Prescaler = 36;
 80006c0:	4b23      	ldr	r3, [pc, #140]	@ (8000750 <_ZL11MX_CAN_Initv+0x9c>)
 80006c2:	2224      	movs	r2, #36	@ 0x24
 80006c4:	605a      	str	r2, [r3, #4]
  hcan.Init.Mode = CAN_MODE_LOOPBACK; // Canbus normal mode = CAN_MODE_NORMAL, canbus loopback mode = CAN_MODE_LOOPBACK
 80006c6:	4b22      	ldr	r3, [pc, #136]	@ (8000750 <_ZL11MX_CAN_Initv+0x9c>)
 80006c8:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80006cc:	609a      	str	r2, [r3, #8]
  hcan.Init.SyncJumpWidth = CAN_SJW_1TQ;
 80006ce:	4b20      	ldr	r3, [pc, #128]	@ (8000750 <_ZL11MX_CAN_Initv+0x9c>)
 80006d0:	2200      	movs	r2, #0
 80006d2:	60da      	str	r2, [r3, #12]
  hcan.Init.TimeSeg1 = CAN_BS1_2TQ;
 80006d4:	4b1e      	ldr	r3, [pc, #120]	@ (8000750 <_ZL11MX_CAN_Initv+0x9c>)
 80006d6:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80006da:	611a      	str	r2, [r3, #16]
  hcan.Init.TimeSeg2 = CAN_BS2_1TQ;
 80006dc:	4b1c      	ldr	r3, [pc, #112]	@ (8000750 <_ZL11MX_CAN_Initv+0x9c>)
 80006de:	2200      	movs	r2, #0
 80006e0:	615a      	str	r2, [r3, #20]
  hcan.Init.TimeTriggeredMode = DISABLE;
 80006e2:	4b1b      	ldr	r3, [pc, #108]	@ (8000750 <_ZL11MX_CAN_Initv+0x9c>)
 80006e4:	2200      	movs	r2, #0
 80006e6:	761a      	strb	r2, [r3, #24]
  hcan.Init.AutoBusOff = DISABLE;
 80006e8:	4b19      	ldr	r3, [pc, #100]	@ (8000750 <_ZL11MX_CAN_Initv+0x9c>)
 80006ea:	2200      	movs	r2, #0
 80006ec:	765a      	strb	r2, [r3, #25]
  hcan.Init.AutoWakeUp = DISABLE;
 80006ee:	4b18      	ldr	r3, [pc, #96]	@ (8000750 <_ZL11MX_CAN_Initv+0x9c>)
 80006f0:	2200      	movs	r2, #0
 80006f2:	769a      	strb	r2, [r3, #26]
  hcan.Init.AutoRetransmission = DISABLE;
 80006f4:	4b16      	ldr	r3, [pc, #88]	@ (8000750 <_ZL11MX_CAN_Initv+0x9c>)
 80006f6:	2200      	movs	r2, #0
 80006f8:	76da      	strb	r2, [r3, #27]
  hcan.Init.ReceiveFifoLocked = DISABLE;
 80006fa:	4b15      	ldr	r3, [pc, #84]	@ (8000750 <_ZL11MX_CAN_Initv+0x9c>)
 80006fc:	2200      	movs	r2, #0
 80006fe:	771a      	strb	r2, [r3, #28]
  hcan.Init.TransmitFifoPriority = DISABLE;
 8000700:	4b13      	ldr	r3, [pc, #76]	@ (8000750 <_ZL11MX_CAN_Initv+0x9c>)
 8000702:	2200      	movs	r2, #0
 8000704:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan) != HAL_OK)
 8000706:	4812      	ldr	r0, [pc, #72]	@ (8000750 <_ZL11MX_CAN_Initv+0x9c>)
 8000708:	f000 faa4 	bl	8000c54 <HAL_CAN_Init>
 800070c:	4603      	mov	r3, r0
 800070e:	2b00      	cmp	r3, #0
 8000710:	bf14      	ite	ne
 8000712:	2301      	movne	r3, #1
 8000714:	2300      	moveq	r3, #0
 8000716:	b2db      	uxtb	r3, r3
 8000718:	2b00      	cmp	r3, #0
 800071a:	d001      	beq.n	8000720 <_ZL11MX_CAN_Initv+0x6c>
  {
    Error_Handler();
 800071c:	f000 f868 	bl	80007f0 <Error_Handler>
  }
  /* USER CODE BEGIN CAN_Init 2 */
  CANBus canBus;
 8000720:	1d3b      	adds	r3, r7, #4
 8000722:	4618      	mov	r0, r3
 8000724:	f7ff fd46 	bl	80001b4 <_ZN6CANBusC1Ev>

  canBus.configureFilter(&hcan, 0b00100010000, 0b00110110000, 10, 0);
 8000728:	1d38      	adds	r0, r7, #4
 800072a:	2300      	movs	r3, #0
 800072c:	9301      	str	r3, [sp, #4]
 800072e:	230a      	movs	r3, #10
 8000730:	9300      	str	r3, [sp, #0]
 8000732:	f44f 73d8 	mov.w	r3, #432	@ 0x1b0
 8000736:	f44f 7288 	mov.w	r2, #272	@ 0x110
 800073a:	4905      	ldr	r1, [pc, #20]	@ (8000750 <_ZL11MX_CAN_Initv+0x9c>)
 800073c:	f7ff fd9d 	bl	800027a <_ZN6CANBus15configureFilterEP17CAN_HandleTypeDeftthh>
  /* USER CODE END CAN_Init 2 */

}
 8000740:	1d3b      	adds	r3, r7, #4
 8000742:	4618      	mov	r0, r3
 8000744:	f7ff ff12 	bl	800056c <_ZN6CANBusD1Ev>
 8000748:	3738      	adds	r7, #56	@ 0x38
 800074a:	46bd      	mov	sp, r7
 800074c:	bd80      	pop	{r7, pc}
 800074e:	bf00      	nop
 8000750:	20000078 	.word	0x20000078
 8000754:	40006400 	.word	0x40006400

08000758 <_ZL12MX_GPIO_Initv>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000758:	b580      	push	{r7, lr}
 800075a:	b088      	sub	sp, #32
 800075c:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 800075e:	f107 0310 	add.w	r3, r7, #16
 8000762:	2200      	movs	r2, #0
 8000764:	601a      	str	r2, [r3, #0]
 8000766:	605a      	str	r2, [r3, #4]
 8000768:	609a      	str	r2, [r3, #8]
 800076a:	60da      	str	r2, [r3, #12]
	/* USER CODE BEGIN MX_GPIO_Init_1 */
	/* USER CODE END MX_GPIO_Init_1 */

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOC_CLK_ENABLE();
 800076c:	4b1e      	ldr	r3, [pc, #120]	@ (80007e8 <_ZL12MX_GPIO_Initv+0x90>)
 800076e:	699b      	ldr	r3, [r3, #24]
 8000770:	4a1d      	ldr	r2, [pc, #116]	@ (80007e8 <_ZL12MX_GPIO_Initv+0x90>)
 8000772:	f043 0310 	orr.w	r3, r3, #16
 8000776:	6193      	str	r3, [r2, #24]
 8000778:	4b1b      	ldr	r3, [pc, #108]	@ (80007e8 <_ZL12MX_GPIO_Initv+0x90>)
 800077a:	699b      	ldr	r3, [r3, #24]
 800077c:	f003 0310 	and.w	r3, r3, #16
 8000780:	60fb      	str	r3, [r7, #12]
 8000782:	68fb      	ldr	r3, [r7, #12]
	__HAL_RCC_GPIOD_CLK_ENABLE();
 8000784:	4b18      	ldr	r3, [pc, #96]	@ (80007e8 <_ZL12MX_GPIO_Initv+0x90>)
 8000786:	699b      	ldr	r3, [r3, #24]
 8000788:	4a17      	ldr	r2, [pc, #92]	@ (80007e8 <_ZL12MX_GPIO_Initv+0x90>)
 800078a:	f043 0320 	orr.w	r3, r3, #32
 800078e:	6193      	str	r3, [r2, #24]
 8000790:	4b15      	ldr	r3, [pc, #84]	@ (80007e8 <_ZL12MX_GPIO_Initv+0x90>)
 8000792:	699b      	ldr	r3, [r3, #24]
 8000794:	f003 0320 	and.w	r3, r3, #32
 8000798:	60bb      	str	r3, [r7, #8]
 800079a:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 800079c:	4b12      	ldr	r3, [pc, #72]	@ (80007e8 <_ZL12MX_GPIO_Initv+0x90>)
 800079e:	699b      	ldr	r3, [r3, #24]
 80007a0:	4a11      	ldr	r2, [pc, #68]	@ (80007e8 <_ZL12MX_GPIO_Initv+0x90>)
 80007a2:	f043 0304 	orr.w	r3, r3, #4
 80007a6:	6193      	str	r3, [r2, #24]
 80007a8:	4b0f      	ldr	r3, [pc, #60]	@ (80007e8 <_ZL12MX_GPIO_Initv+0x90>)
 80007aa:	699b      	ldr	r3, [r3, #24]
 80007ac:	f003 0304 	and.w	r3, r3, #4
 80007b0:	607b      	str	r3, [r7, #4]
 80007b2:	687b      	ldr	r3, [r7, #4]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 80007b4:	2201      	movs	r2, #1
 80007b6:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80007ba:	480c      	ldr	r0, [pc, #48]	@ (80007ec <_ZL12MX_GPIO_Initv+0x94>)
 80007bc:	f001 fb14 	bl	8001de8 <HAL_GPIO_WritePin>

	/*Configure GPIO pin : PC13 */
	GPIO_InitStruct.Pin = GPIO_PIN_13;
 80007c0:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80007c4:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80007c6:	2301      	movs	r3, #1
 80007c8:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Pull = GPIO_PULLUP;
 80007ca:	2301      	movs	r3, #1
 80007cc:	61bb      	str	r3, [r7, #24]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 80007ce:	2301      	movs	r3, #1
 80007d0:	61fb      	str	r3, [r7, #28]
	HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80007d2:	f107 0310 	add.w	r3, r7, #16
 80007d6:	4619      	mov	r1, r3
 80007d8:	4804      	ldr	r0, [pc, #16]	@ (80007ec <_ZL12MX_GPIO_Initv+0x94>)
 80007da:	f001 f989 	bl	8001af0 <HAL_GPIO_Init>

	/* USER CODE BEGIN MX_GPIO_Init_2 */
	/* USER CODE END MX_GPIO_Init_2 */
}
 80007de:	bf00      	nop
 80007e0:	3720      	adds	r7, #32
 80007e2:	46bd      	mov	sp, r7
 80007e4:	bd80      	pop	{r7, pc}
 80007e6:	bf00      	nop
 80007e8:	40021000 	.word	0x40021000
 80007ec:	40011000 	.word	0x40011000

080007f0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80007f0:	b480      	push	{r7}
 80007f2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80007f4:	b672      	cpsid	i
}
 80007f6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80007f8:	bf00      	nop
 80007fa:	e7fd      	b.n	80007f8 <Error_Handler+0x8>

080007fc <_ZNSt6vectorImSaImEED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
 80007fc:	b5b0      	push	{r4, r5, r7, lr}
 80007fe:	b082      	sub	sp, #8
 8000800:	af00      	add	r7, sp, #0
 8000802:	6078      	str	r0, [r7, #4]
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8000804:	687b      	ldr	r3, [r7, #4]
 8000806:	681c      	ldr	r4, [r3, #0]
 8000808:	687b      	ldr	r3, [r7, #4]
 800080a:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 800080c:	687b      	ldr	r3, [r7, #4]
 800080e:	4618      	mov	r0, r3
 8000810:	f7ff fdb0 	bl	8000374 <_ZNSt12_Vector_baseImSaImEE19_M_get_Tp_allocatorEv>
 8000814:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 8000816:	461a      	mov	r2, r3
 8000818:	4629      	mov	r1, r5
 800081a:	4620      	mov	r0, r4
 800081c:	f7ff fdb4 	bl	8000388 <_ZSt8_DestroyIPmmEvT_S1_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
 8000820:	687b      	ldr	r3, [r7, #4]
 8000822:	4618      	mov	r0, r3
 8000824:	f000 f82c 	bl	8000880 <_ZNSt12_Vector_baseImSaImEED1Ev>
 8000828:	687b      	ldr	r3, [r7, #4]
 800082a:	4618      	mov	r0, r3
 800082c:	3708      	adds	r7, #8
 800082e:	46bd      	mov	sp, r7
 8000830:	bdb0      	pop	{r4, r5, r7, pc}

08000832 <_ZNSt6vectorIySaIyEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
 8000832:	b5b0      	push	{r4, r5, r7, lr}
 8000834:	b082      	sub	sp, #8
 8000836:	af00      	add	r7, sp, #0
 8000838:	6078      	str	r0, [r7, #4]
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800083a:	687b      	ldr	r3, [r7, #4]
 800083c:	681c      	ldr	r4, [r3, #0]
 800083e:	687b      	ldr	r3, [r7, #4]
 8000840:	685d      	ldr	r5, [r3, #4]
		      _M_get_Tp_allocator());
 8000842:	687b      	ldr	r3, [r7, #4]
 8000844:	4618      	mov	r0, r3
 8000846:	f7ff fddf 	bl	8000408 <_ZNSt12_Vector_baseIySaIyEE19_M_get_Tp_allocatorEv>
 800084a:	4603      	mov	r3, r0
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 800084c:	461a      	mov	r2, r3
 800084e:	4629      	mov	r1, r5
 8000850:	4620      	mov	r0, r4
 8000852:	f7ff fde3 	bl	800041c <_ZSt8_DestroyIPyyEvT_S1_RSaIT0_E>
      }
 8000856:	687b      	ldr	r3, [r7, #4]
 8000858:	4618      	mov	r0, r3
 800085a:	f000 f836 	bl	80008ca <_ZNSt12_Vector_baseIySaIyEED1Ev>
 800085e:	687b      	ldr	r3, [r7, #4]
 8000860:	4618      	mov	r0, r3
 8000862:	3708      	adds	r7, #8
 8000864:	46bd      	mov	sp, r7
 8000866:	bdb0      	pop	{r4, r5, r7, pc}

08000868 <_ZNSt12_Vector_baseImSaImEE12_Vector_implD1Ev>:
      struct _Vector_impl
 8000868:	b580      	push	{r7, lr}
 800086a:	b082      	sub	sp, #8
 800086c:	af00      	add	r7, sp, #0
 800086e:	6078      	str	r0, [r7, #4]
 8000870:	6878      	ldr	r0, [r7, #4]
 8000872:	f000 f843 	bl	80008fc <_ZNSaImED1Ev>
 8000876:	687b      	ldr	r3, [r7, #4]
 8000878:	4618      	mov	r0, r3
 800087a:	3708      	adds	r7, #8
 800087c:	46bd      	mov	sp, r7
 800087e:	bd80      	pop	{r7, pc}

08000880 <_ZNSt12_Vector_baseImSaImEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 8000880:	b580      	push	{r7, lr}
 8000882:	b082      	sub	sp, #8
 8000884:	af00      	add	r7, sp, #0
 8000886:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 8000888:	687b      	ldr	r3, [r7, #4]
 800088a:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 800088c:	687b      	ldr	r3, [r7, #4]
 800088e:	689a      	ldr	r2, [r3, #8]
 8000890:	687b      	ldr	r3, [r7, #4]
 8000892:	681b      	ldr	r3, [r3, #0]
 8000894:	1ad3      	subs	r3, r2, r3
 8000896:	109b      	asrs	r3, r3, #2
	_M_deallocate(_M_impl._M_start,
 8000898:	461a      	mov	r2, r3
 800089a:	6878      	ldr	r0, [r7, #4]
 800089c:	f7ff fd57 	bl	800034e <_ZNSt12_Vector_baseImSaImEE13_M_deallocateEPmj>
      }
 80008a0:	687b      	ldr	r3, [r7, #4]
 80008a2:	4618      	mov	r0, r3
 80008a4:	f7ff ffe0 	bl	8000868 <_ZNSt12_Vector_baseImSaImEE12_Vector_implD1Ev>
 80008a8:	687b      	ldr	r3, [r7, #4]
 80008aa:	4618      	mov	r0, r3
 80008ac:	3708      	adds	r7, #8
 80008ae:	46bd      	mov	sp, r7
 80008b0:	bd80      	pop	{r7, pc}

080008b2 <_ZNSt12_Vector_baseIySaIyEE12_Vector_implD1Ev>:
      struct _Vector_impl
 80008b2:	b580      	push	{r7, lr}
 80008b4:	b082      	sub	sp, #8
 80008b6:	af00      	add	r7, sp, #0
 80008b8:	6078      	str	r0, [r7, #4]
 80008ba:	6878      	ldr	r0, [r7, #4]
 80008bc:	f000 f82a 	bl	8000914 <_ZNSaIyED1Ev>
 80008c0:	687b      	ldr	r3, [r7, #4]
 80008c2:	4618      	mov	r0, r3
 80008c4:	3708      	adds	r7, #8
 80008c6:	46bd      	mov	sp, r7
 80008c8:	bd80      	pop	{r7, pc}

080008ca <_ZNSt12_Vector_baseIySaIyEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
 80008ca:	b580      	push	{r7, lr}
 80008cc:	b082      	sub	sp, #8
 80008ce:	af00      	add	r7, sp, #0
 80008d0:	6078      	str	r0, [r7, #4]
	_M_deallocate(_M_impl._M_start,
 80008d2:	687b      	ldr	r3, [r7, #4]
 80008d4:	6819      	ldr	r1, [r3, #0]
		      _M_impl._M_end_of_storage - _M_impl._M_start);
 80008d6:	687b      	ldr	r3, [r7, #4]
 80008d8:	689a      	ldr	r2, [r3, #8]
 80008da:	687b      	ldr	r3, [r7, #4]
 80008dc:	681b      	ldr	r3, [r3, #0]
 80008de:	1ad3      	subs	r3, r2, r3
 80008e0:	10db      	asrs	r3, r3, #3
	_M_deallocate(_M_impl._M_start,
 80008e2:	461a      	mov	r2, r3
 80008e4:	6878      	ldr	r0, [r7, #4]
 80008e6:	f7ff fd7c 	bl	80003e2 <_ZNSt12_Vector_baseIySaIyEE13_M_deallocateEPyj>
      }
 80008ea:	687b      	ldr	r3, [r7, #4]
 80008ec:	4618      	mov	r0, r3
 80008ee:	f7ff ffe0 	bl	80008b2 <_ZNSt12_Vector_baseIySaIyEE12_Vector_implD1Ev>
 80008f2:	687b      	ldr	r3, [r7, #4]
 80008f4:	4618      	mov	r0, r3
 80008f6:	3708      	adds	r7, #8
 80008f8:	46bd      	mov	sp, r7
 80008fa:	bd80      	pop	{r7, pc}

080008fc <_ZNSaImED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
 80008fc:	b580      	push	{r7, lr}
 80008fe:	b082      	sub	sp, #8
 8000900:	af00      	add	r7, sp, #0
 8000902:	6078      	str	r0, [r7, #4]
 8000904:	6878      	ldr	r0, [r7, #4]
 8000906:	f000 f811 	bl	800092c <_ZNSt15__new_allocatorImED1Ev>
 800090a:	687b      	ldr	r3, [r7, #4]
 800090c:	4618      	mov	r0, r3
 800090e:	3708      	adds	r7, #8
 8000910:	46bd      	mov	sp, r7
 8000912:	bd80      	pop	{r7, pc}

08000914 <_ZNSaIyED1Ev>:
 8000914:	b580      	push	{r7, lr}
 8000916:	b082      	sub	sp, #8
 8000918:	af00      	add	r7, sp, #0
 800091a:	6078      	str	r0, [r7, #4]
 800091c:	6878      	ldr	r0, [r7, #4]
 800091e:	f000 f80f 	bl	8000940 <_ZNSt15__new_allocatorIyED1Ev>
 8000922:	687b      	ldr	r3, [r7, #4]
 8000924:	4618      	mov	r0, r3
 8000926:	3708      	adds	r7, #8
 8000928:	46bd      	mov	sp, r7
 800092a:	bd80      	pop	{r7, pc}

0800092c <_ZNSt15__new_allocatorImED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 800092c:	b480      	push	{r7}
 800092e:	b083      	sub	sp, #12
 8000930:	af00      	add	r7, sp, #0
 8000932:	6078      	str	r0, [r7, #4]
 8000934:	687b      	ldr	r3, [r7, #4]
 8000936:	4618      	mov	r0, r3
 8000938:	370c      	adds	r7, #12
 800093a:	46bd      	mov	sp, r7
 800093c:	bc80      	pop	{r7}
 800093e:	4770      	bx	lr

08000940 <_ZNSt15__new_allocatorIyED1Ev>:
 8000940:	b480      	push	{r7}
 8000942:	b083      	sub	sp, #12
 8000944:	af00      	add	r7, sp, #0
 8000946:	6078      	str	r0, [r7, #4]
 8000948:	687b      	ldr	r3, [r7, #4]
 800094a:	4618      	mov	r0, r3
 800094c:	370c      	adds	r7, #12
 800094e:	46bd      	mov	sp, r7
 8000950:	bc80      	pop	{r7}
 8000952:	4770      	bx	lr

08000954 <HAL_MspInit>:
 8000954:	b480      	push	{r7}
 8000956:	b085      	sub	sp, #20
 8000958:	af00      	add	r7, sp, #0
 800095a:	4b15      	ldr	r3, [pc, #84]	@ (80009b0 <HAL_MspInit+0x5c>)
 800095c:	699b      	ldr	r3, [r3, #24]
 800095e:	4a14      	ldr	r2, [pc, #80]	@ (80009b0 <HAL_MspInit+0x5c>)
 8000960:	f043 0301 	orr.w	r3, r3, #1
 8000964:	6193      	str	r3, [r2, #24]
 8000966:	4b12      	ldr	r3, [pc, #72]	@ (80009b0 <HAL_MspInit+0x5c>)
 8000968:	699b      	ldr	r3, [r3, #24]
 800096a:	f003 0301 	and.w	r3, r3, #1
 800096e:	60bb      	str	r3, [r7, #8]
 8000970:	68bb      	ldr	r3, [r7, #8]
 8000972:	4b0f      	ldr	r3, [pc, #60]	@ (80009b0 <HAL_MspInit+0x5c>)
 8000974:	69db      	ldr	r3, [r3, #28]
 8000976:	4a0e      	ldr	r2, [pc, #56]	@ (80009b0 <HAL_MspInit+0x5c>)
 8000978:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800097c:	61d3      	str	r3, [r2, #28]
 800097e:	4b0c      	ldr	r3, [pc, #48]	@ (80009b0 <HAL_MspInit+0x5c>)
 8000980:	69db      	ldr	r3, [r3, #28]
 8000982:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000986:	607b      	str	r3, [r7, #4]
 8000988:	687b      	ldr	r3, [r7, #4]
 800098a:	4b0a      	ldr	r3, [pc, #40]	@ (80009b4 <HAL_MspInit+0x60>)
 800098c:	685b      	ldr	r3, [r3, #4]
 800098e:	60fb      	str	r3, [r7, #12]
 8000990:	68fb      	ldr	r3, [r7, #12]
 8000992:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 8000996:	60fb      	str	r3, [r7, #12]
 8000998:	68fb      	ldr	r3, [r7, #12]
 800099a:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 800099e:	60fb      	str	r3, [r7, #12]
 80009a0:	4a04      	ldr	r2, [pc, #16]	@ (80009b4 <HAL_MspInit+0x60>)
 80009a2:	68fb      	ldr	r3, [r7, #12]
 80009a4:	6053      	str	r3, [r2, #4]
 80009a6:	bf00      	nop
 80009a8:	3714      	adds	r7, #20
 80009aa:	46bd      	mov	sp, r7
 80009ac:	bc80      	pop	{r7}
 80009ae:	4770      	bx	lr
 80009b0:	40021000 	.word	0x40021000
 80009b4:	40010000 	.word	0x40010000

080009b8 <HAL_CAN_MspInit>:
 80009b8:	b580      	push	{r7, lr}
 80009ba:	b088      	sub	sp, #32
 80009bc:	af00      	add	r7, sp, #0
 80009be:	6078      	str	r0, [r7, #4]
 80009c0:	f107 0310 	add.w	r3, r7, #16
 80009c4:	2200      	movs	r2, #0
 80009c6:	601a      	str	r2, [r3, #0]
 80009c8:	605a      	str	r2, [r3, #4]
 80009ca:	609a      	str	r2, [r3, #8]
 80009cc:	60da      	str	r2, [r3, #12]
 80009ce:	687b      	ldr	r3, [r7, #4]
 80009d0:	681b      	ldr	r3, [r3, #0]
 80009d2:	4a24      	ldr	r2, [pc, #144]	@ (8000a64 <HAL_CAN_MspInit+0xac>)
 80009d4:	4293      	cmp	r3, r2
 80009d6:	d141      	bne.n	8000a5c <HAL_CAN_MspInit+0xa4>
 80009d8:	4b23      	ldr	r3, [pc, #140]	@ (8000a68 <HAL_CAN_MspInit+0xb0>)
 80009da:	69db      	ldr	r3, [r3, #28]
 80009dc:	4a22      	ldr	r2, [pc, #136]	@ (8000a68 <HAL_CAN_MspInit+0xb0>)
 80009de:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80009e2:	61d3      	str	r3, [r2, #28]
 80009e4:	4b20      	ldr	r3, [pc, #128]	@ (8000a68 <HAL_CAN_MspInit+0xb0>)
 80009e6:	69db      	ldr	r3, [r3, #28]
 80009e8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80009ec:	60fb      	str	r3, [r7, #12]
 80009ee:	68fb      	ldr	r3, [r7, #12]
 80009f0:	4b1d      	ldr	r3, [pc, #116]	@ (8000a68 <HAL_CAN_MspInit+0xb0>)
 80009f2:	699b      	ldr	r3, [r3, #24]
 80009f4:	4a1c      	ldr	r2, [pc, #112]	@ (8000a68 <HAL_CAN_MspInit+0xb0>)
 80009f6:	f043 0304 	orr.w	r3, r3, #4
 80009fa:	6193      	str	r3, [r2, #24]
 80009fc:	4b1a      	ldr	r3, [pc, #104]	@ (8000a68 <HAL_CAN_MspInit+0xb0>)
 80009fe:	699b      	ldr	r3, [r3, #24]
 8000a00:	f003 0304 	and.w	r3, r3, #4
 8000a04:	60bb      	str	r3, [r7, #8]
 8000a06:	68bb      	ldr	r3, [r7, #8]
 8000a08:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8000a0c:	613b      	str	r3, [r7, #16]
 8000a0e:	2300      	movs	r3, #0
 8000a10:	617b      	str	r3, [r7, #20]
 8000a12:	2300      	movs	r3, #0
 8000a14:	61bb      	str	r3, [r7, #24]
 8000a16:	f107 0310 	add.w	r3, r7, #16
 8000a1a:	4619      	mov	r1, r3
 8000a1c:	4813      	ldr	r0, [pc, #76]	@ (8000a6c <HAL_CAN_MspInit+0xb4>)
 8000a1e:	f001 f867 	bl	8001af0 <HAL_GPIO_Init>
 8000a22:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000a26:	613b      	str	r3, [r7, #16]
 8000a28:	2302      	movs	r3, #2
 8000a2a:	617b      	str	r3, [r7, #20]
 8000a2c:	2303      	movs	r3, #3
 8000a2e:	61fb      	str	r3, [r7, #28]
 8000a30:	f107 0310 	add.w	r3, r7, #16
 8000a34:	4619      	mov	r1, r3
 8000a36:	480d      	ldr	r0, [pc, #52]	@ (8000a6c <HAL_CAN_MspInit+0xb4>)
 8000a38:	f001 f85a 	bl	8001af0 <HAL_GPIO_Init>
 8000a3c:	2200      	movs	r2, #0
 8000a3e:	2100      	movs	r1, #0
 8000a40:	2014      	movs	r0, #20
 8000a42:	f001 f81e 	bl	8001a82 <HAL_NVIC_SetPriority>
 8000a46:	2014      	movs	r0, #20
 8000a48:	f001 f837 	bl	8001aba <HAL_NVIC_EnableIRQ>
 8000a4c:	2200      	movs	r2, #0
 8000a4e:	2100      	movs	r1, #0
 8000a50:	2015      	movs	r0, #21
 8000a52:	f001 f816 	bl	8001a82 <HAL_NVIC_SetPriority>
 8000a56:	2015      	movs	r0, #21
 8000a58:	f001 f82f 	bl	8001aba <HAL_NVIC_EnableIRQ>
 8000a5c:	bf00      	nop
 8000a5e:	3720      	adds	r7, #32
 8000a60:	46bd      	mov	sp, r7
 8000a62:	bd80      	pop	{r7, pc}
 8000a64:	40006400 	.word	0x40006400
 8000a68:	40021000 	.word	0x40021000
 8000a6c:	40010800 	.word	0x40010800

08000a70 <NMI_Handler>:
 8000a70:	b480      	push	{r7}
 8000a72:	af00      	add	r7, sp, #0
 8000a74:	bf00      	nop
 8000a76:	e7fd      	b.n	8000a74 <NMI_Handler+0x4>

08000a78 <HardFault_Handler>:
 8000a78:	b480      	push	{r7}
 8000a7a:	af00      	add	r7, sp, #0
 8000a7c:	bf00      	nop
 8000a7e:	e7fd      	b.n	8000a7c <HardFault_Handler+0x4>

08000a80 <MemManage_Handler>:
 8000a80:	b480      	push	{r7}
 8000a82:	af00      	add	r7, sp, #0
 8000a84:	bf00      	nop
 8000a86:	e7fd      	b.n	8000a84 <MemManage_Handler+0x4>

08000a88 <BusFault_Handler>:
 8000a88:	b480      	push	{r7}
 8000a8a:	af00      	add	r7, sp, #0
 8000a8c:	bf00      	nop
 8000a8e:	e7fd      	b.n	8000a8c <BusFault_Handler+0x4>

08000a90 <UsageFault_Handler>:
 8000a90:	b480      	push	{r7}
 8000a92:	af00      	add	r7, sp, #0
 8000a94:	bf00      	nop
 8000a96:	e7fd      	b.n	8000a94 <UsageFault_Handler+0x4>

08000a98 <SVC_Handler>:
 8000a98:	b480      	push	{r7}
 8000a9a:	af00      	add	r7, sp, #0
 8000a9c:	bf00      	nop
 8000a9e:	46bd      	mov	sp, r7
 8000aa0:	bc80      	pop	{r7}
 8000aa2:	4770      	bx	lr

08000aa4 <DebugMon_Handler>:
 8000aa4:	b480      	push	{r7}
 8000aa6:	af00      	add	r7, sp, #0
 8000aa8:	bf00      	nop
 8000aaa:	46bd      	mov	sp, r7
 8000aac:	bc80      	pop	{r7}
 8000aae:	4770      	bx	lr

08000ab0 <PendSV_Handler>:
 8000ab0:	b480      	push	{r7}
 8000ab2:	af00      	add	r7, sp, #0
 8000ab4:	bf00      	nop
 8000ab6:	46bd      	mov	sp, r7
 8000ab8:	bc80      	pop	{r7}
 8000aba:	4770      	bx	lr

08000abc <SysTick_Handler>:
 8000abc:	b580      	push	{r7, lr}
 8000abe:	af00      	add	r7, sp, #0
 8000ac0:	f000 f888 	bl	8000bd4 <HAL_IncTick>
 8000ac4:	bf00      	nop
 8000ac6:	bd80      	pop	{r7, pc}

08000ac8 <USB_LP_CAN1_RX0_IRQHandler>:
 8000ac8:	b580      	push	{r7, lr}
 8000aca:	af00      	add	r7, sp, #0
 8000acc:	4802      	ldr	r0, [pc, #8]	@ (8000ad8 <USB_LP_CAN1_RX0_IRQHandler+0x10>)
 8000ace:	f000 fcde 	bl	800148e <HAL_CAN_IRQHandler>
 8000ad2:	bf00      	nop
 8000ad4:	bd80      	pop	{r7, pc}
 8000ad6:	bf00      	nop
 8000ad8:	20000078 	.word	0x20000078

08000adc <CAN1_RX1_IRQHandler>:
 8000adc:	b580      	push	{r7, lr}
 8000ade:	af00      	add	r7, sp, #0
 8000ae0:	4802      	ldr	r0, [pc, #8]	@ (8000aec <CAN1_RX1_IRQHandler+0x10>)
 8000ae2:	f000 fcd4 	bl	800148e <HAL_CAN_IRQHandler>
 8000ae6:	bf00      	nop
 8000ae8:	bd80      	pop	{r7, pc}
 8000aea:	bf00      	nop
 8000aec:	20000078 	.word	0x20000078

08000af0 <SystemInit>:
 8000af0:	b480      	push	{r7}
 8000af2:	af00      	add	r7, sp, #0
 8000af4:	bf00      	nop
 8000af6:	46bd      	mov	sp, r7
 8000af8:	bc80      	pop	{r7}
 8000afa:	4770      	bx	lr

08000afc <Reset_Handler>:
 8000afc:	f7ff fff8 	bl	8000af0 <SystemInit>
 8000b00:	480b      	ldr	r0, [pc, #44]	@ (8000b30 <LoopFillZerobss+0xe>)
 8000b02:	490c      	ldr	r1, [pc, #48]	@ (8000b34 <LoopFillZerobss+0x12>)
 8000b04:	4a0c      	ldr	r2, [pc, #48]	@ (8000b38 <LoopFillZerobss+0x16>)
 8000b06:	2300      	movs	r3, #0
 8000b08:	e002      	b.n	8000b10 <LoopCopyDataInit>

08000b0a <CopyDataInit>:
 8000b0a:	58d4      	ldr	r4, [r2, r3]
 8000b0c:	50c4      	str	r4, [r0, r3]
 8000b0e:	3304      	adds	r3, #4

08000b10 <LoopCopyDataInit>:
 8000b10:	18c4      	adds	r4, r0, r3
 8000b12:	428c      	cmp	r4, r1
 8000b14:	d3f9      	bcc.n	8000b0a <CopyDataInit>
 8000b16:	4a09      	ldr	r2, [pc, #36]	@ (8000b3c <LoopFillZerobss+0x1a>)
 8000b18:	4c09      	ldr	r4, [pc, #36]	@ (8000b40 <LoopFillZerobss+0x1e>)
 8000b1a:	2300      	movs	r3, #0
 8000b1c:	e001      	b.n	8000b22 <LoopFillZerobss>

08000b1e <FillZerobss>:
 8000b1e:	6013      	str	r3, [r2, #0]
 8000b20:	3204      	adds	r2, #4

08000b22 <LoopFillZerobss>:
 8000b22:	42a2      	cmp	r2, r4
 8000b24:	d3fb      	bcc.n	8000b1e <FillZerobss>
 8000b26:	f001 fd8f 	bl	8002648 <__libc_init_array>
 8000b2a:	f7ff fd33 	bl	8000594 <main>
 8000b2e:	4770      	bx	lr
 8000b30:	20000000 	.word	0x20000000
 8000b34:	2000005c 	.word	0x2000005c
 8000b38:	08002770 	.word	0x08002770
 8000b3c:	2000005c 	.word	0x2000005c
 8000b40:	20000208 	.word	0x20000208

08000b44 <ADC1_2_IRQHandler>:
 8000b44:	e7fe      	b.n	8000b44 <ADC1_2_IRQHandler>
	...

08000b48 <HAL_Init>:
 8000b48:	b580      	push	{r7, lr}
 8000b4a:	af00      	add	r7, sp, #0
 8000b4c:	4b08      	ldr	r3, [pc, #32]	@ (8000b70 <HAL_Init+0x28>)
 8000b4e:	681b      	ldr	r3, [r3, #0]
 8000b50:	4a07      	ldr	r2, [pc, #28]	@ (8000b70 <HAL_Init+0x28>)
 8000b52:	f043 0310 	orr.w	r3, r3, #16
 8000b56:	6013      	str	r3, [r2, #0]
 8000b58:	2003      	movs	r0, #3
 8000b5a:	f000 ff87 	bl	8001a6c <HAL_NVIC_SetPriorityGrouping>
 8000b5e:	200f      	movs	r0, #15
 8000b60:	f000 f808 	bl	8000b74 <HAL_InitTick>
 8000b64:	f7ff fef6 	bl	8000954 <HAL_MspInit>
 8000b68:	2300      	movs	r3, #0
 8000b6a:	4618      	mov	r0, r3
 8000b6c:	bd80      	pop	{r7, pc}
 8000b6e:	bf00      	nop
 8000b70:	40022000 	.word	0x40022000

08000b74 <HAL_InitTick>:
 8000b74:	b580      	push	{r7, lr}
 8000b76:	b082      	sub	sp, #8
 8000b78:	af00      	add	r7, sp, #0
 8000b7a:	6078      	str	r0, [r7, #4]
 8000b7c:	4b12      	ldr	r3, [pc, #72]	@ (8000bc8 <HAL_InitTick+0x54>)
 8000b7e:	681a      	ldr	r2, [r3, #0]
 8000b80:	4b12      	ldr	r3, [pc, #72]	@ (8000bcc <HAL_InitTick+0x58>)
 8000b82:	781b      	ldrb	r3, [r3, #0]
 8000b84:	4619      	mov	r1, r3
 8000b86:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000b8a:	fbb3 f3f1 	udiv	r3, r3, r1
 8000b8e:	fbb2 f3f3 	udiv	r3, r2, r3
 8000b92:	4618      	mov	r0, r3
 8000b94:	f000 ff9f 	bl	8001ad6 <HAL_SYSTICK_Config>
 8000b98:	4603      	mov	r3, r0
 8000b9a:	2b00      	cmp	r3, #0
 8000b9c:	d001      	beq.n	8000ba2 <HAL_InitTick+0x2e>
 8000b9e:	2301      	movs	r3, #1
 8000ba0:	e00e      	b.n	8000bc0 <HAL_InitTick+0x4c>
 8000ba2:	687b      	ldr	r3, [r7, #4]
 8000ba4:	2b0f      	cmp	r3, #15
 8000ba6:	d80a      	bhi.n	8000bbe <HAL_InitTick+0x4a>
 8000ba8:	2200      	movs	r2, #0
 8000baa:	6879      	ldr	r1, [r7, #4]
 8000bac:	f04f 30ff 	mov.w	r0, #4294967295
 8000bb0:	f000 ff67 	bl	8001a82 <HAL_NVIC_SetPriority>
 8000bb4:	4a06      	ldr	r2, [pc, #24]	@ (8000bd0 <HAL_InitTick+0x5c>)
 8000bb6:	687b      	ldr	r3, [r7, #4]
 8000bb8:	6013      	str	r3, [r2, #0]
 8000bba:	2300      	movs	r3, #0
 8000bbc:	e000      	b.n	8000bc0 <HAL_InitTick+0x4c>
 8000bbe:	2301      	movs	r3, #1
 8000bc0:	4618      	mov	r0, r3
 8000bc2:	3708      	adds	r7, #8
 8000bc4:	46bd      	mov	sp, r7
 8000bc6:	bd80      	pop	{r7, pc}
 8000bc8:	20000000 	.word	0x20000000
 8000bcc:	20000008 	.word	0x20000008
 8000bd0:	20000004 	.word	0x20000004

08000bd4 <HAL_IncTick>:
 8000bd4:	b480      	push	{r7}
 8000bd6:	af00      	add	r7, sp, #0
 8000bd8:	4b05      	ldr	r3, [pc, #20]	@ (8000bf0 <HAL_IncTick+0x1c>)
 8000bda:	781b      	ldrb	r3, [r3, #0]
 8000bdc:	461a      	mov	r2, r3
 8000bde:	4b05      	ldr	r3, [pc, #20]	@ (8000bf4 <HAL_IncTick+0x20>)
 8000be0:	681b      	ldr	r3, [r3, #0]
 8000be2:	4413      	add	r3, r2
 8000be4:	4a03      	ldr	r2, [pc, #12]	@ (8000bf4 <HAL_IncTick+0x20>)
 8000be6:	6013      	str	r3, [r2, #0]
 8000be8:	bf00      	nop
 8000bea:	46bd      	mov	sp, r7
 8000bec:	bc80      	pop	{r7}
 8000bee:	4770      	bx	lr
 8000bf0:	20000008 	.word	0x20000008
 8000bf4:	200000c4 	.word	0x200000c4

08000bf8 <HAL_GetTick>:
 8000bf8:	b480      	push	{r7}
 8000bfa:	af00      	add	r7, sp, #0
 8000bfc:	4b02      	ldr	r3, [pc, #8]	@ (8000c08 <HAL_GetTick+0x10>)
 8000bfe:	681b      	ldr	r3, [r3, #0]
 8000c00:	4618      	mov	r0, r3
 8000c02:	46bd      	mov	sp, r7
 8000c04:	bc80      	pop	{r7}
 8000c06:	4770      	bx	lr
 8000c08:	200000c4 	.word	0x200000c4

08000c0c <HAL_Delay>:
 8000c0c:	b580      	push	{r7, lr}
 8000c0e:	b084      	sub	sp, #16
 8000c10:	af00      	add	r7, sp, #0
 8000c12:	6078      	str	r0, [r7, #4]
 8000c14:	f7ff fff0 	bl	8000bf8 <HAL_GetTick>
 8000c18:	60b8      	str	r0, [r7, #8]
 8000c1a:	687b      	ldr	r3, [r7, #4]
 8000c1c:	60fb      	str	r3, [r7, #12]
 8000c1e:	68fb      	ldr	r3, [r7, #12]
 8000c20:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000c24:	d005      	beq.n	8000c32 <HAL_Delay+0x26>
 8000c26:	4b0a      	ldr	r3, [pc, #40]	@ (8000c50 <HAL_Delay+0x44>)
 8000c28:	781b      	ldrb	r3, [r3, #0]
 8000c2a:	461a      	mov	r2, r3
 8000c2c:	68fb      	ldr	r3, [r7, #12]
 8000c2e:	4413      	add	r3, r2
 8000c30:	60fb      	str	r3, [r7, #12]
 8000c32:	bf00      	nop
 8000c34:	f7ff ffe0 	bl	8000bf8 <HAL_GetTick>
 8000c38:	4602      	mov	r2, r0
 8000c3a:	68bb      	ldr	r3, [r7, #8]
 8000c3c:	1ad3      	subs	r3, r2, r3
 8000c3e:	68fa      	ldr	r2, [r7, #12]
 8000c40:	429a      	cmp	r2, r3
 8000c42:	d8f7      	bhi.n	8000c34 <HAL_Delay+0x28>
 8000c44:	bf00      	nop
 8000c46:	bf00      	nop
 8000c48:	3710      	adds	r7, #16
 8000c4a:	46bd      	mov	sp, r7
 8000c4c:	bd80      	pop	{r7, pc}
 8000c4e:	bf00      	nop
 8000c50:	20000008 	.word	0x20000008

08000c54 <HAL_CAN_Init>:
 8000c54:	b580      	push	{r7, lr}
 8000c56:	b084      	sub	sp, #16
 8000c58:	af00      	add	r7, sp, #0
 8000c5a:	6078      	str	r0, [r7, #4]
 8000c5c:	687b      	ldr	r3, [r7, #4]
 8000c5e:	2b00      	cmp	r3, #0
 8000c60:	d101      	bne.n	8000c66 <HAL_CAN_Init+0x12>
 8000c62:	2301      	movs	r3, #1
 8000c64:	e0ed      	b.n	8000e42 <HAL_CAN_Init+0x1ee>
 8000c66:	687b      	ldr	r3, [r7, #4]
 8000c68:	f893 3020 	ldrb.w	r3, [r3, #32]
 8000c6c:	b2db      	uxtb	r3, r3
 8000c6e:	2b00      	cmp	r3, #0
 8000c70:	d102      	bne.n	8000c78 <HAL_CAN_Init+0x24>
 8000c72:	6878      	ldr	r0, [r7, #4]
 8000c74:	f7ff fea0 	bl	80009b8 <HAL_CAN_MspInit>
 8000c78:	687b      	ldr	r3, [r7, #4]
 8000c7a:	681b      	ldr	r3, [r3, #0]
 8000c7c:	681a      	ldr	r2, [r3, #0]
 8000c7e:	687b      	ldr	r3, [r7, #4]
 8000c80:	681b      	ldr	r3, [r3, #0]
 8000c82:	f042 0201 	orr.w	r2, r2, #1
 8000c86:	601a      	str	r2, [r3, #0]
 8000c88:	f7ff ffb6 	bl	8000bf8 <HAL_GetTick>
 8000c8c:	60f8      	str	r0, [r7, #12]
 8000c8e:	e012      	b.n	8000cb6 <HAL_CAN_Init+0x62>
 8000c90:	f7ff ffb2 	bl	8000bf8 <HAL_GetTick>
 8000c94:	4602      	mov	r2, r0
 8000c96:	68fb      	ldr	r3, [r7, #12]
 8000c98:	1ad3      	subs	r3, r2, r3
 8000c9a:	2b0a      	cmp	r3, #10
 8000c9c:	d90b      	bls.n	8000cb6 <HAL_CAN_Init+0x62>
 8000c9e:	687b      	ldr	r3, [r7, #4]
 8000ca0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000ca2:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8000ca6:	687b      	ldr	r3, [r7, #4]
 8000ca8:	625a      	str	r2, [r3, #36]	@ 0x24
 8000caa:	687b      	ldr	r3, [r7, #4]
 8000cac:	2205      	movs	r2, #5
 8000cae:	f883 2020 	strb.w	r2, [r3, #32]
 8000cb2:	2301      	movs	r3, #1
 8000cb4:	e0c5      	b.n	8000e42 <HAL_CAN_Init+0x1ee>
 8000cb6:	687b      	ldr	r3, [r7, #4]
 8000cb8:	681b      	ldr	r3, [r3, #0]
 8000cba:	685b      	ldr	r3, [r3, #4]
 8000cbc:	f003 0301 	and.w	r3, r3, #1
 8000cc0:	2b00      	cmp	r3, #0
 8000cc2:	d0e5      	beq.n	8000c90 <HAL_CAN_Init+0x3c>
 8000cc4:	687b      	ldr	r3, [r7, #4]
 8000cc6:	681b      	ldr	r3, [r3, #0]
 8000cc8:	681a      	ldr	r2, [r3, #0]
 8000cca:	687b      	ldr	r3, [r7, #4]
 8000ccc:	681b      	ldr	r3, [r3, #0]
 8000cce:	f022 0202 	bic.w	r2, r2, #2
 8000cd2:	601a      	str	r2, [r3, #0]
 8000cd4:	f7ff ff90 	bl	8000bf8 <HAL_GetTick>
 8000cd8:	60f8      	str	r0, [r7, #12]
 8000cda:	e012      	b.n	8000d02 <HAL_CAN_Init+0xae>
 8000cdc:	f7ff ff8c 	bl	8000bf8 <HAL_GetTick>
 8000ce0:	4602      	mov	r2, r0
 8000ce2:	68fb      	ldr	r3, [r7, #12]
 8000ce4:	1ad3      	subs	r3, r2, r3
 8000ce6:	2b0a      	cmp	r3, #10
 8000ce8:	d90b      	bls.n	8000d02 <HAL_CAN_Init+0xae>
 8000cea:	687b      	ldr	r3, [r7, #4]
 8000cec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000cee:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8000cf2:	687b      	ldr	r3, [r7, #4]
 8000cf4:	625a      	str	r2, [r3, #36]	@ 0x24
 8000cf6:	687b      	ldr	r3, [r7, #4]
 8000cf8:	2205      	movs	r2, #5
 8000cfa:	f883 2020 	strb.w	r2, [r3, #32]
 8000cfe:	2301      	movs	r3, #1
 8000d00:	e09f      	b.n	8000e42 <HAL_CAN_Init+0x1ee>
 8000d02:	687b      	ldr	r3, [r7, #4]
 8000d04:	681b      	ldr	r3, [r3, #0]
 8000d06:	685b      	ldr	r3, [r3, #4]
 8000d08:	f003 0302 	and.w	r3, r3, #2
 8000d0c:	2b00      	cmp	r3, #0
 8000d0e:	d1e5      	bne.n	8000cdc <HAL_CAN_Init+0x88>
 8000d10:	687b      	ldr	r3, [r7, #4]
 8000d12:	7e1b      	ldrb	r3, [r3, #24]
 8000d14:	2b01      	cmp	r3, #1
 8000d16:	d108      	bne.n	8000d2a <HAL_CAN_Init+0xd6>
 8000d18:	687b      	ldr	r3, [r7, #4]
 8000d1a:	681b      	ldr	r3, [r3, #0]
 8000d1c:	681a      	ldr	r2, [r3, #0]
 8000d1e:	687b      	ldr	r3, [r7, #4]
 8000d20:	681b      	ldr	r3, [r3, #0]
 8000d22:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8000d26:	601a      	str	r2, [r3, #0]
 8000d28:	e007      	b.n	8000d3a <HAL_CAN_Init+0xe6>
 8000d2a:	687b      	ldr	r3, [r7, #4]
 8000d2c:	681b      	ldr	r3, [r3, #0]
 8000d2e:	681a      	ldr	r2, [r3, #0]
 8000d30:	687b      	ldr	r3, [r7, #4]
 8000d32:	681b      	ldr	r3, [r3, #0]
 8000d34:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8000d38:	601a      	str	r2, [r3, #0]
 8000d3a:	687b      	ldr	r3, [r7, #4]
 8000d3c:	7e5b      	ldrb	r3, [r3, #25]
 8000d3e:	2b01      	cmp	r3, #1
 8000d40:	d108      	bne.n	8000d54 <HAL_CAN_Init+0x100>
 8000d42:	687b      	ldr	r3, [r7, #4]
 8000d44:	681b      	ldr	r3, [r3, #0]
 8000d46:	681a      	ldr	r2, [r3, #0]
 8000d48:	687b      	ldr	r3, [r7, #4]
 8000d4a:	681b      	ldr	r3, [r3, #0]
 8000d4c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8000d50:	601a      	str	r2, [r3, #0]
 8000d52:	e007      	b.n	8000d64 <HAL_CAN_Init+0x110>
 8000d54:	687b      	ldr	r3, [r7, #4]
 8000d56:	681b      	ldr	r3, [r3, #0]
 8000d58:	681a      	ldr	r2, [r3, #0]
 8000d5a:	687b      	ldr	r3, [r7, #4]
 8000d5c:	681b      	ldr	r3, [r3, #0]
 8000d5e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8000d62:	601a      	str	r2, [r3, #0]
 8000d64:	687b      	ldr	r3, [r7, #4]
 8000d66:	7e9b      	ldrb	r3, [r3, #26]
 8000d68:	2b01      	cmp	r3, #1
 8000d6a:	d108      	bne.n	8000d7e <HAL_CAN_Init+0x12a>
 8000d6c:	687b      	ldr	r3, [r7, #4]
 8000d6e:	681b      	ldr	r3, [r3, #0]
 8000d70:	681a      	ldr	r2, [r3, #0]
 8000d72:	687b      	ldr	r3, [r7, #4]
 8000d74:	681b      	ldr	r3, [r3, #0]
 8000d76:	f042 0220 	orr.w	r2, r2, #32
 8000d7a:	601a      	str	r2, [r3, #0]
 8000d7c:	e007      	b.n	8000d8e <HAL_CAN_Init+0x13a>
 8000d7e:	687b      	ldr	r3, [r7, #4]
 8000d80:	681b      	ldr	r3, [r3, #0]
 8000d82:	681a      	ldr	r2, [r3, #0]
 8000d84:	687b      	ldr	r3, [r7, #4]
 8000d86:	681b      	ldr	r3, [r3, #0]
 8000d88:	f022 0220 	bic.w	r2, r2, #32
 8000d8c:	601a      	str	r2, [r3, #0]
 8000d8e:	687b      	ldr	r3, [r7, #4]
 8000d90:	7edb      	ldrb	r3, [r3, #27]
 8000d92:	2b01      	cmp	r3, #1
 8000d94:	d108      	bne.n	8000da8 <HAL_CAN_Init+0x154>
 8000d96:	687b      	ldr	r3, [r7, #4]
 8000d98:	681b      	ldr	r3, [r3, #0]
 8000d9a:	681a      	ldr	r2, [r3, #0]
 8000d9c:	687b      	ldr	r3, [r7, #4]
 8000d9e:	681b      	ldr	r3, [r3, #0]
 8000da0:	f022 0210 	bic.w	r2, r2, #16
 8000da4:	601a      	str	r2, [r3, #0]
 8000da6:	e007      	b.n	8000db8 <HAL_CAN_Init+0x164>
 8000da8:	687b      	ldr	r3, [r7, #4]
 8000daa:	681b      	ldr	r3, [r3, #0]
 8000dac:	681a      	ldr	r2, [r3, #0]
 8000dae:	687b      	ldr	r3, [r7, #4]
 8000db0:	681b      	ldr	r3, [r3, #0]
 8000db2:	f042 0210 	orr.w	r2, r2, #16
 8000db6:	601a      	str	r2, [r3, #0]
 8000db8:	687b      	ldr	r3, [r7, #4]
 8000dba:	7f1b      	ldrb	r3, [r3, #28]
 8000dbc:	2b01      	cmp	r3, #1
 8000dbe:	d108      	bne.n	8000dd2 <HAL_CAN_Init+0x17e>
 8000dc0:	687b      	ldr	r3, [r7, #4]
 8000dc2:	681b      	ldr	r3, [r3, #0]
 8000dc4:	681a      	ldr	r2, [r3, #0]
 8000dc6:	687b      	ldr	r3, [r7, #4]
 8000dc8:	681b      	ldr	r3, [r3, #0]
 8000dca:	f042 0208 	orr.w	r2, r2, #8
 8000dce:	601a      	str	r2, [r3, #0]
 8000dd0:	e007      	b.n	8000de2 <HAL_CAN_Init+0x18e>
 8000dd2:	687b      	ldr	r3, [r7, #4]
 8000dd4:	681b      	ldr	r3, [r3, #0]
 8000dd6:	681a      	ldr	r2, [r3, #0]
 8000dd8:	687b      	ldr	r3, [r7, #4]
 8000dda:	681b      	ldr	r3, [r3, #0]
 8000ddc:	f022 0208 	bic.w	r2, r2, #8
 8000de0:	601a      	str	r2, [r3, #0]
 8000de2:	687b      	ldr	r3, [r7, #4]
 8000de4:	7f5b      	ldrb	r3, [r3, #29]
 8000de6:	2b01      	cmp	r3, #1
 8000de8:	d108      	bne.n	8000dfc <HAL_CAN_Init+0x1a8>
 8000dea:	687b      	ldr	r3, [r7, #4]
 8000dec:	681b      	ldr	r3, [r3, #0]
 8000dee:	681a      	ldr	r2, [r3, #0]
 8000df0:	687b      	ldr	r3, [r7, #4]
 8000df2:	681b      	ldr	r3, [r3, #0]
 8000df4:	f042 0204 	orr.w	r2, r2, #4
 8000df8:	601a      	str	r2, [r3, #0]
 8000dfa:	e007      	b.n	8000e0c <HAL_CAN_Init+0x1b8>
 8000dfc:	687b      	ldr	r3, [r7, #4]
 8000dfe:	681b      	ldr	r3, [r3, #0]
 8000e00:	681a      	ldr	r2, [r3, #0]
 8000e02:	687b      	ldr	r3, [r7, #4]
 8000e04:	681b      	ldr	r3, [r3, #0]
 8000e06:	f022 0204 	bic.w	r2, r2, #4
 8000e0a:	601a      	str	r2, [r3, #0]
 8000e0c:	687b      	ldr	r3, [r7, #4]
 8000e0e:	689a      	ldr	r2, [r3, #8]
 8000e10:	687b      	ldr	r3, [r7, #4]
 8000e12:	68db      	ldr	r3, [r3, #12]
 8000e14:	431a      	orrs	r2, r3
 8000e16:	687b      	ldr	r3, [r7, #4]
 8000e18:	691b      	ldr	r3, [r3, #16]
 8000e1a:	431a      	orrs	r2, r3
 8000e1c:	687b      	ldr	r3, [r7, #4]
 8000e1e:	695b      	ldr	r3, [r3, #20]
 8000e20:	ea42 0103 	orr.w	r1, r2, r3
 8000e24:	687b      	ldr	r3, [r7, #4]
 8000e26:	685b      	ldr	r3, [r3, #4]
 8000e28:	1e5a      	subs	r2, r3, #1
 8000e2a:	687b      	ldr	r3, [r7, #4]
 8000e2c:	681b      	ldr	r3, [r3, #0]
 8000e2e:	430a      	orrs	r2, r1
 8000e30:	61da      	str	r2, [r3, #28]
 8000e32:	687b      	ldr	r3, [r7, #4]
 8000e34:	2200      	movs	r2, #0
 8000e36:	625a      	str	r2, [r3, #36]	@ 0x24
 8000e38:	687b      	ldr	r3, [r7, #4]
 8000e3a:	2201      	movs	r2, #1
 8000e3c:	f883 2020 	strb.w	r2, [r3, #32]
 8000e40:	2300      	movs	r3, #0
 8000e42:	4618      	mov	r0, r3
 8000e44:	3710      	adds	r7, #16
 8000e46:	46bd      	mov	sp, r7
 8000e48:	bd80      	pop	{r7, pc}

08000e4a <HAL_CAN_ConfigFilter>:
 8000e4a:	b480      	push	{r7}
 8000e4c:	b087      	sub	sp, #28
 8000e4e:	af00      	add	r7, sp, #0
 8000e50:	6078      	str	r0, [r7, #4]
 8000e52:	6039      	str	r1, [r7, #0]
 8000e54:	687b      	ldr	r3, [r7, #4]
 8000e56:	681b      	ldr	r3, [r3, #0]
 8000e58:	617b      	str	r3, [r7, #20]
 8000e5a:	687b      	ldr	r3, [r7, #4]
 8000e5c:	f893 3020 	ldrb.w	r3, [r3, #32]
 8000e60:	74fb      	strb	r3, [r7, #19]
 8000e62:	7cfb      	ldrb	r3, [r7, #19]
 8000e64:	2b01      	cmp	r3, #1
 8000e66:	d003      	beq.n	8000e70 <HAL_CAN_ConfigFilter+0x26>
 8000e68:	7cfb      	ldrb	r3, [r7, #19]
 8000e6a:	2b02      	cmp	r3, #2
 8000e6c:	f040 80aa 	bne.w	8000fc4 <HAL_CAN_ConfigFilter+0x17a>
 8000e70:	697b      	ldr	r3, [r7, #20]
 8000e72:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 8000e76:	f043 0201 	orr.w	r2, r3, #1
 8000e7a:	697b      	ldr	r3, [r7, #20]
 8000e7c:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 8000e80:	683b      	ldr	r3, [r7, #0]
 8000e82:	695b      	ldr	r3, [r3, #20]
 8000e84:	f003 031f 	and.w	r3, r3, #31
 8000e88:	2201      	movs	r2, #1
 8000e8a:	fa02 f303 	lsl.w	r3, r2, r3
 8000e8e:	60fb      	str	r3, [r7, #12]
 8000e90:	697b      	ldr	r3, [r7, #20]
 8000e92:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 8000e96:	68fb      	ldr	r3, [r7, #12]
 8000e98:	43db      	mvns	r3, r3
 8000e9a:	401a      	ands	r2, r3
 8000e9c:	697b      	ldr	r3, [r7, #20]
 8000e9e:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 8000ea2:	683b      	ldr	r3, [r7, #0]
 8000ea4:	69db      	ldr	r3, [r3, #28]
 8000ea6:	2b00      	cmp	r3, #0
 8000ea8:	d123      	bne.n	8000ef2 <HAL_CAN_ConfigFilter+0xa8>
 8000eaa:	697b      	ldr	r3, [r7, #20]
 8000eac:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 8000eb0:	68fb      	ldr	r3, [r7, #12]
 8000eb2:	43db      	mvns	r3, r3
 8000eb4:	401a      	ands	r2, r3
 8000eb6:	697b      	ldr	r3, [r7, #20]
 8000eb8:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 8000ebc:	683b      	ldr	r3, [r7, #0]
 8000ebe:	68db      	ldr	r3, [r3, #12]
 8000ec0:	0419      	lsls	r1, r3, #16
 8000ec2:	683b      	ldr	r3, [r7, #0]
 8000ec4:	685b      	ldr	r3, [r3, #4]
 8000ec6:	b29b      	uxth	r3, r3
 8000ec8:	683a      	ldr	r2, [r7, #0]
 8000eca:	6952      	ldr	r2, [r2, #20]
 8000ecc:	4319      	orrs	r1, r3
 8000ece:	697b      	ldr	r3, [r7, #20]
 8000ed0:	3248      	adds	r2, #72	@ 0x48
 8000ed2:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 8000ed6:	683b      	ldr	r3, [r7, #0]
 8000ed8:	689b      	ldr	r3, [r3, #8]
 8000eda:	0419      	lsls	r1, r3, #16
 8000edc:	683b      	ldr	r3, [r7, #0]
 8000ede:	681b      	ldr	r3, [r3, #0]
 8000ee0:	b29a      	uxth	r2, r3
 8000ee2:	683b      	ldr	r3, [r7, #0]
 8000ee4:	695b      	ldr	r3, [r3, #20]
 8000ee6:	430a      	orrs	r2, r1
 8000ee8:	6979      	ldr	r1, [r7, #20]
 8000eea:	3348      	adds	r3, #72	@ 0x48
 8000eec:	00db      	lsls	r3, r3, #3
 8000eee:	440b      	add	r3, r1
 8000ef0:	605a      	str	r2, [r3, #4]
 8000ef2:	683b      	ldr	r3, [r7, #0]
 8000ef4:	69db      	ldr	r3, [r3, #28]
 8000ef6:	2b01      	cmp	r3, #1
 8000ef8:	d122      	bne.n	8000f40 <HAL_CAN_ConfigFilter+0xf6>
 8000efa:	697b      	ldr	r3, [r7, #20]
 8000efc:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 8000f00:	68fb      	ldr	r3, [r7, #12]
 8000f02:	431a      	orrs	r2, r3
 8000f04:	697b      	ldr	r3, [r7, #20]
 8000f06:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 8000f0a:	683b      	ldr	r3, [r7, #0]
 8000f0c:	681b      	ldr	r3, [r3, #0]
 8000f0e:	0419      	lsls	r1, r3, #16
 8000f10:	683b      	ldr	r3, [r7, #0]
 8000f12:	685b      	ldr	r3, [r3, #4]
 8000f14:	b29b      	uxth	r3, r3
 8000f16:	683a      	ldr	r2, [r7, #0]
 8000f18:	6952      	ldr	r2, [r2, #20]
 8000f1a:	4319      	orrs	r1, r3
 8000f1c:	697b      	ldr	r3, [r7, #20]
 8000f1e:	3248      	adds	r2, #72	@ 0x48
 8000f20:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 8000f24:	683b      	ldr	r3, [r7, #0]
 8000f26:	689b      	ldr	r3, [r3, #8]
 8000f28:	0419      	lsls	r1, r3, #16
 8000f2a:	683b      	ldr	r3, [r7, #0]
 8000f2c:	68db      	ldr	r3, [r3, #12]
 8000f2e:	b29a      	uxth	r2, r3
 8000f30:	683b      	ldr	r3, [r7, #0]
 8000f32:	695b      	ldr	r3, [r3, #20]
 8000f34:	430a      	orrs	r2, r1
 8000f36:	6979      	ldr	r1, [r7, #20]
 8000f38:	3348      	adds	r3, #72	@ 0x48
 8000f3a:	00db      	lsls	r3, r3, #3
 8000f3c:	440b      	add	r3, r1
 8000f3e:	605a      	str	r2, [r3, #4]
 8000f40:	683b      	ldr	r3, [r7, #0]
 8000f42:	699b      	ldr	r3, [r3, #24]
 8000f44:	2b00      	cmp	r3, #0
 8000f46:	d109      	bne.n	8000f5c <HAL_CAN_ConfigFilter+0x112>
 8000f48:	697b      	ldr	r3, [r7, #20]
 8000f4a:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8000f4e:	68fb      	ldr	r3, [r7, #12]
 8000f50:	43db      	mvns	r3, r3
 8000f52:	401a      	ands	r2, r3
 8000f54:	697b      	ldr	r3, [r7, #20]
 8000f56:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 8000f5a:	e007      	b.n	8000f6c <HAL_CAN_ConfigFilter+0x122>
 8000f5c:	697b      	ldr	r3, [r7, #20]
 8000f5e:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8000f62:	68fb      	ldr	r3, [r7, #12]
 8000f64:	431a      	orrs	r2, r3
 8000f66:	697b      	ldr	r3, [r7, #20]
 8000f68:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 8000f6c:	683b      	ldr	r3, [r7, #0]
 8000f6e:	691b      	ldr	r3, [r3, #16]
 8000f70:	2b00      	cmp	r3, #0
 8000f72:	d109      	bne.n	8000f88 <HAL_CAN_ConfigFilter+0x13e>
 8000f74:	697b      	ldr	r3, [r7, #20]
 8000f76:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 8000f7a:	68fb      	ldr	r3, [r7, #12]
 8000f7c:	43db      	mvns	r3, r3
 8000f7e:	401a      	ands	r2, r3
 8000f80:	697b      	ldr	r3, [r7, #20]
 8000f82:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 8000f86:	e007      	b.n	8000f98 <HAL_CAN_ConfigFilter+0x14e>
 8000f88:	697b      	ldr	r3, [r7, #20]
 8000f8a:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 8000f8e:	68fb      	ldr	r3, [r7, #12]
 8000f90:	431a      	orrs	r2, r3
 8000f92:	697b      	ldr	r3, [r7, #20]
 8000f94:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 8000f98:	683b      	ldr	r3, [r7, #0]
 8000f9a:	6a1b      	ldr	r3, [r3, #32]
 8000f9c:	2b01      	cmp	r3, #1
 8000f9e:	d107      	bne.n	8000fb0 <HAL_CAN_ConfigFilter+0x166>
 8000fa0:	697b      	ldr	r3, [r7, #20]
 8000fa2:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 8000fa6:	68fb      	ldr	r3, [r7, #12]
 8000fa8:	431a      	orrs	r2, r3
 8000faa:	697b      	ldr	r3, [r7, #20]
 8000fac:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 8000fb0:	697b      	ldr	r3, [r7, #20]
 8000fb2:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 8000fb6:	f023 0201 	bic.w	r2, r3, #1
 8000fba:	697b      	ldr	r3, [r7, #20]
 8000fbc:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 8000fc0:	2300      	movs	r3, #0
 8000fc2:	e006      	b.n	8000fd2 <HAL_CAN_ConfigFilter+0x188>
 8000fc4:	687b      	ldr	r3, [r7, #4]
 8000fc6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000fc8:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8000fcc:	687b      	ldr	r3, [r7, #4]
 8000fce:	625a      	str	r2, [r3, #36]	@ 0x24
 8000fd0:	2301      	movs	r3, #1
 8000fd2:	4618      	mov	r0, r3
 8000fd4:	371c      	adds	r7, #28
 8000fd6:	46bd      	mov	sp, r7
 8000fd8:	bc80      	pop	{r7}
 8000fda:	4770      	bx	lr

08000fdc <HAL_CAN_Start>:
 8000fdc:	b580      	push	{r7, lr}
 8000fde:	b084      	sub	sp, #16
 8000fe0:	af00      	add	r7, sp, #0
 8000fe2:	6078      	str	r0, [r7, #4]
 8000fe4:	687b      	ldr	r3, [r7, #4]
 8000fe6:	f893 3020 	ldrb.w	r3, [r3, #32]
 8000fea:	b2db      	uxtb	r3, r3
 8000fec:	2b01      	cmp	r3, #1
 8000fee:	d12e      	bne.n	800104e <HAL_CAN_Start+0x72>
 8000ff0:	687b      	ldr	r3, [r7, #4]
 8000ff2:	2202      	movs	r2, #2
 8000ff4:	f883 2020 	strb.w	r2, [r3, #32]
 8000ff8:	687b      	ldr	r3, [r7, #4]
 8000ffa:	681b      	ldr	r3, [r3, #0]
 8000ffc:	681a      	ldr	r2, [r3, #0]
 8000ffe:	687b      	ldr	r3, [r7, #4]
 8001000:	681b      	ldr	r3, [r3, #0]
 8001002:	f022 0201 	bic.w	r2, r2, #1
 8001006:	601a      	str	r2, [r3, #0]
 8001008:	f7ff fdf6 	bl	8000bf8 <HAL_GetTick>
 800100c:	60f8      	str	r0, [r7, #12]
 800100e:	e012      	b.n	8001036 <HAL_CAN_Start+0x5a>
 8001010:	f7ff fdf2 	bl	8000bf8 <HAL_GetTick>
 8001014:	4602      	mov	r2, r0
 8001016:	68fb      	ldr	r3, [r7, #12]
 8001018:	1ad3      	subs	r3, r2, r3
 800101a:	2b0a      	cmp	r3, #10
 800101c:	d90b      	bls.n	8001036 <HAL_CAN_Start+0x5a>
 800101e:	687b      	ldr	r3, [r7, #4]
 8001020:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001022:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8001026:	687b      	ldr	r3, [r7, #4]
 8001028:	625a      	str	r2, [r3, #36]	@ 0x24
 800102a:	687b      	ldr	r3, [r7, #4]
 800102c:	2205      	movs	r2, #5
 800102e:	f883 2020 	strb.w	r2, [r3, #32]
 8001032:	2301      	movs	r3, #1
 8001034:	e012      	b.n	800105c <HAL_CAN_Start+0x80>
 8001036:	687b      	ldr	r3, [r7, #4]
 8001038:	681b      	ldr	r3, [r3, #0]
 800103a:	685b      	ldr	r3, [r3, #4]
 800103c:	f003 0301 	and.w	r3, r3, #1
 8001040:	2b00      	cmp	r3, #0
 8001042:	d1e5      	bne.n	8001010 <HAL_CAN_Start+0x34>
 8001044:	687b      	ldr	r3, [r7, #4]
 8001046:	2200      	movs	r2, #0
 8001048:	625a      	str	r2, [r3, #36]	@ 0x24
 800104a:	2300      	movs	r3, #0
 800104c:	e006      	b.n	800105c <HAL_CAN_Start+0x80>
 800104e:	687b      	ldr	r3, [r7, #4]
 8001050:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001052:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 8001056:	687b      	ldr	r3, [r7, #4]
 8001058:	625a      	str	r2, [r3, #36]	@ 0x24
 800105a:	2301      	movs	r3, #1
 800105c:	4618      	mov	r0, r3
 800105e:	3710      	adds	r7, #16
 8001060:	46bd      	mov	sp, r7
 8001062:	bd80      	pop	{r7, pc}

08001064 <HAL_CAN_AddTxMessage>:
 8001064:	b480      	push	{r7}
 8001066:	b089      	sub	sp, #36	@ 0x24
 8001068:	af00      	add	r7, sp, #0
 800106a:	60f8      	str	r0, [r7, #12]
 800106c:	60b9      	str	r1, [r7, #8]
 800106e:	607a      	str	r2, [r7, #4]
 8001070:	603b      	str	r3, [r7, #0]
 8001072:	68fb      	ldr	r3, [r7, #12]
 8001074:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001078:	77fb      	strb	r3, [r7, #31]
 800107a:	68fb      	ldr	r3, [r7, #12]
 800107c:	681b      	ldr	r3, [r3, #0]
 800107e:	689b      	ldr	r3, [r3, #8]
 8001080:	61bb      	str	r3, [r7, #24]
 8001082:	7ffb      	ldrb	r3, [r7, #31]
 8001084:	2b01      	cmp	r3, #1
 8001086:	d003      	beq.n	8001090 <HAL_CAN_AddTxMessage+0x2c>
 8001088:	7ffb      	ldrb	r3, [r7, #31]
 800108a:	2b02      	cmp	r3, #2
 800108c:	f040 80ad 	bne.w	80011ea <HAL_CAN_AddTxMessage+0x186>
 8001090:	69bb      	ldr	r3, [r7, #24]
 8001092:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8001096:	2b00      	cmp	r3, #0
 8001098:	d10a      	bne.n	80010b0 <HAL_CAN_AddTxMessage+0x4c>
 800109a:	69bb      	ldr	r3, [r7, #24]
 800109c:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 80010a0:	2b00      	cmp	r3, #0
 80010a2:	d105      	bne.n	80010b0 <HAL_CAN_AddTxMessage+0x4c>
 80010a4:	69bb      	ldr	r3, [r7, #24]
 80010a6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80010aa:	2b00      	cmp	r3, #0
 80010ac:	f000 8095 	beq.w	80011da <HAL_CAN_AddTxMessage+0x176>
 80010b0:	69bb      	ldr	r3, [r7, #24]
 80010b2:	0e1b      	lsrs	r3, r3, #24
 80010b4:	f003 0303 	and.w	r3, r3, #3
 80010b8:	617b      	str	r3, [r7, #20]
 80010ba:	2201      	movs	r2, #1
 80010bc:	697b      	ldr	r3, [r7, #20]
 80010be:	409a      	lsls	r2, r3
 80010c0:	683b      	ldr	r3, [r7, #0]
 80010c2:	601a      	str	r2, [r3, #0]
 80010c4:	68bb      	ldr	r3, [r7, #8]
 80010c6:	689b      	ldr	r3, [r3, #8]
 80010c8:	2b00      	cmp	r3, #0
 80010ca:	d10d      	bne.n	80010e8 <HAL_CAN_AddTxMessage+0x84>
 80010cc:	68bb      	ldr	r3, [r7, #8]
 80010ce:	681b      	ldr	r3, [r3, #0]
 80010d0:	055a      	lsls	r2, r3, #21
 80010d2:	68bb      	ldr	r3, [r7, #8]
 80010d4:	68db      	ldr	r3, [r3, #12]
 80010d6:	68f9      	ldr	r1, [r7, #12]
 80010d8:	6809      	ldr	r1, [r1, #0]
 80010da:	431a      	orrs	r2, r3
 80010dc:	697b      	ldr	r3, [r7, #20]
 80010de:	3318      	adds	r3, #24
 80010e0:	011b      	lsls	r3, r3, #4
 80010e2:	440b      	add	r3, r1
 80010e4:	601a      	str	r2, [r3, #0]
 80010e6:	e00f      	b.n	8001108 <HAL_CAN_AddTxMessage+0xa4>
 80010e8:	68bb      	ldr	r3, [r7, #8]
 80010ea:	685b      	ldr	r3, [r3, #4]
 80010ec:	00da      	lsls	r2, r3, #3
 80010ee:	68bb      	ldr	r3, [r7, #8]
 80010f0:	689b      	ldr	r3, [r3, #8]
 80010f2:	431a      	orrs	r2, r3
 80010f4:	68bb      	ldr	r3, [r7, #8]
 80010f6:	68db      	ldr	r3, [r3, #12]
 80010f8:	68f9      	ldr	r1, [r7, #12]
 80010fa:	6809      	ldr	r1, [r1, #0]
 80010fc:	431a      	orrs	r2, r3
 80010fe:	697b      	ldr	r3, [r7, #20]
 8001100:	3318      	adds	r3, #24
 8001102:	011b      	lsls	r3, r3, #4
 8001104:	440b      	add	r3, r1
 8001106:	601a      	str	r2, [r3, #0]
 8001108:	68fb      	ldr	r3, [r7, #12]
 800110a:	6819      	ldr	r1, [r3, #0]
 800110c:	68bb      	ldr	r3, [r7, #8]
 800110e:	691a      	ldr	r2, [r3, #16]
 8001110:	697b      	ldr	r3, [r7, #20]
 8001112:	3318      	adds	r3, #24
 8001114:	011b      	lsls	r3, r3, #4
 8001116:	440b      	add	r3, r1
 8001118:	3304      	adds	r3, #4
 800111a:	601a      	str	r2, [r3, #0]
 800111c:	68bb      	ldr	r3, [r7, #8]
 800111e:	7d1b      	ldrb	r3, [r3, #20]
 8001120:	2b01      	cmp	r3, #1
 8001122:	d111      	bne.n	8001148 <HAL_CAN_AddTxMessage+0xe4>
 8001124:	68fb      	ldr	r3, [r7, #12]
 8001126:	681a      	ldr	r2, [r3, #0]
 8001128:	697b      	ldr	r3, [r7, #20]
 800112a:	3318      	adds	r3, #24
 800112c:	011b      	lsls	r3, r3, #4
 800112e:	4413      	add	r3, r2
 8001130:	3304      	adds	r3, #4
 8001132:	681b      	ldr	r3, [r3, #0]
 8001134:	68fa      	ldr	r2, [r7, #12]
 8001136:	6811      	ldr	r1, [r2, #0]
 8001138:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 800113c:	697b      	ldr	r3, [r7, #20]
 800113e:	3318      	adds	r3, #24
 8001140:	011b      	lsls	r3, r3, #4
 8001142:	440b      	add	r3, r1
 8001144:	3304      	adds	r3, #4
 8001146:	601a      	str	r2, [r3, #0]
 8001148:	687b      	ldr	r3, [r7, #4]
 800114a:	3307      	adds	r3, #7
 800114c:	781b      	ldrb	r3, [r3, #0]
 800114e:	061a      	lsls	r2, r3, #24
 8001150:	687b      	ldr	r3, [r7, #4]
 8001152:	3306      	adds	r3, #6
 8001154:	781b      	ldrb	r3, [r3, #0]
 8001156:	041b      	lsls	r3, r3, #16
 8001158:	431a      	orrs	r2, r3
 800115a:	687b      	ldr	r3, [r7, #4]
 800115c:	3305      	adds	r3, #5
 800115e:	781b      	ldrb	r3, [r3, #0]
 8001160:	021b      	lsls	r3, r3, #8
 8001162:	4313      	orrs	r3, r2
 8001164:	687a      	ldr	r2, [r7, #4]
 8001166:	3204      	adds	r2, #4
 8001168:	7812      	ldrb	r2, [r2, #0]
 800116a:	4610      	mov	r0, r2
 800116c:	68fa      	ldr	r2, [r7, #12]
 800116e:	6811      	ldr	r1, [r2, #0]
 8001170:	ea43 0200 	orr.w	r2, r3, r0
 8001174:	697b      	ldr	r3, [r7, #20]
 8001176:	011b      	lsls	r3, r3, #4
 8001178:	440b      	add	r3, r1
 800117a:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 800117e:	601a      	str	r2, [r3, #0]
 8001180:	687b      	ldr	r3, [r7, #4]
 8001182:	3303      	adds	r3, #3
 8001184:	781b      	ldrb	r3, [r3, #0]
 8001186:	061a      	lsls	r2, r3, #24
 8001188:	687b      	ldr	r3, [r7, #4]
 800118a:	3302      	adds	r3, #2
 800118c:	781b      	ldrb	r3, [r3, #0]
 800118e:	041b      	lsls	r3, r3, #16
 8001190:	431a      	orrs	r2, r3
 8001192:	687b      	ldr	r3, [r7, #4]
 8001194:	3301      	adds	r3, #1
 8001196:	781b      	ldrb	r3, [r3, #0]
 8001198:	021b      	lsls	r3, r3, #8
 800119a:	4313      	orrs	r3, r2
 800119c:	687a      	ldr	r2, [r7, #4]
 800119e:	7812      	ldrb	r2, [r2, #0]
 80011a0:	4610      	mov	r0, r2
 80011a2:	68fa      	ldr	r2, [r7, #12]
 80011a4:	6811      	ldr	r1, [r2, #0]
 80011a6:	ea43 0200 	orr.w	r2, r3, r0
 80011aa:	697b      	ldr	r3, [r7, #20]
 80011ac:	011b      	lsls	r3, r3, #4
 80011ae:	440b      	add	r3, r1
 80011b0:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 80011b4:	601a      	str	r2, [r3, #0]
 80011b6:	68fb      	ldr	r3, [r7, #12]
 80011b8:	681a      	ldr	r2, [r3, #0]
 80011ba:	697b      	ldr	r3, [r7, #20]
 80011bc:	3318      	adds	r3, #24
 80011be:	011b      	lsls	r3, r3, #4
 80011c0:	4413      	add	r3, r2
 80011c2:	681b      	ldr	r3, [r3, #0]
 80011c4:	68fa      	ldr	r2, [r7, #12]
 80011c6:	6811      	ldr	r1, [r2, #0]
 80011c8:	f043 0201 	orr.w	r2, r3, #1
 80011cc:	697b      	ldr	r3, [r7, #20]
 80011ce:	3318      	adds	r3, #24
 80011d0:	011b      	lsls	r3, r3, #4
 80011d2:	440b      	add	r3, r1
 80011d4:	601a      	str	r2, [r3, #0]
 80011d6:	2300      	movs	r3, #0
 80011d8:	e00e      	b.n	80011f8 <HAL_CAN_AddTxMessage+0x194>
 80011da:	68fb      	ldr	r3, [r7, #12]
 80011dc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80011de:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 80011e2:	68fb      	ldr	r3, [r7, #12]
 80011e4:	625a      	str	r2, [r3, #36]	@ 0x24
 80011e6:	2301      	movs	r3, #1
 80011e8:	e006      	b.n	80011f8 <HAL_CAN_AddTxMessage+0x194>
 80011ea:	68fb      	ldr	r3, [r7, #12]
 80011ec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80011ee:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 80011f2:	68fb      	ldr	r3, [r7, #12]
 80011f4:	625a      	str	r2, [r3, #36]	@ 0x24
 80011f6:	2301      	movs	r3, #1
 80011f8:	4618      	mov	r0, r3
 80011fa:	3724      	adds	r7, #36	@ 0x24
 80011fc:	46bd      	mov	sp, r7
 80011fe:	bc80      	pop	{r7}
 8001200:	4770      	bx	lr

08001202 <HAL_CAN_GetRxMessage>:
 8001202:	b480      	push	{r7}
 8001204:	b087      	sub	sp, #28
 8001206:	af00      	add	r7, sp, #0
 8001208:	60f8      	str	r0, [r7, #12]
 800120a:	60b9      	str	r1, [r7, #8]
 800120c:	607a      	str	r2, [r7, #4]
 800120e:	603b      	str	r3, [r7, #0]
 8001210:	68fb      	ldr	r3, [r7, #12]
 8001212:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001216:	75fb      	strb	r3, [r7, #23]
 8001218:	7dfb      	ldrb	r3, [r7, #23]
 800121a:	2b01      	cmp	r3, #1
 800121c:	d003      	beq.n	8001226 <HAL_CAN_GetRxMessage+0x24>
 800121e:	7dfb      	ldrb	r3, [r7, #23]
 8001220:	2b02      	cmp	r3, #2
 8001222:	f040 8103 	bne.w	800142c <HAL_CAN_GetRxMessage+0x22a>
 8001226:	68bb      	ldr	r3, [r7, #8]
 8001228:	2b00      	cmp	r3, #0
 800122a:	d10e      	bne.n	800124a <HAL_CAN_GetRxMessage+0x48>
 800122c:	68fb      	ldr	r3, [r7, #12]
 800122e:	681b      	ldr	r3, [r3, #0]
 8001230:	68db      	ldr	r3, [r3, #12]
 8001232:	f003 0303 	and.w	r3, r3, #3
 8001236:	2b00      	cmp	r3, #0
 8001238:	d116      	bne.n	8001268 <HAL_CAN_GetRxMessage+0x66>
 800123a:	68fb      	ldr	r3, [r7, #12]
 800123c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800123e:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8001242:	68fb      	ldr	r3, [r7, #12]
 8001244:	625a      	str	r2, [r3, #36]	@ 0x24
 8001246:	2301      	movs	r3, #1
 8001248:	e0f7      	b.n	800143a <HAL_CAN_GetRxMessage+0x238>
 800124a:	68fb      	ldr	r3, [r7, #12]
 800124c:	681b      	ldr	r3, [r3, #0]
 800124e:	691b      	ldr	r3, [r3, #16]
 8001250:	f003 0303 	and.w	r3, r3, #3
 8001254:	2b00      	cmp	r3, #0
 8001256:	d107      	bne.n	8001268 <HAL_CAN_GetRxMessage+0x66>
 8001258:	68fb      	ldr	r3, [r7, #12]
 800125a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800125c:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 8001260:	68fb      	ldr	r3, [r7, #12]
 8001262:	625a      	str	r2, [r3, #36]	@ 0x24
 8001264:	2301      	movs	r3, #1
 8001266:	e0e8      	b.n	800143a <HAL_CAN_GetRxMessage+0x238>
 8001268:	68fb      	ldr	r3, [r7, #12]
 800126a:	681a      	ldr	r2, [r3, #0]
 800126c:	68bb      	ldr	r3, [r7, #8]
 800126e:	331b      	adds	r3, #27
 8001270:	011b      	lsls	r3, r3, #4
 8001272:	4413      	add	r3, r2
 8001274:	681b      	ldr	r3, [r3, #0]
 8001276:	f003 0204 	and.w	r2, r3, #4
 800127a:	687b      	ldr	r3, [r7, #4]
 800127c:	609a      	str	r2, [r3, #8]
 800127e:	687b      	ldr	r3, [r7, #4]
 8001280:	689b      	ldr	r3, [r3, #8]
 8001282:	2b00      	cmp	r3, #0
 8001284:	d10c      	bne.n	80012a0 <HAL_CAN_GetRxMessage+0x9e>
 8001286:	68fb      	ldr	r3, [r7, #12]
 8001288:	681a      	ldr	r2, [r3, #0]
 800128a:	68bb      	ldr	r3, [r7, #8]
 800128c:	331b      	adds	r3, #27
 800128e:	011b      	lsls	r3, r3, #4
 8001290:	4413      	add	r3, r2
 8001292:	681b      	ldr	r3, [r3, #0]
 8001294:	0d5b      	lsrs	r3, r3, #21
 8001296:	f3c3 020a 	ubfx	r2, r3, #0, #11
 800129a:	687b      	ldr	r3, [r7, #4]
 800129c:	601a      	str	r2, [r3, #0]
 800129e:	e00b      	b.n	80012b8 <HAL_CAN_GetRxMessage+0xb6>
 80012a0:	68fb      	ldr	r3, [r7, #12]
 80012a2:	681a      	ldr	r2, [r3, #0]
 80012a4:	68bb      	ldr	r3, [r7, #8]
 80012a6:	331b      	adds	r3, #27
 80012a8:	011b      	lsls	r3, r3, #4
 80012aa:	4413      	add	r3, r2
 80012ac:	681b      	ldr	r3, [r3, #0]
 80012ae:	08db      	lsrs	r3, r3, #3
 80012b0:	f023 4260 	bic.w	r2, r3, #3758096384	@ 0xe0000000
 80012b4:	687b      	ldr	r3, [r7, #4]
 80012b6:	605a      	str	r2, [r3, #4]
 80012b8:	68fb      	ldr	r3, [r7, #12]
 80012ba:	681a      	ldr	r2, [r3, #0]
 80012bc:	68bb      	ldr	r3, [r7, #8]
 80012be:	331b      	adds	r3, #27
 80012c0:	011b      	lsls	r3, r3, #4
 80012c2:	4413      	add	r3, r2
 80012c4:	681b      	ldr	r3, [r3, #0]
 80012c6:	f003 0202 	and.w	r2, r3, #2
 80012ca:	687b      	ldr	r3, [r7, #4]
 80012cc:	60da      	str	r2, [r3, #12]
 80012ce:	68fb      	ldr	r3, [r7, #12]
 80012d0:	681a      	ldr	r2, [r3, #0]
 80012d2:	68bb      	ldr	r3, [r7, #8]
 80012d4:	331b      	adds	r3, #27
 80012d6:	011b      	lsls	r3, r3, #4
 80012d8:	4413      	add	r3, r2
 80012da:	3304      	adds	r3, #4
 80012dc:	681b      	ldr	r3, [r3, #0]
 80012de:	f003 0308 	and.w	r3, r3, #8
 80012e2:	2b00      	cmp	r3, #0
 80012e4:	d003      	beq.n	80012ee <HAL_CAN_GetRxMessage+0xec>
 80012e6:	687b      	ldr	r3, [r7, #4]
 80012e8:	2208      	movs	r2, #8
 80012ea:	611a      	str	r2, [r3, #16]
 80012ec:	e00b      	b.n	8001306 <HAL_CAN_GetRxMessage+0x104>
 80012ee:	68fb      	ldr	r3, [r7, #12]
 80012f0:	681a      	ldr	r2, [r3, #0]
 80012f2:	68bb      	ldr	r3, [r7, #8]
 80012f4:	331b      	adds	r3, #27
 80012f6:	011b      	lsls	r3, r3, #4
 80012f8:	4413      	add	r3, r2
 80012fa:	3304      	adds	r3, #4
 80012fc:	681b      	ldr	r3, [r3, #0]
 80012fe:	f003 020f 	and.w	r2, r3, #15
 8001302:	687b      	ldr	r3, [r7, #4]
 8001304:	611a      	str	r2, [r3, #16]
 8001306:	68fb      	ldr	r3, [r7, #12]
 8001308:	681a      	ldr	r2, [r3, #0]
 800130a:	68bb      	ldr	r3, [r7, #8]
 800130c:	331b      	adds	r3, #27
 800130e:	011b      	lsls	r3, r3, #4
 8001310:	4413      	add	r3, r2
 8001312:	3304      	adds	r3, #4
 8001314:	681b      	ldr	r3, [r3, #0]
 8001316:	0a1b      	lsrs	r3, r3, #8
 8001318:	b2da      	uxtb	r2, r3
 800131a:	687b      	ldr	r3, [r7, #4]
 800131c:	619a      	str	r2, [r3, #24]
 800131e:	68fb      	ldr	r3, [r7, #12]
 8001320:	681a      	ldr	r2, [r3, #0]
 8001322:	68bb      	ldr	r3, [r7, #8]
 8001324:	331b      	adds	r3, #27
 8001326:	011b      	lsls	r3, r3, #4
 8001328:	4413      	add	r3, r2
 800132a:	3304      	adds	r3, #4
 800132c:	681b      	ldr	r3, [r3, #0]
 800132e:	0c1b      	lsrs	r3, r3, #16
 8001330:	b29a      	uxth	r2, r3
 8001332:	687b      	ldr	r3, [r7, #4]
 8001334:	615a      	str	r2, [r3, #20]
 8001336:	68fb      	ldr	r3, [r7, #12]
 8001338:	681a      	ldr	r2, [r3, #0]
 800133a:	68bb      	ldr	r3, [r7, #8]
 800133c:	011b      	lsls	r3, r3, #4
 800133e:	4413      	add	r3, r2
 8001340:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 8001344:	681b      	ldr	r3, [r3, #0]
 8001346:	b2da      	uxtb	r2, r3
 8001348:	683b      	ldr	r3, [r7, #0]
 800134a:	701a      	strb	r2, [r3, #0]
 800134c:	68fb      	ldr	r3, [r7, #12]
 800134e:	681a      	ldr	r2, [r3, #0]
 8001350:	68bb      	ldr	r3, [r7, #8]
 8001352:	011b      	lsls	r3, r3, #4
 8001354:	4413      	add	r3, r2
 8001356:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 800135a:	681b      	ldr	r3, [r3, #0]
 800135c:	0a1a      	lsrs	r2, r3, #8
 800135e:	683b      	ldr	r3, [r7, #0]
 8001360:	3301      	adds	r3, #1
 8001362:	b2d2      	uxtb	r2, r2
 8001364:	701a      	strb	r2, [r3, #0]
 8001366:	68fb      	ldr	r3, [r7, #12]
 8001368:	681a      	ldr	r2, [r3, #0]
 800136a:	68bb      	ldr	r3, [r7, #8]
 800136c:	011b      	lsls	r3, r3, #4
 800136e:	4413      	add	r3, r2
 8001370:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 8001374:	681b      	ldr	r3, [r3, #0]
 8001376:	0c1a      	lsrs	r2, r3, #16
 8001378:	683b      	ldr	r3, [r7, #0]
 800137a:	3302      	adds	r3, #2
 800137c:	b2d2      	uxtb	r2, r2
 800137e:	701a      	strb	r2, [r3, #0]
 8001380:	68fb      	ldr	r3, [r7, #12]
 8001382:	681a      	ldr	r2, [r3, #0]
 8001384:	68bb      	ldr	r3, [r7, #8]
 8001386:	011b      	lsls	r3, r3, #4
 8001388:	4413      	add	r3, r2
 800138a:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 800138e:	681b      	ldr	r3, [r3, #0]
 8001390:	0e1a      	lsrs	r2, r3, #24
 8001392:	683b      	ldr	r3, [r7, #0]
 8001394:	3303      	adds	r3, #3
 8001396:	b2d2      	uxtb	r2, r2
 8001398:	701a      	strb	r2, [r3, #0]
 800139a:	68fb      	ldr	r3, [r7, #12]
 800139c:	681a      	ldr	r2, [r3, #0]
 800139e:	68bb      	ldr	r3, [r7, #8]
 80013a0:	011b      	lsls	r3, r3, #4
 80013a2:	4413      	add	r3, r2
 80013a4:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 80013a8:	681a      	ldr	r2, [r3, #0]
 80013aa:	683b      	ldr	r3, [r7, #0]
 80013ac:	3304      	adds	r3, #4
 80013ae:	b2d2      	uxtb	r2, r2
 80013b0:	701a      	strb	r2, [r3, #0]
 80013b2:	68fb      	ldr	r3, [r7, #12]
 80013b4:	681a      	ldr	r2, [r3, #0]
 80013b6:	68bb      	ldr	r3, [r7, #8]
 80013b8:	011b      	lsls	r3, r3, #4
 80013ba:	4413      	add	r3, r2
 80013bc:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 80013c0:	681b      	ldr	r3, [r3, #0]
 80013c2:	0a1a      	lsrs	r2, r3, #8
 80013c4:	683b      	ldr	r3, [r7, #0]
 80013c6:	3305      	adds	r3, #5
 80013c8:	b2d2      	uxtb	r2, r2
 80013ca:	701a      	strb	r2, [r3, #0]
 80013cc:	68fb      	ldr	r3, [r7, #12]
 80013ce:	681a      	ldr	r2, [r3, #0]
 80013d0:	68bb      	ldr	r3, [r7, #8]
 80013d2:	011b      	lsls	r3, r3, #4
 80013d4:	4413      	add	r3, r2
 80013d6:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 80013da:	681b      	ldr	r3, [r3, #0]
 80013dc:	0c1a      	lsrs	r2, r3, #16
 80013de:	683b      	ldr	r3, [r7, #0]
 80013e0:	3306      	adds	r3, #6
 80013e2:	b2d2      	uxtb	r2, r2
 80013e4:	701a      	strb	r2, [r3, #0]
 80013e6:	68fb      	ldr	r3, [r7, #12]
 80013e8:	681a      	ldr	r2, [r3, #0]
 80013ea:	68bb      	ldr	r3, [r7, #8]
 80013ec:	011b      	lsls	r3, r3, #4
 80013ee:	4413      	add	r3, r2
 80013f0:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 80013f4:	681b      	ldr	r3, [r3, #0]
 80013f6:	0e1a      	lsrs	r2, r3, #24
 80013f8:	683b      	ldr	r3, [r7, #0]
 80013fa:	3307      	adds	r3, #7
 80013fc:	b2d2      	uxtb	r2, r2
 80013fe:	701a      	strb	r2, [r3, #0]
 8001400:	68bb      	ldr	r3, [r7, #8]
 8001402:	2b00      	cmp	r3, #0
 8001404:	d108      	bne.n	8001418 <HAL_CAN_GetRxMessage+0x216>
 8001406:	68fb      	ldr	r3, [r7, #12]
 8001408:	681b      	ldr	r3, [r3, #0]
 800140a:	68da      	ldr	r2, [r3, #12]
 800140c:	68fb      	ldr	r3, [r7, #12]
 800140e:	681b      	ldr	r3, [r3, #0]
 8001410:	f042 0220 	orr.w	r2, r2, #32
 8001414:	60da      	str	r2, [r3, #12]
 8001416:	e007      	b.n	8001428 <HAL_CAN_GetRxMessage+0x226>
 8001418:	68fb      	ldr	r3, [r7, #12]
 800141a:	681b      	ldr	r3, [r3, #0]
 800141c:	691a      	ldr	r2, [r3, #16]
 800141e:	68fb      	ldr	r3, [r7, #12]
 8001420:	681b      	ldr	r3, [r3, #0]
 8001422:	f042 0220 	orr.w	r2, r2, #32
 8001426:	611a      	str	r2, [r3, #16]
 8001428:	2300      	movs	r3, #0
 800142a:	e006      	b.n	800143a <HAL_CAN_GetRxMessage+0x238>
 800142c:	68fb      	ldr	r3, [r7, #12]
 800142e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001430:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8001434:	68fb      	ldr	r3, [r7, #12]
 8001436:	625a      	str	r2, [r3, #36]	@ 0x24
 8001438:	2301      	movs	r3, #1
 800143a:	4618      	mov	r0, r3
 800143c:	371c      	adds	r7, #28
 800143e:	46bd      	mov	sp, r7
 8001440:	bc80      	pop	{r7}
 8001442:	4770      	bx	lr

08001444 <HAL_CAN_ActivateNotification>:
 8001444:	b480      	push	{r7}
 8001446:	b085      	sub	sp, #20
 8001448:	af00      	add	r7, sp, #0
 800144a:	6078      	str	r0, [r7, #4]
 800144c:	6039      	str	r1, [r7, #0]
 800144e:	687b      	ldr	r3, [r7, #4]
 8001450:	f893 3020 	ldrb.w	r3, [r3, #32]
 8001454:	73fb      	strb	r3, [r7, #15]
 8001456:	7bfb      	ldrb	r3, [r7, #15]
 8001458:	2b01      	cmp	r3, #1
 800145a:	d002      	beq.n	8001462 <HAL_CAN_ActivateNotification+0x1e>
 800145c:	7bfb      	ldrb	r3, [r7, #15]
 800145e:	2b02      	cmp	r3, #2
 8001460:	d109      	bne.n	8001476 <HAL_CAN_ActivateNotification+0x32>
 8001462:	687b      	ldr	r3, [r7, #4]
 8001464:	681b      	ldr	r3, [r3, #0]
 8001466:	6959      	ldr	r1, [r3, #20]
 8001468:	687b      	ldr	r3, [r7, #4]
 800146a:	681b      	ldr	r3, [r3, #0]
 800146c:	683a      	ldr	r2, [r7, #0]
 800146e:	430a      	orrs	r2, r1
 8001470:	615a      	str	r2, [r3, #20]
 8001472:	2300      	movs	r3, #0
 8001474:	e006      	b.n	8001484 <HAL_CAN_ActivateNotification+0x40>
 8001476:	687b      	ldr	r3, [r7, #4]
 8001478:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800147a:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 800147e:	687b      	ldr	r3, [r7, #4]
 8001480:	625a      	str	r2, [r3, #36]	@ 0x24
 8001482:	2301      	movs	r3, #1
 8001484:	4618      	mov	r0, r3
 8001486:	3714      	adds	r7, #20
 8001488:	46bd      	mov	sp, r7
 800148a:	bc80      	pop	{r7}
 800148c:	4770      	bx	lr

0800148e <HAL_CAN_IRQHandler>:
 800148e:	b580      	push	{r7, lr}
 8001490:	b08a      	sub	sp, #40	@ 0x28
 8001492:	af00      	add	r7, sp, #0
 8001494:	6078      	str	r0, [r7, #4]
 8001496:	2300      	movs	r3, #0
 8001498:	627b      	str	r3, [r7, #36]	@ 0x24
 800149a:	687b      	ldr	r3, [r7, #4]
 800149c:	681b      	ldr	r3, [r3, #0]
 800149e:	695b      	ldr	r3, [r3, #20]
 80014a0:	623b      	str	r3, [r7, #32]
 80014a2:	687b      	ldr	r3, [r7, #4]
 80014a4:	681b      	ldr	r3, [r3, #0]
 80014a6:	685b      	ldr	r3, [r3, #4]
 80014a8:	61fb      	str	r3, [r7, #28]
 80014aa:	687b      	ldr	r3, [r7, #4]
 80014ac:	681b      	ldr	r3, [r3, #0]
 80014ae:	689b      	ldr	r3, [r3, #8]
 80014b0:	61bb      	str	r3, [r7, #24]
 80014b2:	687b      	ldr	r3, [r7, #4]
 80014b4:	681b      	ldr	r3, [r3, #0]
 80014b6:	68db      	ldr	r3, [r3, #12]
 80014b8:	617b      	str	r3, [r7, #20]
 80014ba:	687b      	ldr	r3, [r7, #4]
 80014bc:	681b      	ldr	r3, [r3, #0]
 80014be:	691b      	ldr	r3, [r3, #16]
 80014c0:	613b      	str	r3, [r7, #16]
 80014c2:	687b      	ldr	r3, [r7, #4]
 80014c4:	681b      	ldr	r3, [r3, #0]
 80014c6:	699b      	ldr	r3, [r3, #24]
 80014c8:	60fb      	str	r3, [r7, #12]
 80014ca:	6a3b      	ldr	r3, [r7, #32]
 80014cc:	f003 0301 	and.w	r3, r3, #1
 80014d0:	2b00      	cmp	r3, #0
 80014d2:	d07c      	beq.n	80015ce <HAL_CAN_IRQHandler+0x140>
 80014d4:	69bb      	ldr	r3, [r7, #24]
 80014d6:	f003 0301 	and.w	r3, r3, #1
 80014da:	2b00      	cmp	r3, #0
 80014dc:	d023      	beq.n	8001526 <HAL_CAN_IRQHandler+0x98>
 80014de:	687b      	ldr	r3, [r7, #4]
 80014e0:	681b      	ldr	r3, [r3, #0]
 80014e2:	2201      	movs	r2, #1
 80014e4:	609a      	str	r2, [r3, #8]
 80014e6:	69bb      	ldr	r3, [r7, #24]
 80014e8:	f003 0302 	and.w	r3, r3, #2
 80014ec:	2b00      	cmp	r3, #0
 80014ee:	d003      	beq.n	80014f8 <HAL_CAN_IRQHandler+0x6a>
 80014f0:	6878      	ldr	r0, [r7, #4]
 80014f2:	f000 f983 	bl	80017fc <HAL_CAN_TxMailbox0CompleteCallback>
 80014f6:	e016      	b.n	8001526 <HAL_CAN_IRQHandler+0x98>
 80014f8:	69bb      	ldr	r3, [r7, #24]
 80014fa:	f003 0304 	and.w	r3, r3, #4
 80014fe:	2b00      	cmp	r3, #0
 8001500:	d004      	beq.n	800150c <HAL_CAN_IRQHandler+0x7e>
 8001502:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001504:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8001508:	627b      	str	r3, [r7, #36]	@ 0x24
 800150a:	e00c      	b.n	8001526 <HAL_CAN_IRQHandler+0x98>
 800150c:	69bb      	ldr	r3, [r7, #24]
 800150e:	f003 0308 	and.w	r3, r3, #8
 8001512:	2b00      	cmp	r3, #0
 8001514:	d004      	beq.n	8001520 <HAL_CAN_IRQHandler+0x92>
 8001516:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001518:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800151c:	627b      	str	r3, [r7, #36]	@ 0x24
 800151e:	e002      	b.n	8001526 <HAL_CAN_IRQHandler+0x98>
 8001520:	6878      	ldr	r0, [r7, #4]
 8001522:	f000 f986 	bl	8001832 <HAL_CAN_TxMailbox0AbortCallback>
 8001526:	69bb      	ldr	r3, [r7, #24]
 8001528:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800152c:	2b00      	cmp	r3, #0
 800152e:	d024      	beq.n	800157a <HAL_CAN_IRQHandler+0xec>
 8001530:	687b      	ldr	r3, [r7, #4]
 8001532:	681b      	ldr	r3, [r3, #0]
 8001534:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001538:	609a      	str	r2, [r3, #8]
 800153a:	69bb      	ldr	r3, [r7, #24]
 800153c:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8001540:	2b00      	cmp	r3, #0
 8001542:	d003      	beq.n	800154c <HAL_CAN_IRQHandler+0xbe>
 8001544:	6878      	ldr	r0, [r7, #4]
 8001546:	f000 f962 	bl	800180e <HAL_CAN_TxMailbox1CompleteCallback>
 800154a:	e016      	b.n	800157a <HAL_CAN_IRQHandler+0xec>
 800154c:	69bb      	ldr	r3, [r7, #24]
 800154e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001552:	2b00      	cmp	r3, #0
 8001554:	d004      	beq.n	8001560 <HAL_CAN_IRQHandler+0xd2>
 8001556:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001558:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800155c:	627b      	str	r3, [r7, #36]	@ 0x24
 800155e:	e00c      	b.n	800157a <HAL_CAN_IRQHandler+0xec>
 8001560:	69bb      	ldr	r3, [r7, #24]
 8001562:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001566:	2b00      	cmp	r3, #0
 8001568:	d004      	beq.n	8001574 <HAL_CAN_IRQHandler+0xe6>
 800156a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800156c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001570:	627b      	str	r3, [r7, #36]	@ 0x24
 8001572:	e002      	b.n	800157a <HAL_CAN_IRQHandler+0xec>
 8001574:	6878      	ldr	r0, [r7, #4]
 8001576:	f000 f965 	bl	8001844 <HAL_CAN_TxMailbox1AbortCallback>
 800157a:	69bb      	ldr	r3, [r7, #24]
 800157c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001580:	2b00      	cmp	r3, #0
 8001582:	d024      	beq.n	80015ce <HAL_CAN_IRQHandler+0x140>
 8001584:	687b      	ldr	r3, [r7, #4]
 8001586:	681b      	ldr	r3, [r3, #0]
 8001588:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 800158c:	609a      	str	r2, [r3, #8]
 800158e:	69bb      	ldr	r3, [r7, #24]
 8001590:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001594:	2b00      	cmp	r3, #0
 8001596:	d003      	beq.n	80015a0 <HAL_CAN_IRQHandler+0x112>
 8001598:	6878      	ldr	r0, [r7, #4]
 800159a:	f000 f941 	bl	8001820 <HAL_CAN_TxMailbox2CompleteCallback>
 800159e:	e016      	b.n	80015ce <HAL_CAN_IRQHandler+0x140>
 80015a0:	69bb      	ldr	r3, [r7, #24]
 80015a2:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80015a6:	2b00      	cmp	r3, #0
 80015a8:	d004      	beq.n	80015b4 <HAL_CAN_IRQHandler+0x126>
 80015aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80015ac:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80015b0:	627b      	str	r3, [r7, #36]	@ 0x24
 80015b2:	e00c      	b.n	80015ce <HAL_CAN_IRQHandler+0x140>
 80015b4:	69bb      	ldr	r3, [r7, #24]
 80015b6:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80015ba:	2b00      	cmp	r3, #0
 80015bc:	d004      	beq.n	80015c8 <HAL_CAN_IRQHandler+0x13a>
 80015be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80015c0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80015c4:	627b      	str	r3, [r7, #36]	@ 0x24
 80015c6:	e002      	b.n	80015ce <HAL_CAN_IRQHandler+0x140>
 80015c8:	6878      	ldr	r0, [r7, #4]
 80015ca:	f000 f944 	bl	8001856 <HAL_CAN_TxMailbox2AbortCallback>
 80015ce:	6a3b      	ldr	r3, [r7, #32]
 80015d0:	f003 0308 	and.w	r3, r3, #8
 80015d4:	2b00      	cmp	r3, #0
 80015d6:	d00c      	beq.n	80015f2 <HAL_CAN_IRQHandler+0x164>
 80015d8:	697b      	ldr	r3, [r7, #20]
 80015da:	f003 0310 	and.w	r3, r3, #16
 80015de:	2b00      	cmp	r3, #0
 80015e0:	d007      	beq.n	80015f2 <HAL_CAN_IRQHandler+0x164>
 80015e2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80015e4:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80015e8:	627b      	str	r3, [r7, #36]	@ 0x24
 80015ea:	687b      	ldr	r3, [r7, #4]
 80015ec:	681b      	ldr	r3, [r3, #0]
 80015ee:	2210      	movs	r2, #16
 80015f0:	60da      	str	r2, [r3, #12]
 80015f2:	6a3b      	ldr	r3, [r7, #32]
 80015f4:	f003 0304 	and.w	r3, r3, #4
 80015f8:	2b00      	cmp	r3, #0
 80015fa:	d00b      	beq.n	8001614 <HAL_CAN_IRQHandler+0x186>
 80015fc:	697b      	ldr	r3, [r7, #20]
 80015fe:	f003 0308 	and.w	r3, r3, #8
 8001602:	2b00      	cmp	r3, #0
 8001604:	d006      	beq.n	8001614 <HAL_CAN_IRQHandler+0x186>
 8001606:	687b      	ldr	r3, [r7, #4]
 8001608:	681b      	ldr	r3, [r3, #0]
 800160a:	2208      	movs	r2, #8
 800160c:	60da      	str	r2, [r3, #12]
 800160e:	6878      	ldr	r0, [r7, #4]
 8001610:	f000 f92a 	bl	8001868 <HAL_CAN_RxFifo0FullCallback>
 8001614:	6a3b      	ldr	r3, [r7, #32]
 8001616:	f003 0302 	and.w	r3, r3, #2
 800161a:	2b00      	cmp	r3, #0
 800161c:	d009      	beq.n	8001632 <HAL_CAN_IRQHandler+0x1a4>
 800161e:	687b      	ldr	r3, [r7, #4]
 8001620:	681b      	ldr	r3, [r3, #0]
 8001622:	68db      	ldr	r3, [r3, #12]
 8001624:	f003 0303 	and.w	r3, r3, #3
 8001628:	2b00      	cmp	r3, #0
 800162a:	d002      	beq.n	8001632 <HAL_CAN_IRQHandler+0x1a4>
 800162c:	6878      	ldr	r0, [r7, #4]
 800162e:	f7fe ff83 	bl	8000538 <HAL_CAN_RxFifo0MsgPendingCallback>
 8001632:	6a3b      	ldr	r3, [r7, #32]
 8001634:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001638:	2b00      	cmp	r3, #0
 800163a:	d00c      	beq.n	8001656 <HAL_CAN_IRQHandler+0x1c8>
 800163c:	693b      	ldr	r3, [r7, #16]
 800163e:	f003 0310 	and.w	r3, r3, #16
 8001642:	2b00      	cmp	r3, #0
 8001644:	d007      	beq.n	8001656 <HAL_CAN_IRQHandler+0x1c8>
 8001646:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001648:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800164c:	627b      	str	r3, [r7, #36]	@ 0x24
 800164e:	687b      	ldr	r3, [r7, #4]
 8001650:	681b      	ldr	r3, [r3, #0]
 8001652:	2210      	movs	r2, #16
 8001654:	611a      	str	r2, [r3, #16]
 8001656:	6a3b      	ldr	r3, [r7, #32]
 8001658:	f003 0320 	and.w	r3, r3, #32
 800165c:	2b00      	cmp	r3, #0
 800165e:	d00b      	beq.n	8001678 <HAL_CAN_IRQHandler+0x1ea>
 8001660:	693b      	ldr	r3, [r7, #16]
 8001662:	f003 0308 	and.w	r3, r3, #8
 8001666:	2b00      	cmp	r3, #0
 8001668:	d006      	beq.n	8001678 <HAL_CAN_IRQHandler+0x1ea>
 800166a:	687b      	ldr	r3, [r7, #4]
 800166c:	681b      	ldr	r3, [r3, #0]
 800166e:	2208      	movs	r2, #8
 8001670:	611a      	str	r2, [r3, #16]
 8001672:	6878      	ldr	r0, [r7, #4]
 8001674:	f000 f90a 	bl	800188c <HAL_CAN_RxFifo1FullCallback>
 8001678:	6a3b      	ldr	r3, [r7, #32]
 800167a:	f003 0310 	and.w	r3, r3, #16
 800167e:	2b00      	cmp	r3, #0
 8001680:	d009      	beq.n	8001696 <HAL_CAN_IRQHandler+0x208>
 8001682:	687b      	ldr	r3, [r7, #4]
 8001684:	681b      	ldr	r3, [r3, #0]
 8001686:	691b      	ldr	r3, [r3, #16]
 8001688:	f003 0303 	and.w	r3, r3, #3
 800168c:	2b00      	cmp	r3, #0
 800168e:	d002      	beq.n	8001696 <HAL_CAN_IRQHandler+0x208>
 8001690:	6878      	ldr	r0, [r7, #4]
 8001692:	f000 f8f2 	bl	800187a <HAL_CAN_RxFifo1MsgPendingCallback>
 8001696:	6a3b      	ldr	r3, [r7, #32]
 8001698:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800169c:	2b00      	cmp	r3, #0
 800169e:	d00b      	beq.n	80016b8 <HAL_CAN_IRQHandler+0x22a>
 80016a0:	69fb      	ldr	r3, [r7, #28]
 80016a2:	f003 0310 	and.w	r3, r3, #16
 80016a6:	2b00      	cmp	r3, #0
 80016a8:	d006      	beq.n	80016b8 <HAL_CAN_IRQHandler+0x22a>
 80016aa:	687b      	ldr	r3, [r7, #4]
 80016ac:	681b      	ldr	r3, [r3, #0]
 80016ae:	2210      	movs	r2, #16
 80016b0:	605a      	str	r2, [r3, #4]
 80016b2:	6878      	ldr	r0, [r7, #4]
 80016b4:	f000 f8f3 	bl	800189e <HAL_CAN_SleepCallback>
 80016b8:	6a3b      	ldr	r3, [r7, #32]
 80016ba:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80016be:	2b00      	cmp	r3, #0
 80016c0:	d00b      	beq.n	80016da <HAL_CAN_IRQHandler+0x24c>
 80016c2:	69fb      	ldr	r3, [r7, #28]
 80016c4:	f003 0308 	and.w	r3, r3, #8
 80016c8:	2b00      	cmp	r3, #0
 80016ca:	d006      	beq.n	80016da <HAL_CAN_IRQHandler+0x24c>
 80016cc:	687b      	ldr	r3, [r7, #4]
 80016ce:	681b      	ldr	r3, [r3, #0]
 80016d0:	2208      	movs	r2, #8
 80016d2:	605a      	str	r2, [r3, #4]
 80016d4:	6878      	ldr	r0, [r7, #4]
 80016d6:	f000 f8eb 	bl	80018b0 <HAL_CAN_WakeUpFromRxMsgCallback>
 80016da:	6a3b      	ldr	r3, [r7, #32]
 80016dc:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80016e0:	2b00      	cmp	r3, #0
 80016e2:	d07b      	beq.n	80017dc <HAL_CAN_IRQHandler+0x34e>
 80016e4:	69fb      	ldr	r3, [r7, #28]
 80016e6:	f003 0304 	and.w	r3, r3, #4
 80016ea:	2b00      	cmp	r3, #0
 80016ec:	d072      	beq.n	80017d4 <HAL_CAN_IRQHandler+0x346>
 80016ee:	6a3b      	ldr	r3, [r7, #32]
 80016f0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80016f4:	2b00      	cmp	r3, #0
 80016f6:	d008      	beq.n	800170a <HAL_CAN_IRQHandler+0x27c>
 80016f8:	68fb      	ldr	r3, [r7, #12]
 80016fa:	f003 0301 	and.w	r3, r3, #1
 80016fe:	2b00      	cmp	r3, #0
 8001700:	d003      	beq.n	800170a <HAL_CAN_IRQHandler+0x27c>
 8001702:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001704:	f043 0301 	orr.w	r3, r3, #1
 8001708:	627b      	str	r3, [r7, #36]	@ 0x24
 800170a:	6a3b      	ldr	r3, [r7, #32]
 800170c:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8001710:	2b00      	cmp	r3, #0
 8001712:	d008      	beq.n	8001726 <HAL_CAN_IRQHandler+0x298>
 8001714:	68fb      	ldr	r3, [r7, #12]
 8001716:	f003 0302 	and.w	r3, r3, #2
 800171a:	2b00      	cmp	r3, #0
 800171c:	d003      	beq.n	8001726 <HAL_CAN_IRQHandler+0x298>
 800171e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001720:	f043 0302 	orr.w	r3, r3, #2
 8001724:	627b      	str	r3, [r7, #36]	@ 0x24
 8001726:	6a3b      	ldr	r3, [r7, #32]
 8001728:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800172c:	2b00      	cmp	r3, #0
 800172e:	d008      	beq.n	8001742 <HAL_CAN_IRQHandler+0x2b4>
 8001730:	68fb      	ldr	r3, [r7, #12]
 8001732:	f003 0304 	and.w	r3, r3, #4
 8001736:	2b00      	cmp	r3, #0
 8001738:	d003      	beq.n	8001742 <HAL_CAN_IRQHandler+0x2b4>
 800173a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800173c:	f043 0304 	orr.w	r3, r3, #4
 8001740:	627b      	str	r3, [r7, #36]	@ 0x24
 8001742:	6a3b      	ldr	r3, [r7, #32]
 8001744:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001748:	2b00      	cmp	r3, #0
 800174a:	d043      	beq.n	80017d4 <HAL_CAN_IRQHandler+0x346>
 800174c:	68fb      	ldr	r3, [r7, #12]
 800174e:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8001752:	2b00      	cmp	r3, #0
 8001754:	d03e      	beq.n	80017d4 <HAL_CAN_IRQHandler+0x346>
 8001756:	68fb      	ldr	r3, [r7, #12]
 8001758:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800175c:	2b60      	cmp	r3, #96	@ 0x60
 800175e:	d02b      	beq.n	80017b8 <HAL_CAN_IRQHandler+0x32a>
 8001760:	2b60      	cmp	r3, #96	@ 0x60
 8001762:	d82e      	bhi.n	80017c2 <HAL_CAN_IRQHandler+0x334>
 8001764:	2b50      	cmp	r3, #80	@ 0x50
 8001766:	d022      	beq.n	80017ae <HAL_CAN_IRQHandler+0x320>
 8001768:	2b50      	cmp	r3, #80	@ 0x50
 800176a:	d82a      	bhi.n	80017c2 <HAL_CAN_IRQHandler+0x334>
 800176c:	2b40      	cmp	r3, #64	@ 0x40
 800176e:	d019      	beq.n	80017a4 <HAL_CAN_IRQHandler+0x316>
 8001770:	2b40      	cmp	r3, #64	@ 0x40
 8001772:	d826      	bhi.n	80017c2 <HAL_CAN_IRQHandler+0x334>
 8001774:	2b30      	cmp	r3, #48	@ 0x30
 8001776:	d010      	beq.n	800179a <HAL_CAN_IRQHandler+0x30c>
 8001778:	2b30      	cmp	r3, #48	@ 0x30
 800177a:	d822      	bhi.n	80017c2 <HAL_CAN_IRQHandler+0x334>
 800177c:	2b10      	cmp	r3, #16
 800177e:	d002      	beq.n	8001786 <HAL_CAN_IRQHandler+0x2f8>
 8001780:	2b20      	cmp	r3, #32
 8001782:	d005      	beq.n	8001790 <HAL_CAN_IRQHandler+0x302>
 8001784:	e01d      	b.n	80017c2 <HAL_CAN_IRQHandler+0x334>
 8001786:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001788:	f043 0308 	orr.w	r3, r3, #8
 800178c:	627b      	str	r3, [r7, #36]	@ 0x24
 800178e:	e019      	b.n	80017c4 <HAL_CAN_IRQHandler+0x336>
 8001790:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001792:	f043 0310 	orr.w	r3, r3, #16
 8001796:	627b      	str	r3, [r7, #36]	@ 0x24
 8001798:	e014      	b.n	80017c4 <HAL_CAN_IRQHandler+0x336>
 800179a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800179c:	f043 0320 	orr.w	r3, r3, #32
 80017a0:	627b      	str	r3, [r7, #36]	@ 0x24
 80017a2:	e00f      	b.n	80017c4 <HAL_CAN_IRQHandler+0x336>
 80017a4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80017a6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80017aa:	627b      	str	r3, [r7, #36]	@ 0x24
 80017ac:	e00a      	b.n	80017c4 <HAL_CAN_IRQHandler+0x336>
 80017ae:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80017b0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80017b4:	627b      	str	r3, [r7, #36]	@ 0x24
 80017b6:	e005      	b.n	80017c4 <HAL_CAN_IRQHandler+0x336>
 80017b8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80017ba:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80017be:	627b      	str	r3, [r7, #36]	@ 0x24
 80017c0:	e000      	b.n	80017c4 <HAL_CAN_IRQHandler+0x336>
 80017c2:	bf00      	nop
 80017c4:	687b      	ldr	r3, [r7, #4]
 80017c6:	681b      	ldr	r3, [r3, #0]
 80017c8:	699a      	ldr	r2, [r3, #24]
 80017ca:	687b      	ldr	r3, [r7, #4]
 80017cc:	681b      	ldr	r3, [r3, #0]
 80017ce:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 80017d2:	619a      	str	r2, [r3, #24]
 80017d4:	687b      	ldr	r3, [r7, #4]
 80017d6:	681b      	ldr	r3, [r3, #0]
 80017d8:	2204      	movs	r2, #4
 80017da:	605a      	str	r2, [r3, #4]
 80017dc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80017de:	2b00      	cmp	r3, #0
 80017e0:	d008      	beq.n	80017f4 <HAL_CAN_IRQHandler+0x366>
 80017e2:	687b      	ldr	r3, [r7, #4]
 80017e4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80017e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80017e8:	431a      	orrs	r2, r3
 80017ea:	687b      	ldr	r3, [r7, #4]
 80017ec:	625a      	str	r2, [r3, #36]	@ 0x24
 80017ee:	6878      	ldr	r0, [r7, #4]
 80017f0:	f000 f867 	bl	80018c2 <HAL_CAN_ErrorCallback>
 80017f4:	bf00      	nop
 80017f6:	3728      	adds	r7, #40	@ 0x28
 80017f8:	46bd      	mov	sp, r7
 80017fa:	bd80      	pop	{r7, pc}

080017fc <HAL_CAN_TxMailbox0CompleteCallback>:
 80017fc:	b480      	push	{r7}
 80017fe:	b083      	sub	sp, #12
 8001800:	af00      	add	r7, sp, #0
 8001802:	6078      	str	r0, [r7, #4]
 8001804:	bf00      	nop
 8001806:	370c      	adds	r7, #12
 8001808:	46bd      	mov	sp, r7
 800180a:	bc80      	pop	{r7}
 800180c:	4770      	bx	lr

0800180e <HAL_CAN_TxMailbox1CompleteCallback>:
 800180e:	b480      	push	{r7}
 8001810:	b083      	sub	sp, #12
 8001812:	af00      	add	r7, sp, #0
 8001814:	6078      	str	r0, [r7, #4]
 8001816:	bf00      	nop
 8001818:	370c      	adds	r7, #12
 800181a:	46bd      	mov	sp, r7
 800181c:	bc80      	pop	{r7}
 800181e:	4770      	bx	lr

08001820 <HAL_CAN_TxMailbox2CompleteCallback>:
 8001820:	b480      	push	{r7}
 8001822:	b083      	sub	sp, #12
 8001824:	af00      	add	r7, sp, #0
 8001826:	6078      	str	r0, [r7, #4]
 8001828:	bf00      	nop
 800182a:	370c      	adds	r7, #12
 800182c:	46bd      	mov	sp, r7
 800182e:	bc80      	pop	{r7}
 8001830:	4770      	bx	lr

08001832 <HAL_CAN_TxMailbox0AbortCallback>:
 8001832:	b480      	push	{r7}
 8001834:	b083      	sub	sp, #12
 8001836:	af00      	add	r7, sp, #0
 8001838:	6078      	str	r0, [r7, #4]
 800183a:	bf00      	nop
 800183c:	370c      	adds	r7, #12
 800183e:	46bd      	mov	sp, r7
 8001840:	bc80      	pop	{r7}
 8001842:	4770      	bx	lr

08001844 <HAL_CAN_TxMailbox1AbortCallback>:
 8001844:	b480      	push	{r7}
 8001846:	b083      	sub	sp, #12
 8001848:	af00      	add	r7, sp, #0
 800184a:	6078      	str	r0, [r7, #4]
 800184c:	bf00      	nop
 800184e:	370c      	adds	r7, #12
 8001850:	46bd      	mov	sp, r7
 8001852:	bc80      	pop	{r7}
 8001854:	4770      	bx	lr

08001856 <HAL_CAN_TxMailbox2AbortCallback>:
 8001856:	b480      	push	{r7}
 8001858:	b083      	sub	sp, #12
 800185a:	af00      	add	r7, sp, #0
 800185c:	6078      	str	r0, [r7, #4]
 800185e:	bf00      	nop
 8001860:	370c      	adds	r7, #12
 8001862:	46bd      	mov	sp, r7
 8001864:	bc80      	pop	{r7}
 8001866:	4770      	bx	lr

08001868 <HAL_CAN_RxFifo0FullCallback>:
 8001868:	b480      	push	{r7}
 800186a:	b083      	sub	sp, #12
 800186c:	af00      	add	r7, sp, #0
 800186e:	6078      	str	r0, [r7, #4]
 8001870:	bf00      	nop
 8001872:	370c      	adds	r7, #12
 8001874:	46bd      	mov	sp, r7
 8001876:	bc80      	pop	{r7}
 8001878:	4770      	bx	lr

0800187a <HAL_CAN_RxFifo1MsgPendingCallback>:
 800187a:	b480      	push	{r7}
 800187c:	b083      	sub	sp, #12
 800187e:	af00      	add	r7, sp, #0
 8001880:	6078      	str	r0, [r7, #4]
 8001882:	bf00      	nop
 8001884:	370c      	adds	r7, #12
 8001886:	46bd      	mov	sp, r7
 8001888:	bc80      	pop	{r7}
 800188a:	4770      	bx	lr

0800188c <HAL_CAN_RxFifo1FullCallback>:
 800188c:	b480      	push	{r7}
 800188e:	b083      	sub	sp, #12
 8001890:	af00      	add	r7, sp, #0
 8001892:	6078      	str	r0, [r7, #4]
 8001894:	bf00      	nop
 8001896:	370c      	adds	r7, #12
 8001898:	46bd      	mov	sp, r7
 800189a:	bc80      	pop	{r7}
 800189c:	4770      	bx	lr

0800189e <HAL_CAN_SleepCallback>:
 800189e:	b480      	push	{r7}
 80018a0:	b083      	sub	sp, #12
 80018a2:	af00      	add	r7, sp, #0
 80018a4:	6078      	str	r0, [r7, #4]
 80018a6:	bf00      	nop
 80018a8:	370c      	adds	r7, #12
 80018aa:	46bd      	mov	sp, r7
 80018ac:	bc80      	pop	{r7}
 80018ae:	4770      	bx	lr

080018b0 <HAL_CAN_WakeUpFromRxMsgCallback>:
 80018b0:	b480      	push	{r7}
 80018b2:	b083      	sub	sp, #12
 80018b4:	af00      	add	r7, sp, #0
 80018b6:	6078      	str	r0, [r7, #4]
 80018b8:	bf00      	nop
 80018ba:	370c      	adds	r7, #12
 80018bc:	46bd      	mov	sp, r7
 80018be:	bc80      	pop	{r7}
 80018c0:	4770      	bx	lr

080018c2 <HAL_CAN_ErrorCallback>:
 80018c2:	b480      	push	{r7}
 80018c4:	b083      	sub	sp, #12
 80018c6:	af00      	add	r7, sp, #0
 80018c8:	6078      	str	r0, [r7, #4]
 80018ca:	bf00      	nop
 80018cc:	370c      	adds	r7, #12
 80018ce:	46bd      	mov	sp, r7
 80018d0:	bc80      	pop	{r7}
 80018d2:	4770      	bx	lr

080018d4 <__NVIC_SetPriorityGrouping>:
 80018d4:	b480      	push	{r7}
 80018d6:	b085      	sub	sp, #20
 80018d8:	af00      	add	r7, sp, #0
 80018da:	6078      	str	r0, [r7, #4]
 80018dc:	687b      	ldr	r3, [r7, #4]
 80018de:	f003 0307 	and.w	r3, r3, #7
 80018e2:	60fb      	str	r3, [r7, #12]
 80018e4:	4b0c      	ldr	r3, [pc, #48]	@ (8001918 <__NVIC_SetPriorityGrouping+0x44>)
 80018e6:	68db      	ldr	r3, [r3, #12]
 80018e8:	60bb      	str	r3, [r7, #8]
 80018ea:	68ba      	ldr	r2, [r7, #8]
 80018ec:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80018f0:	4013      	ands	r3, r2
 80018f2:	60bb      	str	r3, [r7, #8]
 80018f4:	68fb      	ldr	r3, [r7, #12]
 80018f6:	021a      	lsls	r2, r3, #8
 80018f8:	68bb      	ldr	r3, [r7, #8]
 80018fa:	4313      	orrs	r3, r2
 80018fc:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001900:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001904:	60bb      	str	r3, [r7, #8]
 8001906:	4a04      	ldr	r2, [pc, #16]	@ (8001918 <__NVIC_SetPriorityGrouping+0x44>)
 8001908:	68bb      	ldr	r3, [r7, #8]
 800190a:	60d3      	str	r3, [r2, #12]
 800190c:	bf00      	nop
 800190e:	3714      	adds	r7, #20
 8001910:	46bd      	mov	sp, r7
 8001912:	bc80      	pop	{r7}
 8001914:	4770      	bx	lr
 8001916:	bf00      	nop
 8001918:	e000ed00 	.word	0xe000ed00

0800191c <__NVIC_GetPriorityGrouping>:
 800191c:	b480      	push	{r7}
 800191e:	af00      	add	r7, sp, #0
 8001920:	4b04      	ldr	r3, [pc, #16]	@ (8001934 <__NVIC_GetPriorityGrouping+0x18>)
 8001922:	68db      	ldr	r3, [r3, #12]
 8001924:	0a1b      	lsrs	r3, r3, #8
 8001926:	f003 0307 	and.w	r3, r3, #7
 800192a:	4618      	mov	r0, r3
 800192c:	46bd      	mov	sp, r7
 800192e:	bc80      	pop	{r7}
 8001930:	4770      	bx	lr
 8001932:	bf00      	nop
 8001934:	e000ed00 	.word	0xe000ed00

08001938 <__NVIC_EnableIRQ>:
 8001938:	b480      	push	{r7}
 800193a:	b083      	sub	sp, #12
 800193c:	af00      	add	r7, sp, #0
 800193e:	4603      	mov	r3, r0
 8001940:	71fb      	strb	r3, [r7, #7]
 8001942:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001946:	2b00      	cmp	r3, #0
 8001948:	db0b      	blt.n	8001962 <__NVIC_EnableIRQ+0x2a>
 800194a:	79fb      	ldrb	r3, [r7, #7]
 800194c:	f003 021f 	and.w	r2, r3, #31
 8001950:	4906      	ldr	r1, [pc, #24]	@ (800196c <__NVIC_EnableIRQ+0x34>)
 8001952:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001956:	095b      	lsrs	r3, r3, #5
 8001958:	2001      	movs	r0, #1
 800195a:	fa00 f202 	lsl.w	r2, r0, r2
 800195e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001962:	bf00      	nop
 8001964:	370c      	adds	r7, #12
 8001966:	46bd      	mov	sp, r7
 8001968:	bc80      	pop	{r7}
 800196a:	4770      	bx	lr
 800196c:	e000e100 	.word	0xe000e100

08001970 <__NVIC_SetPriority>:
 8001970:	b480      	push	{r7}
 8001972:	b083      	sub	sp, #12
 8001974:	af00      	add	r7, sp, #0
 8001976:	4603      	mov	r3, r0
 8001978:	6039      	str	r1, [r7, #0]
 800197a:	71fb      	strb	r3, [r7, #7]
 800197c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001980:	2b00      	cmp	r3, #0
 8001982:	db0a      	blt.n	800199a <__NVIC_SetPriority+0x2a>
 8001984:	683b      	ldr	r3, [r7, #0]
 8001986:	b2da      	uxtb	r2, r3
 8001988:	490c      	ldr	r1, [pc, #48]	@ (80019bc <__NVIC_SetPriority+0x4c>)
 800198a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800198e:	0112      	lsls	r2, r2, #4
 8001990:	b2d2      	uxtb	r2, r2
 8001992:	440b      	add	r3, r1
 8001994:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8001998:	e00a      	b.n	80019b0 <__NVIC_SetPriority+0x40>
 800199a:	683b      	ldr	r3, [r7, #0]
 800199c:	b2da      	uxtb	r2, r3
 800199e:	4908      	ldr	r1, [pc, #32]	@ (80019c0 <__NVIC_SetPriority+0x50>)
 80019a0:	79fb      	ldrb	r3, [r7, #7]
 80019a2:	f003 030f 	and.w	r3, r3, #15
 80019a6:	3b04      	subs	r3, #4
 80019a8:	0112      	lsls	r2, r2, #4
 80019aa:	b2d2      	uxtb	r2, r2
 80019ac:	440b      	add	r3, r1
 80019ae:	761a      	strb	r2, [r3, #24]
 80019b0:	bf00      	nop
 80019b2:	370c      	adds	r7, #12
 80019b4:	46bd      	mov	sp, r7
 80019b6:	bc80      	pop	{r7}
 80019b8:	4770      	bx	lr
 80019ba:	bf00      	nop
 80019bc:	e000e100 	.word	0xe000e100
 80019c0:	e000ed00 	.word	0xe000ed00

080019c4 <NVIC_EncodePriority>:
 80019c4:	b480      	push	{r7}
 80019c6:	b089      	sub	sp, #36	@ 0x24
 80019c8:	af00      	add	r7, sp, #0
 80019ca:	60f8      	str	r0, [r7, #12]
 80019cc:	60b9      	str	r1, [r7, #8]
 80019ce:	607a      	str	r2, [r7, #4]
 80019d0:	68fb      	ldr	r3, [r7, #12]
 80019d2:	f003 0307 	and.w	r3, r3, #7
 80019d6:	61fb      	str	r3, [r7, #28]
 80019d8:	69fb      	ldr	r3, [r7, #28]
 80019da:	f1c3 0307 	rsb	r3, r3, #7
 80019de:	2b04      	cmp	r3, #4
 80019e0:	bf28      	it	cs
 80019e2:	2304      	movcs	r3, #4
 80019e4:	61bb      	str	r3, [r7, #24]
 80019e6:	69fb      	ldr	r3, [r7, #28]
 80019e8:	3304      	adds	r3, #4
 80019ea:	2b06      	cmp	r3, #6
 80019ec:	d902      	bls.n	80019f4 <NVIC_EncodePriority+0x30>
 80019ee:	69fb      	ldr	r3, [r7, #28]
 80019f0:	3b03      	subs	r3, #3
 80019f2:	e000      	b.n	80019f6 <NVIC_EncodePriority+0x32>
 80019f4:	2300      	movs	r3, #0
 80019f6:	617b      	str	r3, [r7, #20]
 80019f8:	f04f 32ff 	mov.w	r2, #4294967295
 80019fc:	69bb      	ldr	r3, [r7, #24]
 80019fe:	fa02 f303 	lsl.w	r3, r2, r3
 8001a02:	43da      	mvns	r2, r3
 8001a04:	68bb      	ldr	r3, [r7, #8]
 8001a06:	401a      	ands	r2, r3
 8001a08:	697b      	ldr	r3, [r7, #20]
 8001a0a:	409a      	lsls	r2, r3
 8001a0c:	f04f 31ff 	mov.w	r1, #4294967295
 8001a10:	697b      	ldr	r3, [r7, #20]
 8001a12:	fa01 f303 	lsl.w	r3, r1, r3
 8001a16:	43d9      	mvns	r1, r3
 8001a18:	687b      	ldr	r3, [r7, #4]
 8001a1a:	400b      	ands	r3, r1
 8001a1c:	4313      	orrs	r3, r2
 8001a1e:	4618      	mov	r0, r3
 8001a20:	3724      	adds	r7, #36	@ 0x24
 8001a22:	46bd      	mov	sp, r7
 8001a24:	bc80      	pop	{r7}
 8001a26:	4770      	bx	lr

08001a28 <SysTick_Config>:
 8001a28:	b580      	push	{r7, lr}
 8001a2a:	b082      	sub	sp, #8
 8001a2c:	af00      	add	r7, sp, #0
 8001a2e:	6078      	str	r0, [r7, #4]
 8001a30:	687b      	ldr	r3, [r7, #4]
 8001a32:	3b01      	subs	r3, #1
 8001a34:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001a38:	d301      	bcc.n	8001a3e <SysTick_Config+0x16>
 8001a3a:	2301      	movs	r3, #1
 8001a3c:	e00f      	b.n	8001a5e <SysTick_Config+0x36>
 8001a3e:	4a0a      	ldr	r2, [pc, #40]	@ (8001a68 <SysTick_Config+0x40>)
 8001a40:	687b      	ldr	r3, [r7, #4]
 8001a42:	3b01      	subs	r3, #1
 8001a44:	6053      	str	r3, [r2, #4]
 8001a46:	210f      	movs	r1, #15
 8001a48:	f04f 30ff 	mov.w	r0, #4294967295
 8001a4c:	f7ff ff90 	bl	8001970 <__NVIC_SetPriority>
 8001a50:	4b05      	ldr	r3, [pc, #20]	@ (8001a68 <SysTick_Config+0x40>)
 8001a52:	2200      	movs	r2, #0
 8001a54:	609a      	str	r2, [r3, #8]
 8001a56:	4b04      	ldr	r3, [pc, #16]	@ (8001a68 <SysTick_Config+0x40>)
 8001a58:	2207      	movs	r2, #7
 8001a5a:	601a      	str	r2, [r3, #0]
 8001a5c:	2300      	movs	r3, #0
 8001a5e:	4618      	mov	r0, r3
 8001a60:	3708      	adds	r7, #8
 8001a62:	46bd      	mov	sp, r7
 8001a64:	bd80      	pop	{r7, pc}
 8001a66:	bf00      	nop
 8001a68:	e000e010 	.word	0xe000e010

08001a6c <HAL_NVIC_SetPriorityGrouping>:
 8001a6c:	b580      	push	{r7, lr}
 8001a6e:	b082      	sub	sp, #8
 8001a70:	af00      	add	r7, sp, #0
 8001a72:	6078      	str	r0, [r7, #4]
 8001a74:	6878      	ldr	r0, [r7, #4]
 8001a76:	f7ff ff2d 	bl	80018d4 <__NVIC_SetPriorityGrouping>
 8001a7a:	bf00      	nop
 8001a7c:	3708      	adds	r7, #8
 8001a7e:	46bd      	mov	sp, r7
 8001a80:	bd80      	pop	{r7, pc}

08001a82 <HAL_NVIC_SetPriority>:
 8001a82:	b580      	push	{r7, lr}
 8001a84:	b086      	sub	sp, #24
 8001a86:	af00      	add	r7, sp, #0
 8001a88:	4603      	mov	r3, r0
 8001a8a:	60b9      	str	r1, [r7, #8]
 8001a8c:	607a      	str	r2, [r7, #4]
 8001a8e:	73fb      	strb	r3, [r7, #15]
 8001a90:	2300      	movs	r3, #0
 8001a92:	617b      	str	r3, [r7, #20]
 8001a94:	f7ff ff42 	bl	800191c <__NVIC_GetPriorityGrouping>
 8001a98:	6178      	str	r0, [r7, #20]
 8001a9a:	687a      	ldr	r2, [r7, #4]
 8001a9c:	68b9      	ldr	r1, [r7, #8]
 8001a9e:	6978      	ldr	r0, [r7, #20]
 8001aa0:	f7ff ff90 	bl	80019c4 <NVIC_EncodePriority>
 8001aa4:	4602      	mov	r2, r0
 8001aa6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001aaa:	4611      	mov	r1, r2
 8001aac:	4618      	mov	r0, r3
 8001aae:	f7ff ff5f 	bl	8001970 <__NVIC_SetPriority>
 8001ab2:	bf00      	nop
 8001ab4:	3718      	adds	r7, #24
 8001ab6:	46bd      	mov	sp, r7
 8001ab8:	bd80      	pop	{r7, pc}

08001aba <HAL_NVIC_EnableIRQ>:
 8001aba:	b580      	push	{r7, lr}
 8001abc:	b082      	sub	sp, #8
 8001abe:	af00      	add	r7, sp, #0
 8001ac0:	4603      	mov	r3, r0
 8001ac2:	71fb      	strb	r3, [r7, #7]
 8001ac4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001ac8:	4618      	mov	r0, r3
 8001aca:	f7ff ff35 	bl	8001938 <__NVIC_EnableIRQ>
 8001ace:	bf00      	nop
 8001ad0:	3708      	adds	r7, #8
 8001ad2:	46bd      	mov	sp, r7
 8001ad4:	bd80      	pop	{r7, pc}

08001ad6 <HAL_SYSTICK_Config>:
 8001ad6:	b580      	push	{r7, lr}
 8001ad8:	b082      	sub	sp, #8
 8001ada:	af00      	add	r7, sp, #0
 8001adc:	6078      	str	r0, [r7, #4]
 8001ade:	6878      	ldr	r0, [r7, #4]
 8001ae0:	f7ff ffa2 	bl	8001a28 <SysTick_Config>
 8001ae4:	4603      	mov	r3, r0
 8001ae6:	4618      	mov	r0, r3
 8001ae8:	3708      	adds	r7, #8
 8001aea:	46bd      	mov	sp, r7
 8001aec:	bd80      	pop	{r7, pc}
	...

08001af0 <HAL_GPIO_Init>:
 8001af0:	b480      	push	{r7}
 8001af2:	b08b      	sub	sp, #44	@ 0x2c
 8001af4:	af00      	add	r7, sp, #0
 8001af6:	6078      	str	r0, [r7, #4]
 8001af8:	6039      	str	r1, [r7, #0]
 8001afa:	2300      	movs	r3, #0
 8001afc:	627b      	str	r3, [r7, #36]	@ 0x24
 8001afe:	2300      	movs	r3, #0
 8001b00:	623b      	str	r3, [r7, #32]
 8001b02:	e161      	b.n	8001dc8 <HAL_GPIO_Init+0x2d8>
 8001b04:	2201      	movs	r2, #1
 8001b06:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001b08:	fa02 f303 	lsl.w	r3, r2, r3
 8001b0c:	61fb      	str	r3, [r7, #28]
 8001b0e:	683b      	ldr	r3, [r7, #0]
 8001b10:	681b      	ldr	r3, [r3, #0]
 8001b12:	69fa      	ldr	r2, [r7, #28]
 8001b14:	4013      	ands	r3, r2
 8001b16:	61bb      	str	r3, [r7, #24]
 8001b18:	69ba      	ldr	r2, [r7, #24]
 8001b1a:	69fb      	ldr	r3, [r7, #28]
 8001b1c:	429a      	cmp	r2, r3
 8001b1e:	f040 8150 	bne.w	8001dc2 <HAL_GPIO_Init+0x2d2>
 8001b22:	683b      	ldr	r3, [r7, #0]
 8001b24:	685b      	ldr	r3, [r3, #4]
 8001b26:	4a97      	ldr	r2, [pc, #604]	@ (8001d84 <HAL_GPIO_Init+0x294>)
 8001b28:	4293      	cmp	r3, r2
 8001b2a:	d05e      	beq.n	8001bea <HAL_GPIO_Init+0xfa>
 8001b2c:	4a95      	ldr	r2, [pc, #596]	@ (8001d84 <HAL_GPIO_Init+0x294>)
 8001b2e:	4293      	cmp	r3, r2
 8001b30:	d875      	bhi.n	8001c1e <HAL_GPIO_Init+0x12e>
 8001b32:	4a95      	ldr	r2, [pc, #596]	@ (8001d88 <HAL_GPIO_Init+0x298>)
 8001b34:	4293      	cmp	r3, r2
 8001b36:	d058      	beq.n	8001bea <HAL_GPIO_Init+0xfa>
 8001b38:	4a93      	ldr	r2, [pc, #588]	@ (8001d88 <HAL_GPIO_Init+0x298>)
 8001b3a:	4293      	cmp	r3, r2
 8001b3c:	d86f      	bhi.n	8001c1e <HAL_GPIO_Init+0x12e>
 8001b3e:	4a93      	ldr	r2, [pc, #588]	@ (8001d8c <HAL_GPIO_Init+0x29c>)
 8001b40:	4293      	cmp	r3, r2
 8001b42:	d052      	beq.n	8001bea <HAL_GPIO_Init+0xfa>
 8001b44:	4a91      	ldr	r2, [pc, #580]	@ (8001d8c <HAL_GPIO_Init+0x29c>)
 8001b46:	4293      	cmp	r3, r2
 8001b48:	d869      	bhi.n	8001c1e <HAL_GPIO_Init+0x12e>
 8001b4a:	4a91      	ldr	r2, [pc, #580]	@ (8001d90 <HAL_GPIO_Init+0x2a0>)
 8001b4c:	4293      	cmp	r3, r2
 8001b4e:	d04c      	beq.n	8001bea <HAL_GPIO_Init+0xfa>
 8001b50:	4a8f      	ldr	r2, [pc, #572]	@ (8001d90 <HAL_GPIO_Init+0x2a0>)
 8001b52:	4293      	cmp	r3, r2
 8001b54:	d863      	bhi.n	8001c1e <HAL_GPIO_Init+0x12e>
 8001b56:	4a8f      	ldr	r2, [pc, #572]	@ (8001d94 <HAL_GPIO_Init+0x2a4>)
 8001b58:	4293      	cmp	r3, r2
 8001b5a:	d046      	beq.n	8001bea <HAL_GPIO_Init+0xfa>
 8001b5c:	4a8d      	ldr	r2, [pc, #564]	@ (8001d94 <HAL_GPIO_Init+0x2a4>)
 8001b5e:	4293      	cmp	r3, r2
 8001b60:	d85d      	bhi.n	8001c1e <HAL_GPIO_Init+0x12e>
 8001b62:	2b12      	cmp	r3, #18
 8001b64:	d82a      	bhi.n	8001bbc <HAL_GPIO_Init+0xcc>
 8001b66:	2b12      	cmp	r3, #18
 8001b68:	d859      	bhi.n	8001c1e <HAL_GPIO_Init+0x12e>
 8001b6a:	a201      	add	r2, pc, #4	@ (adr r2, 8001b70 <HAL_GPIO_Init+0x80>)
 8001b6c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001b70:	08001beb 	.word	0x08001beb
 8001b74:	08001bc5 	.word	0x08001bc5
 8001b78:	08001bd7 	.word	0x08001bd7
 8001b7c:	08001c19 	.word	0x08001c19
 8001b80:	08001c1f 	.word	0x08001c1f
 8001b84:	08001c1f 	.word	0x08001c1f
 8001b88:	08001c1f 	.word	0x08001c1f
 8001b8c:	08001c1f 	.word	0x08001c1f
 8001b90:	08001c1f 	.word	0x08001c1f
 8001b94:	08001c1f 	.word	0x08001c1f
 8001b98:	08001c1f 	.word	0x08001c1f
 8001b9c:	08001c1f 	.word	0x08001c1f
 8001ba0:	08001c1f 	.word	0x08001c1f
 8001ba4:	08001c1f 	.word	0x08001c1f
 8001ba8:	08001c1f 	.word	0x08001c1f
 8001bac:	08001c1f 	.word	0x08001c1f
 8001bb0:	08001c1f 	.word	0x08001c1f
 8001bb4:	08001bcd 	.word	0x08001bcd
 8001bb8:	08001be1 	.word	0x08001be1
 8001bbc:	4a76      	ldr	r2, [pc, #472]	@ (8001d98 <HAL_GPIO_Init+0x2a8>)
 8001bbe:	4293      	cmp	r3, r2
 8001bc0:	d013      	beq.n	8001bea <HAL_GPIO_Init+0xfa>
 8001bc2:	e02c      	b.n	8001c1e <HAL_GPIO_Init+0x12e>
 8001bc4:	683b      	ldr	r3, [r7, #0]
 8001bc6:	68db      	ldr	r3, [r3, #12]
 8001bc8:	623b      	str	r3, [r7, #32]
 8001bca:	e029      	b.n	8001c20 <HAL_GPIO_Init+0x130>
 8001bcc:	683b      	ldr	r3, [r7, #0]
 8001bce:	68db      	ldr	r3, [r3, #12]
 8001bd0:	3304      	adds	r3, #4
 8001bd2:	623b      	str	r3, [r7, #32]
 8001bd4:	e024      	b.n	8001c20 <HAL_GPIO_Init+0x130>
 8001bd6:	683b      	ldr	r3, [r7, #0]
 8001bd8:	68db      	ldr	r3, [r3, #12]
 8001bda:	3308      	adds	r3, #8
 8001bdc:	623b      	str	r3, [r7, #32]
 8001bde:	e01f      	b.n	8001c20 <HAL_GPIO_Init+0x130>
 8001be0:	683b      	ldr	r3, [r7, #0]
 8001be2:	68db      	ldr	r3, [r3, #12]
 8001be4:	330c      	adds	r3, #12
 8001be6:	623b      	str	r3, [r7, #32]
 8001be8:	e01a      	b.n	8001c20 <HAL_GPIO_Init+0x130>
 8001bea:	683b      	ldr	r3, [r7, #0]
 8001bec:	689b      	ldr	r3, [r3, #8]
 8001bee:	2b00      	cmp	r3, #0
 8001bf0:	d102      	bne.n	8001bf8 <HAL_GPIO_Init+0x108>
 8001bf2:	2304      	movs	r3, #4
 8001bf4:	623b      	str	r3, [r7, #32]
 8001bf6:	e013      	b.n	8001c20 <HAL_GPIO_Init+0x130>
 8001bf8:	683b      	ldr	r3, [r7, #0]
 8001bfa:	689b      	ldr	r3, [r3, #8]
 8001bfc:	2b01      	cmp	r3, #1
 8001bfe:	d105      	bne.n	8001c0c <HAL_GPIO_Init+0x11c>
 8001c00:	2308      	movs	r3, #8
 8001c02:	623b      	str	r3, [r7, #32]
 8001c04:	687b      	ldr	r3, [r7, #4]
 8001c06:	69fa      	ldr	r2, [r7, #28]
 8001c08:	611a      	str	r2, [r3, #16]
 8001c0a:	e009      	b.n	8001c20 <HAL_GPIO_Init+0x130>
 8001c0c:	2308      	movs	r3, #8
 8001c0e:	623b      	str	r3, [r7, #32]
 8001c10:	687b      	ldr	r3, [r7, #4]
 8001c12:	69fa      	ldr	r2, [r7, #28]
 8001c14:	615a      	str	r2, [r3, #20]
 8001c16:	e003      	b.n	8001c20 <HAL_GPIO_Init+0x130>
 8001c18:	2300      	movs	r3, #0
 8001c1a:	623b      	str	r3, [r7, #32]
 8001c1c:	e000      	b.n	8001c20 <HAL_GPIO_Init+0x130>
 8001c1e:	bf00      	nop
 8001c20:	69bb      	ldr	r3, [r7, #24]
 8001c22:	2bff      	cmp	r3, #255	@ 0xff
 8001c24:	d801      	bhi.n	8001c2a <HAL_GPIO_Init+0x13a>
 8001c26:	687b      	ldr	r3, [r7, #4]
 8001c28:	e001      	b.n	8001c2e <HAL_GPIO_Init+0x13e>
 8001c2a:	687b      	ldr	r3, [r7, #4]
 8001c2c:	3304      	adds	r3, #4
 8001c2e:	617b      	str	r3, [r7, #20]
 8001c30:	69bb      	ldr	r3, [r7, #24]
 8001c32:	2bff      	cmp	r3, #255	@ 0xff
 8001c34:	d802      	bhi.n	8001c3c <HAL_GPIO_Init+0x14c>
 8001c36:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001c38:	009b      	lsls	r3, r3, #2
 8001c3a:	e002      	b.n	8001c42 <HAL_GPIO_Init+0x152>
 8001c3c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001c3e:	3b08      	subs	r3, #8
 8001c40:	009b      	lsls	r3, r3, #2
 8001c42:	613b      	str	r3, [r7, #16]
 8001c44:	697b      	ldr	r3, [r7, #20]
 8001c46:	681a      	ldr	r2, [r3, #0]
 8001c48:	210f      	movs	r1, #15
 8001c4a:	693b      	ldr	r3, [r7, #16]
 8001c4c:	fa01 f303 	lsl.w	r3, r1, r3
 8001c50:	43db      	mvns	r3, r3
 8001c52:	401a      	ands	r2, r3
 8001c54:	6a39      	ldr	r1, [r7, #32]
 8001c56:	693b      	ldr	r3, [r7, #16]
 8001c58:	fa01 f303 	lsl.w	r3, r1, r3
 8001c5c:	431a      	orrs	r2, r3
 8001c5e:	697b      	ldr	r3, [r7, #20]
 8001c60:	601a      	str	r2, [r3, #0]
 8001c62:	683b      	ldr	r3, [r7, #0]
 8001c64:	685b      	ldr	r3, [r3, #4]
 8001c66:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001c6a:	2b00      	cmp	r3, #0
 8001c6c:	f000 80a9 	beq.w	8001dc2 <HAL_GPIO_Init+0x2d2>
 8001c70:	4b4a      	ldr	r3, [pc, #296]	@ (8001d9c <HAL_GPIO_Init+0x2ac>)
 8001c72:	699b      	ldr	r3, [r3, #24]
 8001c74:	4a49      	ldr	r2, [pc, #292]	@ (8001d9c <HAL_GPIO_Init+0x2ac>)
 8001c76:	f043 0301 	orr.w	r3, r3, #1
 8001c7a:	6193      	str	r3, [r2, #24]
 8001c7c:	4b47      	ldr	r3, [pc, #284]	@ (8001d9c <HAL_GPIO_Init+0x2ac>)
 8001c7e:	699b      	ldr	r3, [r3, #24]
 8001c80:	f003 0301 	and.w	r3, r3, #1
 8001c84:	60bb      	str	r3, [r7, #8]
 8001c86:	68bb      	ldr	r3, [r7, #8]
 8001c88:	4a45      	ldr	r2, [pc, #276]	@ (8001da0 <HAL_GPIO_Init+0x2b0>)
 8001c8a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001c8c:	089b      	lsrs	r3, r3, #2
 8001c8e:	3302      	adds	r3, #2
 8001c90:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001c94:	60fb      	str	r3, [r7, #12]
 8001c96:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001c98:	f003 0303 	and.w	r3, r3, #3
 8001c9c:	009b      	lsls	r3, r3, #2
 8001c9e:	220f      	movs	r2, #15
 8001ca0:	fa02 f303 	lsl.w	r3, r2, r3
 8001ca4:	43db      	mvns	r3, r3
 8001ca6:	68fa      	ldr	r2, [r7, #12]
 8001ca8:	4013      	ands	r3, r2
 8001caa:	60fb      	str	r3, [r7, #12]
 8001cac:	687b      	ldr	r3, [r7, #4]
 8001cae:	4a3d      	ldr	r2, [pc, #244]	@ (8001da4 <HAL_GPIO_Init+0x2b4>)
 8001cb0:	4293      	cmp	r3, r2
 8001cb2:	d00d      	beq.n	8001cd0 <HAL_GPIO_Init+0x1e0>
 8001cb4:	687b      	ldr	r3, [r7, #4]
 8001cb6:	4a3c      	ldr	r2, [pc, #240]	@ (8001da8 <HAL_GPIO_Init+0x2b8>)
 8001cb8:	4293      	cmp	r3, r2
 8001cba:	d007      	beq.n	8001ccc <HAL_GPIO_Init+0x1dc>
 8001cbc:	687b      	ldr	r3, [r7, #4]
 8001cbe:	4a3b      	ldr	r2, [pc, #236]	@ (8001dac <HAL_GPIO_Init+0x2bc>)
 8001cc0:	4293      	cmp	r3, r2
 8001cc2:	d101      	bne.n	8001cc8 <HAL_GPIO_Init+0x1d8>
 8001cc4:	2302      	movs	r3, #2
 8001cc6:	e004      	b.n	8001cd2 <HAL_GPIO_Init+0x1e2>
 8001cc8:	2303      	movs	r3, #3
 8001cca:	e002      	b.n	8001cd2 <HAL_GPIO_Init+0x1e2>
 8001ccc:	2301      	movs	r3, #1
 8001cce:	e000      	b.n	8001cd2 <HAL_GPIO_Init+0x1e2>
 8001cd0:	2300      	movs	r3, #0
 8001cd2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001cd4:	f002 0203 	and.w	r2, r2, #3
 8001cd8:	0092      	lsls	r2, r2, #2
 8001cda:	4093      	lsls	r3, r2
 8001cdc:	68fa      	ldr	r2, [r7, #12]
 8001cde:	4313      	orrs	r3, r2
 8001ce0:	60fb      	str	r3, [r7, #12]
 8001ce2:	492f      	ldr	r1, [pc, #188]	@ (8001da0 <HAL_GPIO_Init+0x2b0>)
 8001ce4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001ce6:	089b      	lsrs	r3, r3, #2
 8001ce8:	3302      	adds	r3, #2
 8001cea:	68fa      	ldr	r2, [r7, #12]
 8001cec:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001cf0:	683b      	ldr	r3, [r7, #0]
 8001cf2:	685b      	ldr	r3, [r3, #4]
 8001cf4:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8001cf8:	2b00      	cmp	r3, #0
 8001cfa:	d006      	beq.n	8001d0a <HAL_GPIO_Init+0x21a>
 8001cfc:	4b2c      	ldr	r3, [pc, #176]	@ (8001db0 <HAL_GPIO_Init+0x2c0>)
 8001cfe:	689a      	ldr	r2, [r3, #8]
 8001d00:	492b      	ldr	r1, [pc, #172]	@ (8001db0 <HAL_GPIO_Init+0x2c0>)
 8001d02:	69bb      	ldr	r3, [r7, #24]
 8001d04:	4313      	orrs	r3, r2
 8001d06:	608b      	str	r3, [r1, #8]
 8001d08:	e006      	b.n	8001d18 <HAL_GPIO_Init+0x228>
 8001d0a:	4b29      	ldr	r3, [pc, #164]	@ (8001db0 <HAL_GPIO_Init+0x2c0>)
 8001d0c:	689a      	ldr	r2, [r3, #8]
 8001d0e:	69bb      	ldr	r3, [r7, #24]
 8001d10:	43db      	mvns	r3, r3
 8001d12:	4927      	ldr	r1, [pc, #156]	@ (8001db0 <HAL_GPIO_Init+0x2c0>)
 8001d14:	4013      	ands	r3, r2
 8001d16:	608b      	str	r3, [r1, #8]
 8001d18:	683b      	ldr	r3, [r7, #0]
 8001d1a:	685b      	ldr	r3, [r3, #4]
 8001d1c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001d20:	2b00      	cmp	r3, #0
 8001d22:	d006      	beq.n	8001d32 <HAL_GPIO_Init+0x242>
 8001d24:	4b22      	ldr	r3, [pc, #136]	@ (8001db0 <HAL_GPIO_Init+0x2c0>)
 8001d26:	68da      	ldr	r2, [r3, #12]
 8001d28:	4921      	ldr	r1, [pc, #132]	@ (8001db0 <HAL_GPIO_Init+0x2c0>)
 8001d2a:	69bb      	ldr	r3, [r7, #24]
 8001d2c:	4313      	orrs	r3, r2
 8001d2e:	60cb      	str	r3, [r1, #12]
 8001d30:	e006      	b.n	8001d40 <HAL_GPIO_Init+0x250>
 8001d32:	4b1f      	ldr	r3, [pc, #124]	@ (8001db0 <HAL_GPIO_Init+0x2c0>)
 8001d34:	68da      	ldr	r2, [r3, #12]
 8001d36:	69bb      	ldr	r3, [r7, #24]
 8001d38:	43db      	mvns	r3, r3
 8001d3a:	491d      	ldr	r1, [pc, #116]	@ (8001db0 <HAL_GPIO_Init+0x2c0>)
 8001d3c:	4013      	ands	r3, r2
 8001d3e:	60cb      	str	r3, [r1, #12]
 8001d40:	683b      	ldr	r3, [r7, #0]
 8001d42:	685b      	ldr	r3, [r3, #4]
 8001d44:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001d48:	2b00      	cmp	r3, #0
 8001d4a:	d006      	beq.n	8001d5a <HAL_GPIO_Init+0x26a>
 8001d4c:	4b18      	ldr	r3, [pc, #96]	@ (8001db0 <HAL_GPIO_Init+0x2c0>)
 8001d4e:	685a      	ldr	r2, [r3, #4]
 8001d50:	4917      	ldr	r1, [pc, #92]	@ (8001db0 <HAL_GPIO_Init+0x2c0>)
 8001d52:	69bb      	ldr	r3, [r7, #24]
 8001d54:	4313      	orrs	r3, r2
 8001d56:	604b      	str	r3, [r1, #4]
 8001d58:	e006      	b.n	8001d68 <HAL_GPIO_Init+0x278>
 8001d5a:	4b15      	ldr	r3, [pc, #84]	@ (8001db0 <HAL_GPIO_Init+0x2c0>)
 8001d5c:	685a      	ldr	r2, [r3, #4]
 8001d5e:	69bb      	ldr	r3, [r7, #24]
 8001d60:	43db      	mvns	r3, r3
 8001d62:	4913      	ldr	r1, [pc, #76]	@ (8001db0 <HAL_GPIO_Init+0x2c0>)
 8001d64:	4013      	ands	r3, r2
 8001d66:	604b      	str	r3, [r1, #4]
 8001d68:	683b      	ldr	r3, [r7, #0]
 8001d6a:	685b      	ldr	r3, [r3, #4]
 8001d6c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001d70:	2b00      	cmp	r3, #0
 8001d72:	d01f      	beq.n	8001db4 <HAL_GPIO_Init+0x2c4>
 8001d74:	4b0e      	ldr	r3, [pc, #56]	@ (8001db0 <HAL_GPIO_Init+0x2c0>)
 8001d76:	681a      	ldr	r2, [r3, #0]
 8001d78:	490d      	ldr	r1, [pc, #52]	@ (8001db0 <HAL_GPIO_Init+0x2c0>)
 8001d7a:	69bb      	ldr	r3, [r7, #24]
 8001d7c:	4313      	orrs	r3, r2
 8001d7e:	600b      	str	r3, [r1, #0]
 8001d80:	e01f      	b.n	8001dc2 <HAL_GPIO_Init+0x2d2>
 8001d82:	bf00      	nop
 8001d84:	10320000 	.word	0x10320000
 8001d88:	10310000 	.word	0x10310000
 8001d8c:	10220000 	.word	0x10220000
 8001d90:	10210000 	.word	0x10210000
 8001d94:	10120000 	.word	0x10120000
 8001d98:	10110000 	.word	0x10110000
 8001d9c:	40021000 	.word	0x40021000
 8001da0:	40010000 	.word	0x40010000
 8001da4:	40010800 	.word	0x40010800
 8001da8:	40010c00 	.word	0x40010c00
 8001dac:	40011000 	.word	0x40011000
 8001db0:	40010400 	.word	0x40010400
 8001db4:	4b0b      	ldr	r3, [pc, #44]	@ (8001de4 <HAL_GPIO_Init+0x2f4>)
 8001db6:	681a      	ldr	r2, [r3, #0]
 8001db8:	69bb      	ldr	r3, [r7, #24]
 8001dba:	43db      	mvns	r3, r3
 8001dbc:	4909      	ldr	r1, [pc, #36]	@ (8001de4 <HAL_GPIO_Init+0x2f4>)
 8001dbe:	4013      	ands	r3, r2
 8001dc0:	600b      	str	r3, [r1, #0]
 8001dc2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001dc4:	3301      	adds	r3, #1
 8001dc6:	627b      	str	r3, [r7, #36]	@ 0x24
 8001dc8:	683b      	ldr	r3, [r7, #0]
 8001dca:	681a      	ldr	r2, [r3, #0]
 8001dcc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001dce:	fa22 f303 	lsr.w	r3, r2, r3
 8001dd2:	2b00      	cmp	r3, #0
 8001dd4:	f47f ae96 	bne.w	8001b04 <HAL_GPIO_Init+0x14>
 8001dd8:	bf00      	nop
 8001dda:	bf00      	nop
 8001ddc:	372c      	adds	r7, #44	@ 0x2c
 8001dde:	46bd      	mov	sp, r7
 8001de0:	bc80      	pop	{r7}
 8001de2:	4770      	bx	lr
 8001de4:	40010400 	.word	0x40010400

08001de8 <HAL_GPIO_WritePin>:
 8001de8:	b480      	push	{r7}
 8001dea:	b083      	sub	sp, #12
 8001dec:	af00      	add	r7, sp, #0
 8001dee:	6078      	str	r0, [r7, #4]
 8001df0:	460b      	mov	r3, r1
 8001df2:	807b      	strh	r3, [r7, #2]
 8001df4:	4613      	mov	r3, r2
 8001df6:	707b      	strb	r3, [r7, #1]
 8001df8:	787b      	ldrb	r3, [r7, #1]
 8001dfa:	2b00      	cmp	r3, #0
 8001dfc:	d003      	beq.n	8001e06 <HAL_GPIO_WritePin+0x1e>
 8001dfe:	887a      	ldrh	r2, [r7, #2]
 8001e00:	687b      	ldr	r3, [r7, #4]
 8001e02:	611a      	str	r2, [r3, #16]
 8001e04:	e003      	b.n	8001e0e <HAL_GPIO_WritePin+0x26>
 8001e06:	887b      	ldrh	r3, [r7, #2]
 8001e08:	041a      	lsls	r2, r3, #16
 8001e0a:	687b      	ldr	r3, [r7, #4]
 8001e0c:	611a      	str	r2, [r3, #16]
 8001e0e:	bf00      	nop
 8001e10:	370c      	adds	r7, #12
 8001e12:	46bd      	mov	sp, r7
 8001e14:	bc80      	pop	{r7}
 8001e16:	4770      	bx	lr

08001e18 <HAL_GPIO_TogglePin>:
 8001e18:	b480      	push	{r7}
 8001e1a:	b085      	sub	sp, #20
 8001e1c:	af00      	add	r7, sp, #0
 8001e1e:	6078      	str	r0, [r7, #4]
 8001e20:	460b      	mov	r3, r1
 8001e22:	807b      	strh	r3, [r7, #2]
 8001e24:	687b      	ldr	r3, [r7, #4]
 8001e26:	68db      	ldr	r3, [r3, #12]
 8001e28:	60fb      	str	r3, [r7, #12]
 8001e2a:	887a      	ldrh	r2, [r7, #2]
 8001e2c:	68fb      	ldr	r3, [r7, #12]
 8001e2e:	4013      	ands	r3, r2
 8001e30:	041a      	lsls	r2, r3, #16
 8001e32:	68fb      	ldr	r3, [r7, #12]
 8001e34:	43d9      	mvns	r1, r3
 8001e36:	887b      	ldrh	r3, [r7, #2]
 8001e38:	400b      	ands	r3, r1
 8001e3a:	431a      	orrs	r2, r3
 8001e3c:	687b      	ldr	r3, [r7, #4]
 8001e3e:	611a      	str	r2, [r3, #16]
 8001e40:	bf00      	nop
 8001e42:	3714      	adds	r7, #20
 8001e44:	46bd      	mov	sp, r7
 8001e46:	bc80      	pop	{r7}
 8001e48:	4770      	bx	lr
	...

08001e4c <HAL_RCC_OscConfig>:
 8001e4c:	b580      	push	{r7, lr}
 8001e4e:	b086      	sub	sp, #24
 8001e50:	af00      	add	r7, sp, #0
 8001e52:	6078      	str	r0, [r7, #4]
 8001e54:	687b      	ldr	r3, [r7, #4]
 8001e56:	2b00      	cmp	r3, #0
 8001e58:	d101      	bne.n	8001e5e <HAL_RCC_OscConfig+0x12>
 8001e5a:	2301      	movs	r3, #1
 8001e5c:	e272      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8001e5e:	687b      	ldr	r3, [r7, #4]
 8001e60:	681b      	ldr	r3, [r3, #0]
 8001e62:	f003 0301 	and.w	r3, r3, #1
 8001e66:	2b00      	cmp	r3, #0
 8001e68:	f000 8087 	beq.w	8001f7a <HAL_RCC_OscConfig+0x12e>
 8001e6c:	4b92      	ldr	r3, [pc, #584]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001e6e:	685b      	ldr	r3, [r3, #4]
 8001e70:	f003 030c 	and.w	r3, r3, #12
 8001e74:	2b04      	cmp	r3, #4
 8001e76:	d00c      	beq.n	8001e92 <HAL_RCC_OscConfig+0x46>
 8001e78:	4b8f      	ldr	r3, [pc, #572]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001e7a:	685b      	ldr	r3, [r3, #4]
 8001e7c:	f003 030c 	and.w	r3, r3, #12
 8001e80:	2b08      	cmp	r3, #8
 8001e82:	d112      	bne.n	8001eaa <HAL_RCC_OscConfig+0x5e>
 8001e84:	4b8c      	ldr	r3, [pc, #560]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001e86:	685b      	ldr	r3, [r3, #4]
 8001e88:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001e8c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001e90:	d10b      	bne.n	8001eaa <HAL_RCC_OscConfig+0x5e>
 8001e92:	4b89      	ldr	r3, [pc, #548]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001e94:	681b      	ldr	r3, [r3, #0]
 8001e96:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001e9a:	2b00      	cmp	r3, #0
 8001e9c:	d06c      	beq.n	8001f78 <HAL_RCC_OscConfig+0x12c>
 8001e9e:	687b      	ldr	r3, [r7, #4]
 8001ea0:	685b      	ldr	r3, [r3, #4]
 8001ea2:	2b00      	cmp	r3, #0
 8001ea4:	d168      	bne.n	8001f78 <HAL_RCC_OscConfig+0x12c>
 8001ea6:	2301      	movs	r3, #1
 8001ea8:	e24c      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8001eaa:	687b      	ldr	r3, [r7, #4]
 8001eac:	685b      	ldr	r3, [r3, #4]
 8001eae:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001eb2:	d106      	bne.n	8001ec2 <HAL_RCC_OscConfig+0x76>
 8001eb4:	4b80      	ldr	r3, [pc, #512]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001eb6:	681b      	ldr	r3, [r3, #0]
 8001eb8:	4a7f      	ldr	r2, [pc, #508]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001eba:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001ebe:	6013      	str	r3, [r2, #0]
 8001ec0:	e02e      	b.n	8001f20 <HAL_RCC_OscConfig+0xd4>
 8001ec2:	687b      	ldr	r3, [r7, #4]
 8001ec4:	685b      	ldr	r3, [r3, #4]
 8001ec6:	2b00      	cmp	r3, #0
 8001ec8:	d10c      	bne.n	8001ee4 <HAL_RCC_OscConfig+0x98>
 8001eca:	4b7b      	ldr	r3, [pc, #492]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001ecc:	681b      	ldr	r3, [r3, #0]
 8001ece:	4a7a      	ldr	r2, [pc, #488]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001ed0:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001ed4:	6013      	str	r3, [r2, #0]
 8001ed6:	4b78      	ldr	r3, [pc, #480]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001ed8:	681b      	ldr	r3, [r3, #0]
 8001eda:	4a77      	ldr	r2, [pc, #476]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001edc:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001ee0:	6013      	str	r3, [r2, #0]
 8001ee2:	e01d      	b.n	8001f20 <HAL_RCC_OscConfig+0xd4>
 8001ee4:	687b      	ldr	r3, [r7, #4]
 8001ee6:	685b      	ldr	r3, [r3, #4]
 8001ee8:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8001eec:	d10c      	bne.n	8001f08 <HAL_RCC_OscConfig+0xbc>
 8001eee:	4b72      	ldr	r3, [pc, #456]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001ef0:	681b      	ldr	r3, [r3, #0]
 8001ef2:	4a71      	ldr	r2, [pc, #452]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001ef4:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001ef8:	6013      	str	r3, [r2, #0]
 8001efa:	4b6f      	ldr	r3, [pc, #444]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001efc:	681b      	ldr	r3, [r3, #0]
 8001efe:	4a6e      	ldr	r2, [pc, #440]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001f00:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001f04:	6013      	str	r3, [r2, #0]
 8001f06:	e00b      	b.n	8001f20 <HAL_RCC_OscConfig+0xd4>
 8001f08:	4b6b      	ldr	r3, [pc, #428]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001f0a:	681b      	ldr	r3, [r3, #0]
 8001f0c:	4a6a      	ldr	r2, [pc, #424]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001f0e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001f12:	6013      	str	r3, [r2, #0]
 8001f14:	4b68      	ldr	r3, [pc, #416]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001f16:	681b      	ldr	r3, [r3, #0]
 8001f18:	4a67      	ldr	r2, [pc, #412]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001f1a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001f1e:	6013      	str	r3, [r2, #0]
 8001f20:	687b      	ldr	r3, [r7, #4]
 8001f22:	685b      	ldr	r3, [r3, #4]
 8001f24:	2b00      	cmp	r3, #0
 8001f26:	d013      	beq.n	8001f50 <HAL_RCC_OscConfig+0x104>
 8001f28:	f7fe fe66 	bl	8000bf8 <HAL_GetTick>
 8001f2c:	6138      	str	r0, [r7, #16]
 8001f2e:	e008      	b.n	8001f42 <HAL_RCC_OscConfig+0xf6>
 8001f30:	f7fe fe62 	bl	8000bf8 <HAL_GetTick>
 8001f34:	4602      	mov	r2, r0
 8001f36:	693b      	ldr	r3, [r7, #16]
 8001f38:	1ad3      	subs	r3, r2, r3
 8001f3a:	2b64      	cmp	r3, #100	@ 0x64
 8001f3c:	d901      	bls.n	8001f42 <HAL_RCC_OscConfig+0xf6>
 8001f3e:	2303      	movs	r3, #3
 8001f40:	e200      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8001f42:	4b5d      	ldr	r3, [pc, #372]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001f44:	681b      	ldr	r3, [r3, #0]
 8001f46:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001f4a:	2b00      	cmp	r3, #0
 8001f4c:	d0f0      	beq.n	8001f30 <HAL_RCC_OscConfig+0xe4>
 8001f4e:	e014      	b.n	8001f7a <HAL_RCC_OscConfig+0x12e>
 8001f50:	f7fe fe52 	bl	8000bf8 <HAL_GetTick>
 8001f54:	6138      	str	r0, [r7, #16]
 8001f56:	e008      	b.n	8001f6a <HAL_RCC_OscConfig+0x11e>
 8001f58:	f7fe fe4e 	bl	8000bf8 <HAL_GetTick>
 8001f5c:	4602      	mov	r2, r0
 8001f5e:	693b      	ldr	r3, [r7, #16]
 8001f60:	1ad3      	subs	r3, r2, r3
 8001f62:	2b64      	cmp	r3, #100	@ 0x64
 8001f64:	d901      	bls.n	8001f6a <HAL_RCC_OscConfig+0x11e>
 8001f66:	2303      	movs	r3, #3
 8001f68:	e1ec      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8001f6a:	4b53      	ldr	r3, [pc, #332]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001f6c:	681b      	ldr	r3, [r3, #0]
 8001f6e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001f72:	2b00      	cmp	r3, #0
 8001f74:	d1f0      	bne.n	8001f58 <HAL_RCC_OscConfig+0x10c>
 8001f76:	e000      	b.n	8001f7a <HAL_RCC_OscConfig+0x12e>
 8001f78:	bf00      	nop
 8001f7a:	687b      	ldr	r3, [r7, #4]
 8001f7c:	681b      	ldr	r3, [r3, #0]
 8001f7e:	f003 0302 	and.w	r3, r3, #2
 8001f82:	2b00      	cmp	r3, #0
 8001f84:	d063      	beq.n	800204e <HAL_RCC_OscConfig+0x202>
 8001f86:	4b4c      	ldr	r3, [pc, #304]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001f88:	685b      	ldr	r3, [r3, #4]
 8001f8a:	f003 030c 	and.w	r3, r3, #12
 8001f8e:	2b00      	cmp	r3, #0
 8001f90:	d00b      	beq.n	8001faa <HAL_RCC_OscConfig+0x15e>
 8001f92:	4b49      	ldr	r3, [pc, #292]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001f94:	685b      	ldr	r3, [r3, #4]
 8001f96:	f003 030c 	and.w	r3, r3, #12
 8001f9a:	2b08      	cmp	r3, #8
 8001f9c:	d11c      	bne.n	8001fd8 <HAL_RCC_OscConfig+0x18c>
 8001f9e:	4b46      	ldr	r3, [pc, #280]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001fa0:	685b      	ldr	r3, [r3, #4]
 8001fa2:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001fa6:	2b00      	cmp	r3, #0
 8001fa8:	d116      	bne.n	8001fd8 <HAL_RCC_OscConfig+0x18c>
 8001faa:	4b43      	ldr	r3, [pc, #268]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001fac:	681b      	ldr	r3, [r3, #0]
 8001fae:	f003 0302 	and.w	r3, r3, #2
 8001fb2:	2b00      	cmp	r3, #0
 8001fb4:	d005      	beq.n	8001fc2 <HAL_RCC_OscConfig+0x176>
 8001fb6:	687b      	ldr	r3, [r7, #4]
 8001fb8:	691b      	ldr	r3, [r3, #16]
 8001fba:	2b01      	cmp	r3, #1
 8001fbc:	d001      	beq.n	8001fc2 <HAL_RCC_OscConfig+0x176>
 8001fbe:	2301      	movs	r3, #1
 8001fc0:	e1c0      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8001fc2:	4b3d      	ldr	r3, [pc, #244]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001fc4:	681b      	ldr	r3, [r3, #0]
 8001fc6:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8001fca:	687b      	ldr	r3, [r7, #4]
 8001fcc:	695b      	ldr	r3, [r3, #20]
 8001fce:	00db      	lsls	r3, r3, #3
 8001fd0:	4939      	ldr	r1, [pc, #228]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8001fd2:	4313      	orrs	r3, r2
 8001fd4:	600b      	str	r3, [r1, #0]
 8001fd6:	e03a      	b.n	800204e <HAL_RCC_OscConfig+0x202>
 8001fd8:	687b      	ldr	r3, [r7, #4]
 8001fda:	691b      	ldr	r3, [r3, #16]
 8001fdc:	2b00      	cmp	r3, #0
 8001fde:	d020      	beq.n	8002022 <HAL_RCC_OscConfig+0x1d6>
 8001fe0:	4b36      	ldr	r3, [pc, #216]	@ (80020bc <HAL_RCC_OscConfig+0x270>)
 8001fe2:	2201      	movs	r2, #1
 8001fe4:	601a      	str	r2, [r3, #0]
 8001fe6:	f7fe fe07 	bl	8000bf8 <HAL_GetTick>
 8001fea:	6138      	str	r0, [r7, #16]
 8001fec:	e008      	b.n	8002000 <HAL_RCC_OscConfig+0x1b4>
 8001fee:	f7fe fe03 	bl	8000bf8 <HAL_GetTick>
 8001ff2:	4602      	mov	r2, r0
 8001ff4:	693b      	ldr	r3, [r7, #16]
 8001ff6:	1ad3      	subs	r3, r2, r3
 8001ff8:	2b02      	cmp	r3, #2
 8001ffa:	d901      	bls.n	8002000 <HAL_RCC_OscConfig+0x1b4>
 8001ffc:	2303      	movs	r3, #3
 8001ffe:	e1a1      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8002000:	4b2d      	ldr	r3, [pc, #180]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8002002:	681b      	ldr	r3, [r3, #0]
 8002004:	f003 0302 	and.w	r3, r3, #2
 8002008:	2b00      	cmp	r3, #0
 800200a:	d0f0      	beq.n	8001fee <HAL_RCC_OscConfig+0x1a2>
 800200c:	4b2a      	ldr	r3, [pc, #168]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 800200e:	681b      	ldr	r3, [r3, #0]
 8002010:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8002014:	687b      	ldr	r3, [r7, #4]
 8002016:	695b      	ldr	r3, [r3, #20]
 8002018:	00db      	lsls	r3, r3, #3
 800201a:	4927      	ldr	r1, [pc, #156]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 800201c:	4313      	orrs	r3, r2
 800201e:	600b      	str	r3, [r1, #0]
 8002020:	e015      	b.n	800204e <HAL_RCC_OscConfig+0x202>
 8002022:	4b26      	ldr	r3, [pc, #152]	@ (80020bc <HAL_RCC_OscConfig+0x270>)
 8002024:	2200      	movs	r2, #0
 8002026:	601a      	str	r2, [r3, #0]
 8002028:	f7fe fde6 	bl	8000bf8 <HAL_GetTick>
 800202c:	6138      	str	r0, [r7, #16]
 800202e:	e008      	b.n	8002042 <HAL_RCC_OscConfig+0x1f6>
 8002030:	f7fe fde2 	bl	8000bf8 <HAL_GetTick>
 8002034:	4602      	mov	r2, r0
 8002036:	693b      	ldr	r3, [r7, #16]
 8002038:	1ad3      	subs	r3, r2, r3
 800203a:	2b02      	cmp	r3, #2
 800203c:	d901      	bls.n	8002042 <HAL_RCC_OscConfig+0x1f6>
 800203e:	2303      	movs	r3, #3
 8002040:	e180      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8002042:	4b1d      	ldr	r3, [pc, #116]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8002044:	681b      	ldr	r3, [r3, #0]
 8002046:	f003 0302 	and.w	r3, r3, #2
 800204a:	2b00      	cmp	r3, #0
 800204c:	d1f0      	bne.n	8002030 <HAL_RCC_OscConfig+0x1e4>
 800204e:	687b      	ldr	r3, [r7, #4]
 8002050:	681b      	ldr	r3, [r3, #0]
 8002052:	f003 0308 	and.w	r3, r3, #8
 8002056:	2b00      	cmp	r3, #0
 8002058:	d03a      	beq.n	80020d0 <HAL_RCC_OscConfig+0x284>
 800205a:	687b      	ldr	r3, [r7, #4]
 800205c:	699b      	ldr	r3, [r3, #24]
 800205e:	2b00      	cmp	r3, #0
 8002060:	d019      	beq.n	8002096 <HAL_RCC_OscConfig+0x24a>
 8002062:	4b17      	ldr	r3, [pc, #92]	@ (80020c0 <HAL_RCC_OscConfig+0x274>)
 8002064:	2201      	movs	r2, #1
 8002066:	601a      	str	r2, [r3, #0]
 8002068:	f7fe fdc6 	bl	8000bf8 <HAL_GetTick>
 800206c:	6138      	str	r0, [r7, #16]
 800206e:	e008      	b.n	8002082 <HAL_RCC_OscConfig+0x236>
 8002070:	f7fe fdc2 	bl	8000bf8 <HAL_GetTick>
 8002074:	4602      	mov	r2, r0
 8002076:	693b      	ldr	r3, [r7, #16]
 8002078:	1ad3      	subs	r3, r2, r3
 800207a:	2b02      	cmp	r3, #2
 800207c:	d901      	bls.n	8002082 <HAL_RCC_OscConfig+0x236>
 800207e:	2303      	movs	r3, #3
 8002080:	e160      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8002082:	4b0d      	ldr	r3, [pc, #52]	@ (80020b8 <HAL_RCC_OscConfig+0x26c>)
 8002084:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002086:	f003 0302 	and.w	r3, r3, #2
 800208a:	2b00      	cmp	r3, #0
 800208c:	d0f0      	beq.n	8002070 <HAL_RCC_OscConfig+0x224>
 800208e:	2001      	movs	r0, #1
 8002090:	f000 fa9c 	bl	80025cc <RCC_Delay>
 8002094:	e01c      	b.n	80020d0 <HAL_RCC_OscConfig+0x284>
 8002096:	4b0a      	ldr	r3, [pc, #40]	@ (80020c0 <HAL_RCC_OscConfig+0x274>)
 8002098:	2200      	movs	r2, #0
 800209a:	601a      	str	r2, [r3, #0]
 800209c:	f7fe fdac 	bl	8000bf8 <HAL_GetTick>
 80020a0:	6138      	str	r0, [r7, #16]
 80020a2:	e00f      	b.n	80020c4 <HAL_RCC_OscConfig+0x278>
 80020a4:	f7fe fda8 	bl	8000bf8 <HAL_GetTick>
 80020a8:	4602      	mov	r2, r0
 80020aa:	693b      	ldr	r3, [r7, #16]
 80020ac:	1ad3      	subs	r3, r2, r3
 80020ae:	2b02      	cmp	r3, #2
 80020b0:	d908      	bls.n	80020c4 <HAL_RCC_OscConfig+0x278>
 80020b2:	2303      	movs	r3, #3
 80020b4:	e146      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 80020b6:	bf00      	nop
 80020b8:	40021000 	.word	0x40021000
 80020bc:	42420000 	.word	0x42420000
 80020c0:	42420480 	.word	0x42420480
 80020c4:	4b92      	ldr	r3, [pc, #584]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80020c6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80020c8:	f003 0302 	and.w	r3, r3, #2
 80020cc:	2b00      	cmp	r3, #0
 80020ce:	d1e9      	bne.n	80020a4 <HAL_RCC_OscConfig+0x258>
 80020d0:	687b      	ldr	r3, [r7, #4]
 80020d2:	681b      	ldr	r3, [r3, #0]
 80020d4:	f003 0304 	and.w	r3, r3, #4
 80020d8:	2b00      	cmp	r3, #0
 80020da:	f000 80a6 	beq.w	800222a <HAL_RCC_OscConfig+0x3de>
 80020de:	2300      	movs	r3, #0
 80020e0:	75fb      	strb	r3, [r7, #23]
 80020e2:	4b8b      	ldr	r3, [pc, #556]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80020e4:	69db      	ldr	r3, [r3, #28]
 80020e6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80020ea:	2b00      	cmp	r3, #0
 80020ec:	d10d      	bne.n	800210a <HAL_RCC_OscConfig+0x2be>
 80020ee:	4b88      	ldr	r3, [pc, #544]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80020f0:	69db      	ldr	r3, [r3, #28]
 80020f2:	4a87      	ldr	r2, [pc, #540]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80020f4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80020f8:	61d3      	str	r3, [r2, #28]
 80020fa:	4b85      	ldr	r3, [pc, #532]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80020fc:	69db      	ldr	r3, [r3, #28]
 80020fe:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002102:	60bb      	str	r3, [r7, #8]
 8002104:	68bb      	ldr	r3, [r7, #8]
 8002106:	2301      	movs	r3, #1
 8002108:	75fb      	strb	r3, [r7, #23]
 800210a:	4b82      	ldr	r3, [pc, #520]	@ (8002314 <HAL_RCC_OscConfig+0x4c8>)
 800210c:	681b      	ldr	r3, [r3, #0]
 800210e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002112:	2b00      	cmp	r3, #0
 8002114:	d118      	bne.n	8002148 <HAL_RCC_OscConfig+0x2fc>
 8002116:	4b7f      	ldr	r3, [pc, #508]	@ (8002314 <HAL_RCC_OscConfig+0x4c8>)
 8002118:	681b      	ldr	r3, [r3, #0]
 800211a:	4a7e      	ldr	r2, [pc, #504]	@ (8002314 <HAL_RCC_OscConfig+0x4c8>)
 800211c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002120:	6013      	str	r3, [r2, #0]
 8002122:	f7fe fd69 	bl	8000bf8 <HAL_GetTick>
 8002126:	6138      	str	r0, [r7, #16]
 8002128:	e008      	b.n	800213c <HAL_RCC_OscConfig+0x2f0>
 800212a:	f7fe fd65 	bl	8000bf8 <HAL_GetTick>
 800212e:	4602      	mov	r2, r0
 8002130:	693b      	ldr	r3, [r7, #16]
 8002132:	1ad3      	subs	r3, r2, r3
 8002134:	2b64      	cmp	r3, #100	@ 0x64
 8002136:	d901      	bls.n	800213c <HAL_RCC_OscConfig+0x2f0>
 8002138:	2303      	movs	r3, #3
 800213a:	e103      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 800213c:	4b75      	ldr	r3, [pc, #468]	@ (8002314 <HAL_RCC_OscConfig+0x4c8>)
 800213e:	681b      	ldr	r3, [r3, #0]
 8002140:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002144:	2b00      	cmp	r3, #0
 8002146:	d0f0      	beq.n	800212a <HAL_RCC_OscConfig+0x2de>
 8002148:	687b      	ldr	r3, [r7, #4]
 800214a:	68db      	ldr	r3, [r3, #12]
 800214c:	2b01      	cmp	r3, #1
 800214e:	d106      	bne.n	800215e <HAL_RCC_OscConfig+0x312>
 8002150:	4b6f      	ldr	r3, [pc, #444]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002152:	6a1b      	ldr	r3, [r3, #32]
 8002154:	4a6e      	ldr	r2, [pc, #440]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002156:	f043 0301 	orr.w	r3, r3, #1
 800215a:	6213      	str	r3, [r2, #32]
 800215c:	e02d      	b.n	80021ba <HAL_RCC_OscConfig+0x36e>
 800215e:	687b      	ldr	r3, [r7, #4]
 8002160:	68db      	ldr	r3, [r3, #12]
 8002162:	2b00      	cmp	r3, #0
 8002164:	d10c      	bne.n	8002180 <HAL_RCC_OscConfig+0x334>
 8002166:	4b6a      	ldr	r3, [pc, #424]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002168:	6a1b      	ldr	r3, [r3, #32]
 800216a:	4a69      	ldr	r2, [pc, #420]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 800216c:	f023 0301 	bic.w	r3, r3, #1
 8002170:	6213      	str	r3, [r2, #32]
 8002172:	4b67      	ldr	r3, [pc, #412]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002174:	6a1b      	ldr	r3, [r3, #32]
 8002176:	4a66      	ldr	r2, [pc, #408]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002178:	f023 0304 	bic.w	r3, r3, #4
 800217c:	6213      	str	r3, [r2, #32]
 800217e:	e01c      	b.n	80021ba <HAL_RCC_OscConfig+0x36e>
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	68db      	ldr	r3, [r3, #12]
 8002184:	2b05      	cmp	r3, #5
 8002186:	d10c      	bne.n	80021a2 <HAL_RCC_OscConfig+0x356>
 8002188:	4b61      	ldr	r3, [pc, #388]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 800218a:	6a1b      	ldr	r3, [r3, #32]
 800218c:	4a60      	ldr	r2, [pc, #384]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 800218e:	f043 0304 	orr.w	r3, r3, #4
 8002192:	6213      	str	r3, [r2, #32]
 8002194:	4b5e      	ldr	r3, [pc, #376]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002196:	6a1b      	ldr	r3, [r3, #32]
 8002198:	4a5d      	ldr	r2, [pc, #372]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 800219a:	f043 0301 	orr.w	r3, r3, #1
 800219e:	6213      	str	r3, [r2, #32]
 80021a0:	e00b      	b.n	80021ba <HAL_RCC_OscConfig+0x36e>
 80021a2:	4b5b      	ldr	r3, [pc, #364]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80021a4:	6a1b      	ldr	r3, [r3, #32]
 80021a6:	4a5a      	ldr	r2, [pc, #360]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80021a8:	f023 0301 	bic.w	r3, r3, #1
 80021ac:	6213      	str	r3, [r2, #32]
 80021ae:	4b58      	ldr	r3, [pc, #352]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80021b0:	6a1b      	ldr	r3, [r3, #32]
 80021b2:	4a57      	ldr	r2, [pc, #348]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80021b4:	f023 0304 	bic.w	r3, r3, #4
 80021b8:	6213      	str	r3, [r2, #32]
 80021ba:	687b      	ldr	r3, [r7, #4]
 80021bc:	68db      	ldr	r3, [r3, #12]
 80021be:	2b00      	cmp	r3, #0
 80021c0:	d015      	beq.n	80021ee <HAL_RCC_OscConfig+0x3a2>
 80021c2:	f7fe fd19 	bl	8000bf8 <HAL_GetTick>
 80021c6:	6138      	str	r0, [r7, #16]
 80021c8:	e00a      	b.n	80021e0 <HAL_RCC_OscConfig+0x394>
 80021ca:	f7fe fd15 	bl	8000bf8 <HAL_GetTick>
 80021ce:	4602      	mov	r2, r0
 80021d0:	693b      	ldr	r3, [r7, #16]
 80021d2:	1ad3      	subs	r3, r2, r3
 80021d4:	f241 3288 	movw	r2, #5000	@ 0x1388
 80021d8:	4293      	cmp	r3, r2
 80021da:	d901      	bls.n	80021e0 <HAL_RCC_OscConfig+0x394>
 80021dc:	2303      	movs	r3, #3
 80021de:	e0b1      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 80021e0:	4b4b      	ldr	r3, [pc, #300]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80021e2:	6a1b      	ldr	r3, [r3, #32]
 80021e4:	f003 0302 	and.w	r3, r3, #2
 80021e8:	2b00      	cmp	r3, #0
 80021ea:	d0ee      	beq.n	80021ca <HAL_RCC_OscConfig+0x37e>
 80021ec:	e014      	b.n	8002218 <HAL_RCC_OscConfig+0x3cc>
 80021ee:	f7fe fd03 	bl	8000bf8 <HAL_GetTick>
 80021f2:	6138      	str	r0, [r7, #16]
 80021f4:	e00a      	b.n	800220c <HAL_RCC_OscConfig+0x3c0>
 80021f6:	f7fe fcff 	bl	8000bf8 <HAL_GetTick>
 80021fa:	4602      	mov	r2, r0
 80021fc:	693b      	ldr	r3, [r7, #16]
 80021fe:	1ad3      	subs	r3, r2, r3
 8002200:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002204:	4293      	cmp	r3, r2
 8002206:	d901      	bls.n	800220c <HAL_RCC_OscConfig+0x3c0>
 8002208:	2303      	movs	r3, #3
 800220a:	e09b      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 800220c:	4b40      	ldr	r3, [pc, #256]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 800220e:	6a1b      	ldr	r3, [r3, #32]
 8002210:	f003 0302 	and.w	r3, r3, #2
 8002214:	2b00      	cmp	r3, #0
 8002216:	d1ee      	bne.n	80021f6 <HAL_RCC_OscConfig+0x3aa>
 8002218:	7dfb      	ldrb	r3, [r7, #23]
 800221a:	2b01      	cmp	r3, #1
 800221c:	d105      	bne.n	800222a <HAL_RCC_OscConfig+0x3de>
 800221e:	4b3c      	ldr	r3, [pc, #240]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002220:	69db      	ldr	r3, [r3, #28]
 8002222:	4a3b      	ldr	r2, [pc, #236]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002224:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8002228:	61d3      	str	r3, [r2, #28]
 800222a:	687b      	ldr	r3, [r7, #4]
 800222c:	69db      	ldr	r3, [r3, #28]
 800222e:	2b00      	cmp	r3, #0
 8002230:	f000 8087 	beq.w	8002342 <HAL_RCC_OscConfig+0x4f6>
 8002234:	4b36      	ldr	r3, [pc, #216]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002236:	685b      	ldr	r3, [r3, #4]
 8002238:	f003 030c 	and.w	r3, r3, #12
 800223c:	2b08      	cmp	r3, #8
 800223e:	d061      	beq.n	8002304 <HAL_RCC_OscConfig+0x4b8>
 8002240:	687b      	ldr	r3, [r7, #4]
 8002242:	69db      	ldr	r3, [r3, #28]
 8002244:	2b02      	cmp	r3, #2
 8002246:	d146      	bne.n	80022d6 <HAL_RCC_OscConfig+0x48a>
 8002248:	4b33      	ldr	r3, [pc, #204]	@ (8002318 <HAL_RCC_OscConfig+0x4cc>)
 800224a:	2200      	movs	r2, #0
 800224c:	601a      	str	r2, [r3, #0]
 800224e:	f7fe fcd3 	bl	8000bf8 <HAL_GetTick>
 8002252:	6138      	str	r0, [r7, #16]
 8002254:	e008      	b.n	8002268 <HAL_RCC_OscConfig+0x41c>
 8002256:	f7fe fccf 	bl	8000bf8 <HAL_GetTick>
 800225a:	4602      	mov	r2, r0
 800225c:	693b      	ldr	r3, [r7, #16]
 800225e:	1ad3      	subs	r3, r2, r3
 8002260:	2b02      	cmp	r3, #2
 8002262:	d901      	bls.n	8002268 <HAL_RCC_OscConfig+0x41c>
 8002264:	2303      	movs	r3, #3
 8002266:	e06d      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8002268:	4b29      	ldr	r3, [pc, #164]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 800226a:	681b      	ldr	r3, [r3, #0]
 800226c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002270:	2b00      	cmp	r3, #0
 8002272:	d1f0      	bne.n	8002256 <HAL_RCC_OscConfig+0x40a>
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	6a1b      	ldr	r3, [r3, #32]
 8002278:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800227c:	d108      	bne.n	8002290 <HAL_RCC_OscConfig+0x444>
 800227e:	4b24      	ldr	r3, [pc, #144]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002280:	685b      	ldr	r3, [r3, #4]
 8002282:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 8002286:	687b      	ldr	r3, [r7, #4]
 8002288:	689b      	ldr	r3, [r3, #8]
 800228a:	4921      	ldr	r1, [pc, #132]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 800228c:	4313      	orrs	r3, r2
 800228e:	604b      	str	r3, [r1, #4]
 8002290:	4b1f      	ldr	r3, [pc, #124]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 8002292:	685b      	ldr	r3, [r3, #4]
 8002294:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8002298:	687b      	ldr	r3, [r7, #4]
 800229a:	6a19      	ldr	r1, [r3, #32]
 800229c:	687b      	ldr	r3, [r7, #4]
 800229e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80022a0:	430b      	orrs	r3, r1
 80022a2:	491b      	ldr	r1, [pc, #108]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80022a4:	4313      	orrs	r3, r2
 80022a6:	604b      	str	r3, [r1, #4]
 80022a8:	4b1b      	ldr	r3, [pc, #108]	@ (8002318 <HAL_RCC_OscConfig+0x4cc>)
 80022aa:	2201      	movs	r2, #1
 80022ac:	601a      	str	r2, [r3, #0]
 80022ae:	f7fe fca3 	bl	8000bf8 <HAL_GetTick>
 80022b2:	6138      	str	r0, [r7, #16]
 80022b4:	e008      	b.n	80022c8 <HAL_RCC_OscConfig+0x47c>
 80022b6:	f7fe fc9f 	bl	8000bf8 <HAL_GetTick>
 80022ba:	4602      	mov	r2, r0
 80022bc:	693b      	ldr	r3, [r7, #16]
 80022be:	1ad3      	subs	r3, r2, r3
 80022c0:	2b02      	cmp	r3, #2
 80022c2:	d901      	bls.n	80022c8 <HAL_RCC_OscConfig+0x47c>
 80022c4:	2303      	movs	r3, #3
 80022c6:	e03d      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 80022c8:	4b11      	ldr	r3, [pc, #68]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80022ca:	681b      	ldr	r3, [r3, #0]
 80022cc:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80022d0:	2b00      	cmp	r3, #0
 80022d2:	d0f0      	beq.n	80022b6 <HAL_RCC_OscConfig+0x46a>
 80022d4:	e035      	b.n	8002342 <HAL_RCC_OscConfig+0x4f6>
 80022d6:	4b10      	ldr	r3, [pc, #64]	@ (8002318 <HAL_RCC_OscConfig+0x4cc>)
 80022d8:	2200      	movs	r2, #0
 80022da:	601a      	str	r2, [r3, #0]
 80022dc:	f7fe fc8c 	bl	8000bf8 <HAL_GetTick>
 80022e0:	6138      	str	r0, [r7, #16]
 80022e2:	e008      	b.n	80022f6 <HAL_RCC_OscConfig+0x4aa>
 80022e4:	f7fe fc88 	bl	8000bf8 <HAL_GetTick>
 80022e8:	4602      	mov	r2, r0
 80022ea:	693b      	ldr	r3, [r7, #16]
 80022ec:	1ad3      	subs	r3, r2, r3
 80022ee:	2b02      	cmp	r3, #2
 80022f0:	d901      	bls.n	80022f6 <HAL_RCC_OscConfig+0x4aa>
 80022f2:	2303      	movs	r3, #3
 80022f4:	e026      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 80022f6:	4b06      	ldr	r3, [pc, #24]	@ (8002310 <HAL_RCC_OscConfig+0x4c4>)
 80022f8:	681b      	ldr	r3, [r3, #0]
 80022fa:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80022fe:	2b00      	cmp	r3, #0
 8002300:	d1f0      	bne.n	80022e4 <HAL_RCC_OscConfig+0x498>
 8002302:	e01e      	b.n	8002342 <HAL_RCC_OscConfig+0x4f6>
 8002304:	687b      	ldr	r3, [r7, #4]
 8002306:	69db      	ldr	r3, [r3, #28]
 8002308:	2b01      	cmp	r3, #1
 800230a:	d107      	bne.n	800231c <HAL_RCC_OscConfig+0x4d0>
 800230c:	2301      	movs	r3, #1
 800230e:	e019      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8002310:	40021000 	.word	0x40021000
 8002314:	40007000 	.word	0x40007000
 8002318:	42420060 	.word	0x42420060
 800231c:	4b0b      	ldr	r3, [pc, #44]	@ (800234c <HAL_RCC_OscConfig+0x500>)
 800231e:	685b      	ldr	r3, [r3, #4]
 8002320:	60fb      	str	r3, [r7, #12]
 8002322:	68fb      	ldr	r3, [r7, #12]
 8002324:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8002328:	687b      	ldr	r3, [r7, #4]
 800232a:	6a1b      	ldr	r3, [r3, #32]
 800232c:	429a      	cmp	r2, r3
 800232e:	d106      	bne.n	800233e <HAL_RCC_OscConfig+0x4f2>
 8002330:	68fb      	ldr	r3, [r7, #12]
 8002332:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8002336:	687b      	ldr	r3, [r7, #4]
 8002338:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800233a:	429a      	cmp	r2, r3
 800233c:	d001      	beq.n	8002342 <HAL_RCC_OscConfig+0x4f6>
 800233e:	2301      	movs	r3, #1
 8002340:	e000      	b.n	8002344 <HAL_RCC_OscConfig+0x4f8>
 8002342:	2300      	movs	r3, #0
 8002344:	4618      	mov	r0, r3
 8002346:	3718      	adds	r7, #24
 8002348:	46bd      	mov	sp, r7
 800234a:	bd80      	pop	{r7, pc}
 800234c:	40021000 	.word	0x40021000

08002350 <HAL_RCC_ClockConfig>:
 8002350:	b580      	push	{r7, lr}
 8002352:	b084      	sub	sp, #16
 8002354:	af00      	add	r7, sp, #0
 8002356:	6078      	str	r0, [r7, #4]
 8002358:	6039      	str	r1, [r7, #0]
 800235a:	687b      	ldr	r3, [r7, #4]
 800235c:	2b00      	cmp	r3, #0
 800235e:	d101      	bne.n	8002364 <HAL_RCC_ClockConfig+0x14>
 8002360:	2301      	movs	r3, #1
 8002362:	e0d0      	b.n	8002506 <HAL_RCC_ClockConfig+0x1b6>
 8002364:	4b6a      	ldr	r3, [pc, #424]	@ (8002510 <HAL_RCC_ClockConfig+0x1c0>)
 8002366:	681b      	ldr	r3, [r3, #0]
 8002368:	f003 0307 	and.w	r3, r3, #7
 800236c:	683a      	ldr	r2, [r7, #0]
 800236e:	429a      	cmp	r2, r3
 8002370:	d910      	bls.n	8002394 <HAL_RCC_ClockConfig+0x44>
 8002372:	4b67      	ldr	r3, [pc, #412]	@ (8002510 <HAL_RCC_ClockConfig+0x1c0>)
 8002374:	681b      	ldr	r3, [r3, #0]
 8002376:	f023 0207 	bic.w	r2, r3, #7
 800237a:	4965      	ldr	r1, [pc, #404]	@ (8002510 <HAL_RCC_ClockConfig+0x1c0>)
 800237c:	683b      	ldr	r3, [r7, #0]
 800237e:	4313      	orrs	r3, r2
 8002380:	600b      	str	r3, [r1, #0]
 8002382:	4b63      	ldr	r3, [pc, #396]	@ (8002510 <HAL_RCC_ClockConfig+0x1c0>)
 8002384:	681b      	ldr	r3, [r3, #0]
 8002386:	f003 0307 	and.w	r3, r3, #7
 800238a:	683a      	ldr	r2, [r7, #0]
 800238c:	429a      	cmp	r2, r3
 800238e:	d001      	beq.n	8002394 <HAL_RCC_ClockConfig+0x44>
 8002390:	2301      	movs	r3, #1
 8002392:	e0b8      	b.n	8002506 <HAL_RCC_ClockConfig+0x1b6>
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	681b      	ldr	r3, [r3, #0]
 8002398:	f003 0302 	and.w	r3, r3, #2
 800239c:	2b00      	cmp	r3, #0
 800239e:	d020      	beq.n	80023e2 <HAL_RCC_ClockConfig+0x92>
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	681b      	ldr	r3, [r3, #0]
 80023a4:	f003 0304 	and.w	r3, r3, #4
 80023a8:	2b00      	cmp	r3, #0
 80023aa:	d005      	beq.n	80023b8 <HAL_RCC_ClockConfig+0x68>
 80023ac:	4b59      	ldr	r3, [pc, #356]	@ (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80023ae:	685b      	ldr	r3, [r3, #4]
 80023b0:	4a58      	ldr	r2, [pc, #352]	@ (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80023b2:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 80023b6:	6053      	str	r3, [r2, #4]
 80023b8:	687b      	ldr	r3, [r7, #4]
 80023ba:	681b      	ldr	r3, [r3, #0]
 80023bc:	f003 0308 	and.w	r3, r3, #8
 80023c0:	2b00      	cmp	r3, #0
 80023c2:	d005      	beq.n	80023d0 <HAL_RCC_ClockConfig+0x80>
 80023c4:	4b53      	ldr	r3, [pc, #332]	@ (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80023c6:	685b      	ldr	r3, [r3, #4]
 80023c8:	4a52      	ldr	r2, [pc, #328]	@ (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80023ca:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 80023ce:	6053      	str	r3, [r2, #4]
 80023d0:	4b50      	ldr	r3, [pc, #320]	@ (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80023d2:	685b      	ldr	r3, [r3, #4]
 80023d4:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80023d8:	687b      	ldr	r3, [r7, #4]
 80023da:	689b      	ldr	r3, [r3, #8]
 80023dc:	494d      	ldr	r1, [pc, #308]	@ (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80023de:	4313      	orrs	r3, r2
 80023e0:	604b      	str	r3, [r1, #4]
 80023e2:	687b      	ldr	r3, [r7, #4]
 80023e4:	681b      	ldr	r3, [r3, #0]
 80023e6:	f003 0301 	and.w	r3, r3, #1
 80023ea:	2b00      	cmp	r3, #0
 80023ec:	d040      	beq.n	8002470 <HAL_RCC_ClockConfig+0x120>
 80023ee:	687b      	ldr	r3, [r7, #4]
 80023f0:	685b      	ldr	r3, [r3, #4]
 80023f2:	2b01      	cmp	r3, #1
 80023f4:	d107      	bne.n	8002406 <HAL_RCC_ClockConfig+0xb6>
 80023f6:	4b47      	ldr	r3, [pc, #284]	@ (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80023f8:	681b      	ldr	r3, [r3, #0]
 80023fa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80023fe:	2b00      	cmp	r3, #0
 8002400:	d115      	bne.n	800242e <HAL_RCC_ClockConfig+0xde>
 8002402:	2301      	movs	r3, #1
 8002404:	e07f      	b.n	8002506 <HAL_RCC_ClockConfig+0x1b6>
 8002406:	687b      	ldr	r3, [r7, #4]
 8002408:	685b      	ldr	r3, [r3, #4]
 800240a:	2b02      	cmp	r3, #2
 800240c:	d107      	bne.n	800241e <HAL_RCC_ClockConfig+0xce>
 800240e:	4b41      	ldr	r3, [pc, #260]	@ (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 8002410:	681b      	ldr	r3, [r3, #0]
 8002412:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002416:	2b00      	cmp	r3, #0
 8002418:	d109      	bne.n	800242e <HAL_RCC_ClockConfig+0xde>
 800241a:	2301      	movs	r3, #1
 800241c:	e073      	b.n	8002506 <HAL_RCC_ClockConfig+0x1b6>
 800241e:	4b3d      	ldr	r3, [pc, #244]	@ (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 8002420:	681b      	ldr	r3, [r3, #0]
 8002422:	f003 0302 	and.w	r3, r3, #2
 8002426:	2b00      	cmp	r3, #0
 8002428:	d101      	bne.n	800242e <HAL_RCC_ClockConfig+0xde>
 800242a:	2301      	movs	r3, #1
 800242c:	e06b      	b.n	8002506 <HAL_RCC_ClockConfig+0x1b6>
 800242e:	4b39      	ldr	r3, [pc, #228]	@ (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 8002430:	685b      	ldr	r3, [r3, #4]
 8002432:	f023 0203 	bic.w	r2, r3, #3
 8002436:	687b      	ldr	r3, [r7, #4]
 8002438:	685b      	ldr	r3, [r3, #4]
 800243a:	4936      	ldr	r1, [pc, #216]	@ (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 800243c:	4313      	orrs	r3, r2
 800243e:	604b      	str	r3, [r1, #4]
 8002440:	f7fe fbda 	bl	8000bf8 <HAL_GetTick>
 8002444:	60f8      	str	r0, [r7, #12]
 8002446:	e00a      	b.n	800245e <HAL_RCC_ClockConfig+0x10e>
 8002448:	f7fe fbd6 	bl	8000bf8 <HAL_GetTick>
 800244c:	4602      	mov	r2, r0
 800244e:	68fb      	ldr	r3, [r7, #12]
 8002450:	1ad3      	subs	r3, r2, r3
 8002452:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002456:	4293      	cmp	r3, r2
 8002458:	d901      	bls.n	800245e <HAL_RCC_ClockConfig+0x10e>
 800245a:	2303      	movs	r3, #3
 800245c:	e053      	b.n	8002506 <HAL_RCC_ClockConfig+0x1b6>
 800245e:	4b2d      	ldr	r3, [pc, #180]	@ (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 8002460:	685b      	ldr	r3, [r3, #4]
 8002462:	f003 020c 	and.w	r2, r3, #12
 8002466:	687b      	ldr	r3, [r7, #4]
 8002468:	685b      	ldr	r3, [r3, #4]
 800246a:	009b      	lsls	r3, r3, #2
 800246c:	429a      	cmp	r2, r3
 800246e:	d1eb      	bne.n	8002448 <HAL_RCC_ClockConfig+0xf8>
 8002470:	4b27      	ldr	r3, [pc, #156]	@ (8002510 <HAL_RCC_ClockConfig+0x1c0>)
 8002472:	681b      	ldr	r3, [r3, #0]
 8002474:	f003 0307 	and.w	r3, r3, #7
 8002478:	683a      	ldr	r2, [r7, #0]
 800247a:	429a      	cmp	r2, r3
 800247c:	d210      	bcs.n	80024a0 <HAL_RCC_ClockConfig+0x150>
 800247e:	4b24      	ldr	r3, [pc, #144]	@ (8002510 <HAL_RCC_ClockConfig+0x1c0>)
 8002480:	681b      	ldr	r3, [r3, #0]
 8002482:	f023 0207 	bic.w	r2, r3, #7
 8002486:	4922      	ldr	r1, [pc, #136]	@ (8002510 <HAL_RCC_ClockConfig+0x1c0>)
 8002488:	683b      	ldr	r3, [r7, #0]
 800248a:	4313      	orrs	r3, r2
 800248c:	600b      	str	r3, [r1, #0]
 800248e:	4b20      	ldr	r3, [pc, #128]	@ (8002510 <HAL_RCC_ClockConfig+0x1c0>)
 8002490:	681b      	ldr	r3, [r3, #0]
 8002492:	f003 0307 	and.w	r3, r3, #7
 8002496:	683a      	ldr	r2, [r7, #0]
 8002498:	429a      	cmp	r2, r3
 800249a:	d001      	beq.n	80024a0 <HAL_RCC_ClockConfig+0x150>
 800249c:	2301      	movs	r3, #1
 800249e:	e032      	b.n	8002506 <HAL_RCC_ClockConfig+0x1b6>
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	681b      	ldr	r3, [r3, #0]
 80024a4:	f003 0304 	and.w	r3, r3, #4
 80024a8:	2b00      	cmp	r3, #0
 80024aa:	d008      	beq.n	80024be <HAL_RCC_ClockConfig+0x16e>
 80024ac:	4b19      	ldr	r3, [pc, #100]	@ (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80024ae:	685b      	ldr	r3, [r3, #4]
 80024b0:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	68db      	ldr	r3, [r3, #12]
 80024b8:	4916      	ldr	r1, [pc, #88]	@ (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80024ba:	4313      	orrs	r3, r2
 80024bc:	604b      	str	r3, [r1, #4]
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	681b      	ldr	r3, [r3, #0]
 80024c2:	f003 0308 	and.w	r3, r3, #8
 80024c6:	2b00      	cmp	r3, #0
 80024c8:	d009      	beq.n	80024de <HAL_RCC_ClockConfig+0x18e>
 80024ca:	4b12      	ldr	r3, [pc, #72]	@ (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80024cc:	685b      	ldr	r3, [r3, #4]
 80024ce:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 80024d2:	687b      	ldr	r3, [r7, #4]
 80024d4:	691b      	ldr	r3, [r3, #16]
 80024d6:	00db      	lsls	r3, r3, #3
 80024d8:	490e      	ldr	r1, [pc, #56]	@ (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80024da:	4313      	orrs	r3, r2
 80024dc:	604b      	str	r3, [r1, #4]
 80024de:	f000 f821 	bl	8002524 <HAL_RCC_GetSysClockFreq>
 80024e2:	4602      	mov	r2, r0
 80024e4:	4b0b      	ldr	r3, [pc, #44]	@ (8002514 <HAL_RCC_ClockConfig+0x1c4>)
 80024e6:	685b      	ldr	r3, [r3, #4]
 80024e8:	091b      	lsrs	r3, r3, #4
 80024ea:	f003 030f 	and.w	r3, r3, #15
 80024ee:	490a      	ldr	r1, [pc, #40]	@ (8002518 <HAL_RCC_ClockConfig+0x1c8>)
 80024f0:	5ccb      	ldrb	r3, [r1, r3]
 80024f2:	fa22 f303 	lsr.w	r3, r2, r3
 80024f6:	4a09      	ldr	r2, [pc, #36]	@ (800251c <HAL_RCC_ClockConfig+0x1cc>)
 80024f8:	6013      	str	r3, [r2, #0]
 80024fa:	4b09      	ldr	r3, [pc, #36]	@ (8002520 <HAL_RCC_ClockConfig+0x1d0>)
 80024fc:	681b      	ldr	r3, [r3, #0]
 80024fe:	4618      	mov	r0, r3
 8002500:	f7fe fb38 	bl	8000b74 <HAL_InitTick>
 8002504:	2300      	movs	r3, #0
 8002506:	4618      	mov	r0, r3
 8002508:	3710      	adds	r7, #16
 800250a:	46bd      	mov	sp, r7
 800250c:	bd80      	pop	{r7, pc}
 800250e:	bf00      	nop
 8002510:	40022000 	.word	0x40022000
 8002514:	40021000 	.word	0x40021000
 8002518:	08002744 	.word	0x08002744
 800251c:	20000000 	.word	0x20000000
 8002520:	20000004 	.word	0x20000004

08002524 <HAL_RCC_GetSysClockFreq>:
 8002524:	b480      	push	{r7}
 8002526:	b087      	sub	sp, #28
 8002528:	af00      	add	r7, sp, #0
 800252a:	2300      	movs	r3, #0
 800252c:	60fb      	str	r3, [r7, #12]
 800252e:	2300      	movs	r3, #0
 8002530:	60bb      	str	r3, [r7, #8]
 8002532:	2300      	movs	r3, #0
 8002534:	617b      	str	r3, [r7, #20]
 8002536:	2300      	movs	r3, #0
 8002538:	607b      	str	r3, [r7, #4]
 800253a:	2300      	movs	r3, #0
 800253c:	613b      	str	r3, [r7, #16]
 800253e:	4b1e      	ldr	r3, [pc, #120]	@ (80025b8 <HAL_RCC_GetSysClockFreq+0x94>)
 8002540:	685b      	ldr	r3, [r3, #4]
 8002542:	60fb      	str	r3, [r7, #12]
 8002544:	68fb      	ldr	r3, [r7, #12]
 8002546:	f003 030c 	and.w	r3, r3, #12
 800254a:	2b04      	cmp	r3, #4
 800254c:	d002      	beq.n	8002554 <HAL_RCC_GetSysClockFreq+0x30>
 800254e:	2b08      	cmp	r3, #8
 8002550:	d003      	beq.n	800255a <HAL_RCC_GetSysClockFreq+0x36>
 8002552:	e027      	b.n	80025a4 <HAL_RCC_GetSysClockFreq+0x80>
 8002554:	4b19      	ldr	r3, [pc, #100]	@ (80025bc <HAL_RCC_GetSysClockFreq+0x98>)
 8002556:	613b      	str	r3, [r7, #16]
 8002558:	e027      	b.n	80025aa <HAL_RCC_GetSysClockFreq+0x86>
 800255a:	68fb      	ldr	r3, [r7, #12]
 800255c:	0c9b      	lsrs	r3, r3, #18
 800255e:	f003 030f 	and.w	r3, r3, #15
 8002562:	4a17      	ldr	r2, [pc, #92]	@ (80025c0 <HAL_RCC_GetSysClockFreq+0x9c>)
 8002564:	5cd3      	ldrb	r3, [r2, r3]
 8002566:	607b      	str	r3, [r7, #4]
 8002568:	68fb      	ldr	r3, [r7, #12]
 800256a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800256e:	2b00      	cmp	r3, #0
 8002570:	d010      	beq.n	8002594 <HAL_RCC_GetSysClockFreq+0x70>
 8002572:	4b11      	ldr	r3, [pc, #68]	@ (80025b8 <HAL_RCC_GetSysClockFreq+0x94>)
 8002574:	685b      	ldr	r3, [r3, #4]
 8002576:	0c5b      	lsrs	r3, r3, #17
 8002578:	f003 0301 	and.w	r3, r3, #1
 800257c:	4a11      	ldr	r2, [pc, #68]	@ (80025c4 <HAL_RCC_GetSysClockFreq+0xa0>)
 800257e:	5cd3      	ldrb	r3, [r2, r3]
 8002580:	60bb      	str	r3, [r7, #8]
 8002582:	687b      	ldr	r3, [r7, #4]
 8002584:	4a0d      	ldr	r2, [pc, #52]	@ (80025bc <HAL_RCC_GetSysClockFreq+0x98>)
 8002586:	fb03 f202 	mul.w	r2, r3, r2
 800258a:	68bb      	ldr	r3, [r7, #8]
 800258c:	fbb2 f3f3 	udiv	r3, r2, r3
 8002590:	617b      	str	r3, [r7, #20]
 8002592:	e004      	b.n	800259e <HAL_RCC_GetSysClockFreq+0x7a>
 8002594:	687b      	ldr	r3, [r7, #4]
 8002596:	4a0c      	ldr	r2, [pc, #48]	@ (80025c8 <HAL_RCC_GetSysClockFreq+0xa4>)
 8002598:	fb02 f303 	mul.w	r3, r2, r3
 800259c:	617b      	str	r3, [r7, #20]
 800259e:	697b      	ldr	r3, [r7, #20]
 80025a0:	613b      	str	r3, [r7, #16]
 80025a2:	e002      	b.n	80025aa <HAL_RCC_GetSysClockFreq+0x86>
 80025a4:	4b05      	ldr	r3, [pc, #20]	@ (80025bc <HAL_RCC_GetSysClockFreq+0x98>)
 80025a6:	613b      	str	r3, [r7, #16]
 80025a8:	bf00      	nop
 80025aa:	693b      	ldr	r3, [r7, #16]
 80025ac:	4618      	mov	r0, r3
 80025ae:	371c      	adds	r7, #28
 80025b0:	46bd      	mov	sp, r7
 80025b2:	bc80      	pop	{r7}
 80025b4:	4770      	bx	lr
 80025b6:	bf00      	nop
 80025b8:	40021000 	.word	0x40021000
 80025bc:	007a1200 	.word	0x007a1200
 80025c0:	08002754 	.word	0x08002754
 80025c4:	08002764 	.word	0x08002764
 80025c8:	003d0900 	.word	0x003d0900

080025cc <RCC_Delay>:
 80025cc:	b480      	push	{r7}
 80025ce:	b085      	sub	sp, #20
 80025d0:	af00      	add	r7, sp, #0
 80025d2:	6078      	str	r0, [r7, #4]
 80025d4:	4b0a      	ldr	r3, [pc, #40]	@ (8002600 <RCC_Delay+0x34>)
 80025d6:	681b      	ldr	r3, [r3, #0]
 80025d8:	4a0a      	ldr	r2, [pc, #40]	@ (8002604 <RCC_Delay+0x38>)
 80025da:	fba2 2303 	umull	r2, r3, r2, r3
 80025de:	0a5b      	lsrs	r3, r3, #9
 80025e0:	687a      	ldr	r2, [r7, #4]
 80025e2:	fb02 f303 	mul.w	r3, r2, r3
 80025e6:	60fb      	str	r3, [r7, #12]
 80025e8:	bf00      	nop
 80025ea:	68fb      	ldr	r3, [r7, #12]
 80025ec:	1e5a      	subs	r2, r3, #1
 80025ee:	60fa      	str	r2, [r7, #12]
 80025f0:	2b00      	cmp	r3, #0
 80025f2:	d1f9      	bne.n	80025e8 <RCC_Delay+0x1c>
 80025f4:	bf00      	nop
 80025f6:	bf00      	nop
 80025f8:	3714      	adds	r7, #20
 80025fa:	46bd      	mov	sp, r7
 80025fc:	bc80      	pop	{r7}
 80025fe:	4770      	bx	lr
 8002600:	20000000 	.word	0x20000000
 8002604:	10624dd3 	.word	0x10624dd3

08002608 <_ZdlPvj>:
 8002608:	f000 b800 	b.w	800260c <_ZdlPv>

0800260c <_ZdlPv>:
 800260c:	f000 b800 	b.w	8002610 <free>

08002610 <free>:
 8002610:	4b02      	ldr	r3, [pc, #8]	@ (800261c <free+0xc>)
 8002612:	4601      	mov	r1, r0
 8002614:	6818      	ldr	r0, [r3, #0]
 8002616:	f000 b83d 	b.w	8002694 <_free_r>
 800261a:	bf00      	nop
 800261c:	2000000c 	.word	0x2000000c

08002620 <__malloc_lock>:
 8002620:	4801      	ldr	r0, [pc, #4]	@ (8002628 <__malloc_lock+0x8>)
 8002622:	f000 b835 	b.w	8002690 <__retarget_lock_acquire_recursive>
 8002626:	bf00      	nop
 8002628:	20000204 	.word	0x20000204

0800262c <__malloc_unlock>:
 800262c:	4801      	ldr	r0, [pc, #4]	@ (8002634 <__malloc_unlock+0x8>)
 800262e:	f000 b830 	b.w	8002692 <__retarget_lock_release_recursive>
 8002632:	bf00      	nop
 8002634:	20000204 	.word	0x20000204

08002638 <memset>:
 8002638:	4603      	mov	r3, r0
 800263a:	4402      	add	r2, r0
 800263c:	4293      	cmp	r3, r2
 800263e:	d100      	bne.n	8002642 <memset+0xa>
 8002640:	4770      	bx	lr
 8002642:	f803 1b01 	strb.w	r1, [r3], #1
 8002646:	e7f9      	b.n	800263c <memset+0x4>

08002648 <__libc_init_array>:
 8002648:	b570      	push	{r4, r5, r6, lr}
 800264a:	2600      	movs	r6, #0
 800264c:	4d0c      	ldr	r5, [pc, #48]	@ (8002680 <__libc_init_array+0x38>)
 800264e:	4c0d      	ldr	r4, [pc, #52]	@ (8002684 <__libc_init_array+0x3c>)
 8002650:	1b64      	subs	r4, r4, r5
 8002652:	10a4      	asrs	r4, r4, #2
 8002654:	42a6      	cmp	r6, r4
 8002656:	d109      	bne.n	800266c <__libc_init_array+0x24>
 8002658:	f000 f864 	bl	8002724 <_init>
 800265c:	2600      	movs	r6, #0
 800265e:	4d0a      	ldr	r5, [pc, #40]	@ (8002688 <__libc_init_array+0x40>)
 8002660:	4c0a      	ldr	r4, [pc, #40]	@ (800268c <__libc_init_array+0x44>)
 8002662:	1b64      	subs	r4, r4, r5
 8002664:	10a4      	asrs	r4, r4, #2
 8002666:	42a6      	cmp	r6, r4
 8002668:	d105      	bne.n	8002676 <__libc_init_array+0x2e>
 800266a:	bd70      	pop	{r4, r5, r6, pc}
 800266c:	f855 3b04 	ldr.w	r3, [r5], #4
 8002670:	4798      	blx	r3
 8002672:	3601      	adds	r6, #1
 8002674:	e7ee      	b.n	8002654 <__libc_init_array+0xc>
 8002676:	f855 3b04 	ldr.w	r3, [r5], #4
 800267a:	4798      	blx	r3
 800267c:	3601      	adds	r6, #1
 800267e:	e7f2      	b.n	8002666 <__libc_init_array+0x1e>
 8002680:	08002768 	.word	0x08002768
 8002684:	08002768 	.word	0x08002768
 8002688:	08002768 	.word	0x08002768
 800268c:	0800276c 	.word	0x0800276c

08002690 <__retarget_lock_acquire_recursive>:
 8002690:	4770      	bx	lr

08002692 <__retarget_lock_release_recursive>:
 8002692:	4770      	bx	lr

08002694 <_free_r>:
 8002694:	b538      	push	{r3, r4, r5, lr}
 8002696:	4605      	mov	r5, r0
 8002698:	2900      	cmp	r1, #0
 800269a:	d040      	beq.n	800271e <_free_r+0x8a>
 800269c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80026a0:	1f0c      	subs	r4, r1, #4
 80026a2:	2b00      	cmp	r3, #0
 80026a4:	bfb8      	it	lt
 80026a6:	18e4      	addlt	r4, r4, r3
 80026a8:	f7ff ffba 	bl	8002620 <__malloc_lock>
 80026ac:	4a1c      	ldr	r2, [pc, #112]	@ (8002720 <_free_r+0x8c>)
 80026ae:	6813      	ldr	r3, [r2, #0]
 80026b0:	b933      	cbnz	r3, 80026c0 <_free_r+0x2c>
 80026b2:	6063      	str	r3, [r4, #4]
 80026b4:	6014      	str	r4, [r2, #0]
 80026b6:	4628      	mov	r0, r5
 80026b8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80026bc:	f7ff bfb6 	b.w	800262c <__malloc_unlock>
 80026c0:	42a3      	cmp	r3, r4
 80026c2:	d908      	bls.n	80026d6 <_free_r+0x42>
 80026c4:	6820      	ldr	r0, [r4, #0]
 80026c6:	1821      	adds	r1, r4, r0
 80026c8:	428b      	cmp	r3, r1
 80026ca:	bf01      	itttt	eq
 80026cc:	6819      	ldreq	r1, [r3, #0]
 80026ce:	685b      	ldreq	r3, [r3, #4]
 80026d0:	1809      	addeq	r1, r1, r0
 80026d2:	6021      	streq	r1, [r4, #0]
 80026d4:	e7ed      	b.n	80026b2 <_free_r+0x1e>
 80026d6:	461a      	mov	r2, r3
 80026d8:	685b      	ldr	r3, [r3, #4]
 80026da:	b10b      	cbz	r3, 80026e0 <_free_r+0x4c>
 80026dc:	42a3      	cmp	r3, r4
 80026de:	d9fa      	bls.n	80026d6 <_free_r+0x42>
 80026e0:	6811      	ldr	r1, [r2, #0]
 80026e2:	1850      	adds	r0, r2, r1
 80026e4:	42a0      	cmp	r0, r4
 80026e6:	d10b      	bne.n	8002700 <_free_r+0x6c>
 80026e8:	6820      	ldr	r0, [r4, #0]
 80026ea:	4401      	add	r1, r0
 80026ec:	1850      	adds	r0, r2, r1
 80026ee:	4283      	cmp	r3, r0
 80026f0:	6011      	str	r1, [r2, #0]
 80026f2:	d1e0      	bne.n	80026b6 <_free_r+0x22>
 80026f4:	6818      	ldr	r0, [r3, #0]
 80026f6:	685b      	ldr	r3, [r3, #4]
 80026f8:	4408      	add	r0, r1
 80026fa:	6010      	str	r0, [r2, #0]
 80026fc:	6053      	str	r3, [r2, #4]
 80026fe:	e7da      	b.n	80026b6 <_free_r+0x22>
 8002700:	d902      	bls.n	8002708 <_free_r+0x74>
 8002702:	230c      	movs	r3, #12
 8002704:	602b      	str	r3, [r5, #0]
 8002706:	e7d6      	b.n	80026b6 <_free_r+0x22>
 8002708:	6820      	ldr	r0, [r4, #0]
 800270a:	1821      	adds	r1, r4, r0
 800270c:	428b      	cmp	r3, r1
 800270e:	bf01      	itttt	eq
 8002710:	6819      	ldreq	r1, [r3, #0]
 8002712:	685b      	ldreq	r3, [r3, #4]
 8002714:	1809      	addeq	r1, r1, r0
 8002716:	6021      	streq	r1, [r4, #0]
 8002718:	6063      	str	r3, [r4, #4]
 800271a:	6054      	str	r4, [r2, #4]
 800271c:	e7cb      	b.n	80026b6 <_free_r+0x22>
 800271e:	bd38      	pop	{r3, r4, r5, pc}
 8002720:	200000c8 	.word	0x200000c8

08002724 <_init>:
 8002724:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002726:	bf00      	nop
 8002728:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800272a:	bc08      	pop	{r3}
 800272c:	469e      	mov	lr, r3
 800272e:	4770      	bx	lr

08002730 <_fini>:
 8002730:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002732:	bf00      	nop
 8002734:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002736:	bc08      	pop	{r3}
 8002738:	469e      	mov	lr, r3
 800273a:	4770      	bx	lr
